{
  "topic_metadata": {
    "id": 1107,
    "title": "What is the best practice for setting the enum numbering for every level individually?",
    "slug": "what-is-the-best-practice-for-setting-the-enum-numbering-for-every-level-individually",
    "posts_count": 7,
    "created_at": "2024-10-14T20:29:36.004Z",
    "last_posted_at": "2024-11-09T14:44:45.206Z",
    "views": 527,
    "like_count": 4,
    "reply_count": 2,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "SillyFreak",
    "tags": [
      "scripting",
      "numbering"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 469
  },
  "posts": [
    {
      "id": 3924,
      "post_number": 1,
      "username": "Sinthoras",
      "name": "",
      "created_at": "2024-10-14T20:29:36.173Z",
      "updated_at": "2024-10-14T20:29:36.173Z",
      "cooked": "<p>The normal enum numbering function has the problem, that the suffixes and prefixes are global for all levels of nestedness, but often, I want for example the first level to be <code>1.</code> but the second level <code>a)</code>, one with a dot the other with a parenthesis. My current solution is:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#set enum(full: true, numbering: (..nums) =&gt; {\n    let numbers = nums.pos()\n    if numbers.len() == 1 {\n      numbering(\"I.\", ..numbers)\n    } else if numbers.len() == 2 {\n      numbering(\"1.\", numbers.at(1))\n    } else if numbers.len() == 3 {\n      numbering(\"a)\", numbers.at(2))\n    } else if numbers.len() == 4 {\n      numbering(\"(1)\", numbers.at(3))\n    }\n  })\n</code></pre>\n<p>But I feel like there could be a better solution using less ifs, and not the <code>full: true</code>. Is there a better way to do it, a best practice?</p>",
      "raw": "The normal enum numbering function has the problem, that the suffixes and prefixes are global for all levels of nestedness, but often, I want for example the first level to be `1.` but the second level `a)`, one with a dot the other with a parenthesis. My current solution is:\n\n```typst\n#set enum(full: true, numbering: (..nums) => {\n    let numbers = nums.pos()\n    if numbers.len() == 1 {\n      numbering(\"I.\", ..numbers)\n    } else if numbers.len() == 2 {\n      numbering(\"1.\", numbers.at(1))\n    } else if numbers.len() == 3 {\n      numbering(\"a)\", numbers.at(2))\n    } else if numbers.len() == 4 {\n      numbering(\"(1)\", numbers.at(3))\n    }\n  })\n```\n\nBut I feel like there could be a better solution using less ifs, and not the `full: true`. Is there a better way to do it, a best practice?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 56,
      "score": 2316.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 511
    },
    {
      "id": 3925,
      "post_number": 2,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2024-10-14T20:52:47.272Z",
      "updated_at": "2024-10-14T20:53:13.128Z",
      "cooked": "<p>Isn’t using numbly as the solution (combined with <code>full</code>) also the answer here?</p>\n<aside class=\"quote\" data-post=\"3\" data-topic=\"1040\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    <img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/paran3xus/48/32_2.png\" class=\"avatar\">\n    <a href=\"https://forum.typst.app/t/how-can-i-change-the-heading-numbering-for-headings-of-different-levels-differently/1040/3\">How can I change the heading numbering for headings of different levels differently?</a> <a class=\"badge-category__wrapper \" href=\"/c/questions/5\"><span data-category-id=\"5\" style=\"--category-badge-color: #F7C000; --category-badge-text-color: #fdfdfd;\" data-drop-close=\"true\" class=\"badge-category \" title=\"Your questions about using Typst and the web app go in this category.\"><span class=\"badge-category__name\">Questions</span></span></a>\n  </div>\n  <blockquote>\n    Use <a href=\"https://typst.app/universe/package/numbly\">numbly</a>. \n#import \"@preview/numbly:0.1.0\": numbly\n#set heading(\n  numbering: numbly(\n    \"Top {1}:\",\n    \"{1}.{2}.\",\n  ),\n)\n\n= First section\n== Unterpunkt\n== Zweiter Unterpunkt\n\ngives \nTop 1: First section\n1.1. Unterpunkt\n1.2. Zweiter Unterpunkt\n  </blockquote>\n</aside>\n",
      "raw": "Isn't using numbly as the solution (combined with `full`) also the answer here?\n\nhttps://forum.typst.app/t/how-can-i-change-the-heading-numbering-for-headings-of-different-levels-differently/1040/3?u=sillyfreak",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 54,
      "score": 60.8,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 3926,
      "post_number": 3,
      "username": "Sinthoras",
      "name": "",
      "created_at": "2024-10-14T21:09:07.523Z",
      "updated_at": "2024-10-14T21:09:07.523Z",
      "cooked": "<p>You are right! Oh, wow. Now I feel dumb. I got away from using numbly for the section numbering, because I wanted to have the possibility that my sections start from section 0, which I can achieve manually but not with numbly, so I didn’t think of using it for the enum-numbering, but instead adapted my section numbering to also work there. Thanks for the anwer!</p>\n<p>If anyone is numbering, the full equivalent code is:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">  #import \"@preview/numbly:0.1.0\": numbly\n\n  #set enum(\n     full:true, \n     numbering: numbly(\"{1:I}.\", \"{2:1.}\", \"{3:a})\",\"({4})\" )\n  )\n</code></pre>",
      "raw": "You are right! Oh, wow. Now I feel dumb. I got away from using numbly for the section numbering, because I wanted to have the possibility that my sections start from section 0, which I can achieve manually but not with numbly, so I didn't think of using it for the enum-numbering, but instead adapted my section numbering to also work there. Thanks for the anwer!\n\nIf anyone is numbering, the full equivalent code is:\n```typst\n  #import \"@preview/numbly:0.1.0\": numbly\n\n  #set enum(\n     full:true, \n     numbering: numbly(\"{1:I}.\", \"{2:1.}\", \"{3:a})\",\"({4})\" )\n  )\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 53,
      "score": 115.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 511
    },
    {
      "id": 3928,
      "post_number": 4,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2024-10-14T21:49:02.815Z",
      "updated_at": "2024-10-14T21:49:29.240Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Sinthoras\" data-post=\"3\" data-topic=\"1107\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/s/F64C96/48.png\" class=\"avatar\"> Sinthoras:</div>\n<blockquote>\n<p>I wanted to have the possibility that my sections start from section 0, which I can achieve manually but not with numbly</p>\n</blockquote>\n</aside>\n<p>actually you can make numbly do this, just realize that <code>numbly()</code> is a function that returns a proper numbering function. So if you want to modify what numbers are put into <code>numbly(...)</code> you can write e.g. this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set heading(\n  numbering: (fst, ..nums) =&gt; numbly(\"Top {1}:\", \"{1}.{2}.\")(fst - 1, ..nums),\n)\n</code></pre>\n<p>(I used the heading example from the other thread as zero-based roman numbering doesn’t make as much sense)</p>",
      "raw": "[quote=\"Sinthoras, post:3, topic:1107\"]\nI wanted to have the possibility that my sections start from section 0, which I can achieve manually but not with numbly\n[/quote]\n\nactually you can make numbly do this, just realize that `numbly()` is a function that returns a proper numbering function. So if you want to modify what numbers are put into `numbly(...)` you can write e.g. this:\n```typ\n#set heading(\n  numbering: (fst, ..nums) => numbly(\"Top {1}:\", \"{1}.{2}.\")(fst - 1, ..nums),\n)\n```\n(I used the heading example from the other thread as zero-based roman numbering doesn't make as much sense)",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 1,
      "reads": 52,
      "score": 30.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 3931,
      "post_number": 5,
      "username": "Sinthoras",
      "name": "",
      "created_at": "2024-10-14T22:02:09.713Z",
      "updated_at": "2024-10-14T22:02:09.713Z",
      "cooked": "<p>This is great! I didn’t realize this. Actually I would like seeing this example in the numbly documentation. (Maybe I’ll do a pull request.) This makes the code so much cleaner and nicer. Thank you. :)</p>",
      "raw": "This is great! I didn't realize this. Actually I would like seeing this example in the numbly documentation. (Maybe I'll do a pull request.) This makes the code so much cleaner and nicer. Thank you. :)",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 47,
      "score": 64.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 511
    },
    {
      "id": 5188,
      "post_number": 6,
      "username": "Edu",
      "name": "Edu",
      "created_at": "2024-11-06T06:07:25.620Z",
      "updated_at": "2024-11-06T06:07:25.620Z",
      "cooked": "<p>Now I want something like this:</p>\n<p>I. Introduction<br>\nII. Context<br>\n2.1 Sub-context 1<br>\n2.2 Sub-context 2</p>\n<p>With the solution with numbly (<code>numbly(\"{1:I}.\", \"{2:1.}\", \"{3:a})\",\"({4})\" )</code>) I’m almost done, the problem is the Sub-context 1, which appears with 1. instead of 2.1, how I can fix this?</p>",
      "raw": "Now I want something like this:\n\nI. Introduction\nII. Context\n     2.1 Sub-context 1\n     2.2 Sub-context 2\n\nWith the solution with numbly (`numbly(\"{1:I}.\", \"{2:1.}\", \"{3:a})\",\"({4})\" )`) I'm almost done, the problem is the Sub-context 1, which appears with 1. instead of 2.1, how I can fix this?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 35,
      "score": 12.0,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 753
    },
    {
      "id": 5395,
      "post_number": 7,
      "username": "Sinthoras",
      "name": "",
      "created_at": "2024-11-09T14:44:45.206Z",
      "updated_at": "2024-11-09T14:44:45.206Z",
      "cooked": "<p>You can use <code>numbly(\"{1:I}.\", \"{1:1}.{2:1.}\", \"{3:a})\",\"({4})\" )</code>.</p>",
      "raw": "You can use `numbly(\"{1:I}.\", \"{1:1}.{2:1.}\", \"{3:a})\",\"({4})\" )`.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 4.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 511
    }
  ],
  "scraped_at": "2025-06-10T09:56:51.343724"
}