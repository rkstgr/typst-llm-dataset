{
  "topic_metadata": {
    "id": 3511,
    "title": "How can I create referrable labels for custom multi-level counters?",
    "slug": "how-can-i-create-referrable-labels-for-custom-multi-level-counters",
    "posts_count": 5,
    "created_at": "2025-04-04T09:27:46.259Z",
    "last_posted_at": "2025-04-04T17:44:11.046Z",
    "views": 65,
    "like_count": 3,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "Andrew",
    "tags": [],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 606
  },
  "posts": [
    {
      "id": 10607,
      "post_number": 1,
      "username": "akoller",
      "name": "Alexander Koller",
      "created_at": "2025-04-04T09:27:46.451Z",
      "updated_at": "2025-04-04T10:59:43.229Z",
      "cooked": "<p>I have a custom counter and want to be able to attach a label whenever I step the counter. A popular solution in this forum is to create a figure with empty content and a custom kind, and then add a label to that figure. However, I can’t get this to work when my counter has two levels:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let wpcounter = counter(\"wpcounter\")\n\n#wpcounter.step()\n#context { wpcounter.display(\"1.1\") }\n#figure(kind: \"wpcounter\", supplement: \"WP\")[] &lt;wp-a&gt;\n\n#wpcounter.step()\n#context { wpcounter.display(\"1.1\") }\n#figure(kind: \"wpcounter\", supplement: \"WP\")[] &lt;wp-b&gt;\n\n#wpcounter.step(level: 2)\n#context { wpcounter.display(\"1.1\") } \n#figure(kind: \"wpcounter\", supplement: \"WP\")[] &lt;wp-c&gt;\n\n@wp-a\n\n@wp-b\n\n@wp-c\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/4/43530f322dec54b56970c7581da88b502730b767.png\" alt=\"Screenshot 2025-04-04 at 11.25.11\" data-base62-sha1=\"9BzWybt2293H08KRjMLx0lzXfAX\" width=\"316\" height=\"444\"></p>\n<p>Is this because the “wpcounter” kind creates its own counter that has nothing to do with my own counter called “wpcounter”? If yes, can someone give me a hint on how I would create a label that actually captures the state of my counter?</p>",
      "raw": "I have a custom counter and want to be able to attach a label whenever I step the counter. A popular solution in this forum is to create a figure with empty content and a custom kind, and then add a label to that figure. However, I can't get this to work when my counter has two levels:\n\n```typst\n#let wpcounter = counter(\"wpcounter\")\n\n#wpcounter.step()\n#context { wpcounter.display(\"1.1\") }\n#figure(kind: \"wpcounter\", supplement: \"WP\")[] <wp-a>\n\n#wpcounter.step()\n#context { wpcounter.display(\"1.1\") }\n#figure(kind: \"wpcounter\", supplement: \"WP\")[] <wp-b>\n\n#wpcounter.step(level: 2)\n#context { wpcounter.display(\"1.1\") } \n#figure(kind: \"wpcounter\", supplement: \"WP\")[] <wp-c>\n\n@wp-a\n\n@wp-b\n\n@wp-c\n```\n\n![Screenshot 2025-04-04 at 11.25.11|316x444](upload://9BzWybt2293H08KRjMLx0lzXfAX.png)\n\nIs this because the \"wpcounter\" kind creates its own counter that has nothing to do with my own counter called \"wpcounter\"? If yes, can someone give me a hint on how I would create a label that actually captures the state of my counter?",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 18,
      "score": 88.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1363
    },
    {
      "id": 10630,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-04T10:12:37.830Z",
      "updated_at": "2025-04-04T17:42:55.688Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"akoller\" data-post=\"1\" data-topic=\"3511\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/akoller/48/2215_2.png\" class=\"avatar\"> akoller:</div>\n<blockquote>\n<p>Is this because the “wpcounter” kind creates its own counter that has nothing to do with my own counter called “wpcounter”?</p>\n</blockquote>\n</aside>\n<p>Indeed. The <code>kind: \"wpcounter\"</code> is for the <code>counter(figure)</code>. Add this and see the result:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#figure[]\n\n#context counter(figure).final()\n#context counter(figure.where(kind: \"wpcounter\")).final()\n</code></pre>\n<aside class=\"quote no-group\" data-username=\"akoller\" data-post=\"1\" data-topic=\"3511\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/akoller/48/2215_2.png\" class=\"avatar\"> akoller:</div>\n<blockquote>\n<p>If yes, can someone give me a hint on how I would create a label that actually captures the state of my counter?</p>\n</blockquote>\n</aside>\n<p>I think that in certain situations using <code>figure</code> for this job is fine.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let wpcounter = counter(\"wpcounter\")\n\n#let step-wpcounter(label, level: 1) = {\n  wpcounter.step(level: level)\n  context [wpcounter: #wpcounter.display(\"1.1\")]\n  [#figure(kind: \"wpcounter\", supplement: \"WP\")[]#label]\n}\n\n#show ref: it =&gt; {\n  let target = query(it.target).first()\n  if (\n    type(target) != content\n      or target.func() != figure\n      or target.kind != \"wpcounter\"\n  ) { return it }\n  let sup = it.supplement\n  if sup == auto { sup = target.supplement }\n  let count = numbering(\"1.1\", ..wpcounter.at(locate(it.target)))\n  link(it.target)[#sup #count]\n}\n\n#step-wpcounter(&lt;wp-a&gt;)\n\n#step-wpcounter(&lt;wp-b&gt;)\n\n#step-wpcounter(&lt;wp-c&gt;, level: 2)\n\n@wp-a\n\n@wp-b\n\n@wp-c\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/2/2d36c483908012874c0738f24ae2ccdb0a71f8ec.png\" alt=\"image\" data-base62-sha1=\"6rYPanJNqwYjJqVIgfGEu4myRw8\" width=\"147\" height=\"275\"></p>\n<p>But ideally you shouldn’t use figures.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let wpcounter = counter(\"wpcounter\")\n\n#let step-wpcounter(label, level: 1) = {\n  wpcounter.step(level: level)\n  context [wpcounter: #wpcounter.display(\"1.1\")]\n  [#metadata(\"wpcounter\")#label]\n}\n\n#show ref: it =&gt; {\n  let supplement = \"WP\"\n  let target = query(it.target).first()\n  if (\n    type(target) != content\n      or target.func() != metadata\n      or target.value != \"wpcounter\"\n  ) { return it }\n  if it.supplement != auto { supplement = it.supplement }\n  let count = numbering(\"1.1\", ..wpcounter.at(locate(it.target)))\n  link(it.target)[#sup #count]\n}\n</code></pre>\n<p>Moreover, this is a solution where you manually create every label, which might be what you want. But if you want to create those labels automatically, then there is also a solution for this, but it depends on the counting system as here you only can have 26 labels.</p>\n<hr>\n<p>Also, please, change the category to the appropriate <a class=\"hashtag-cooked\" href=\"/c/questions/5\" data-type=\"category\" data-slug=\"questions\" data-id=\"5\"><span class=\"hashtag-icon-placeholder\"><svg class=\"fa d-icon d-icon-square-full svg-icon svg-node\"><use href=\"#square-full\"></use></svg></span><span>Questions</span></a>. You can also add some tags to allow people to narrow down their search.</p>",
      "raw": "[quote=\"akoller, post:1, topic:3511\"]\nIs this because the “wpcounter” kind creates its own counter that has nothing to do with my own counter called “wpcounter”?\n[/quote]\n\nIndeed. The `kind: \"wpcounter\"` is for the `counter(figure)`. Add this and see the result:\n\n```typ\n#figure[]\n\n#context counter(figure).final()\n#context counter(figure.where(kind: \"wpcounter\")).final()\n```\n\n[quote=\"akoller, post:1, topic:3511\"]\nIf yes, can someone give me a hint on how I would create a label that actually captures the state of my counter?\n[/quote]\n\nI think that in certain situations using `figure` for this job is fine.\n\n```typ\n#let wpcounter = counter(\"wpcounter\")\n\n#let step-wpcounter(label, level: 1) = {\n  wpcounter.step(level: level)\n  context [wpcounter: #wpcounter.display(\"1.1\")]\n  [#figure(kind: \"wpcounter\", supplement: \"WP\")[]#label]\n}\n\n#show ref: it => {\n  let target = query(it.target).first()\n  if (\n    type(target) != content\n      or target.func() != figure\n      or target.kind != \"wpcounter\"\n  ) { return it }\n  let sup = it.supplement\n  if sup == auto { sup = target.supplement }\n  let count = numbering(\"1.1\", ..wpcounter.at(locate(it.target)))\n  link(it.target)[#sup #count]\n}\n\n#step-wpcounter(<wp-a>)\n\n#step-wpcounter(<wp-b>)\n\n#step-wpcounter(<wp-c>, level: 2)\n\n@wp-a\n\n@wp-b\n\n@wp-c\n```\n\n![image|147x275](upload://6rYPanJNqwYjJqVIgfGEu4myRw8.png)\n\nBut ideally you shouldn't use figures.\n\n```typ\n#let wpcounter = counter(\"wpcounter\")\n\n#let step-wpcounter(label, level: 1) = {\n  wpcounter.step(level: level)\n  context [wpcounter: #wpcounter.display(\"1.1\")]\n  [#metadata(\"wpcounter\")#label]\n}\n\n#show ref: it => {\n  let supplement = \"WP\"\n  let target = query(it.target).first()\n  if (\n    type(target) != content\n      or target.func() != metadata\n      or target.value != \"wpcounter\"\n  ) { return it }\n  if it.supplement != auto { supplement = it.supplement }\n  let count = numbering(\"1.1\", ..wpcounter.at(locate(it.target)))\n  link(it.target)[#sup #count]\n}\n```\n\nMoreover, this is a solution where you manually create every label, which might be what you want. But if you want to create those labels automatically, then there is also a solution for this, but it depends on the counting system as here you only can have 26 labels.\n\n---\n\nAlso, please, change the category to the appropriate #questions. You can also add some tags to allow people to narrow down their search.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 1,
      "reads": 18,
      "score": 23.6,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 10641,
      "post_number": 3,
      "username": "akoller",
      "name": "Alexander Koller",
      "created_at": "2025-04-04T11:24:33.646Z",
      "updated_at": "2025-04-04T11:25:00.264Z",
      "cooked": "<p>This is a very cool solution with the <code>#metadata</code>, thank you.</p>\n<p>But while we’re at it, how can we set it up such that the ref to the WP label is still a reference, i.e. acts as a hyperlink in the PDF? Unless I missed something, the ref show rule now simply returns some unclickable text content.</p>",
      "raw": "This is a very cool solution with the `#metadata`, thank you.\n\nBut while we're at it, how can we set it up such that the ref to the WP label is still a reference, i.e. acts as a hyperlink in the PDF? Unless I missed something, the ref show rule now simply returns some unclickable text content.",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 16,
      "score": 23.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1363
    },
    {
      "id": 10657,
      "post_number": 4,
      "username": "akoller",
      "name": "Alexander Koller",
      "created_at": "2025-04-04T17:09:24.945Z",
      "updated_at": "2025-04-04T17:09:24.945Z",
      "cooked": "<p>I suppose <code>link(it.target)[#supplement #count]</code> does the trick.</p>",
      "raw": "I suppose `link(it.target)[#supplement #count]` does the trick.",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 14,
      "score": 22.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1363
    },
    {
      "id": 10660,
      "post_number": 5,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-04T17:44:11.046Z",
      "updated_at": "2025-04-04T17:44:11.046Z",
      "cooked": "<p>Indeed. I guess I forgot about that part, since it wasn’t necessary for the output result.</p>",
      "raw": "Indeed. I guess I forgot about that part, since it wasn't necessary for the output result.",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 14,
      "score": 2.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    }
  ],
  "scraped_at": "2025-06-10T09:49:41.866875"
}