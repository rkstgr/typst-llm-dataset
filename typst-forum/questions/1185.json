{
  "topic_metadata": {
    "id": 1185,
    "title": "Formatting a json key value data in a rectangle grid",
    "slug": "formatting-a-json-key-value-data-in-a-rectangle-grid",
    "posts_count": 5,
    "created_at": "2024-10-18T16:46:35.225Z",
    "last_posted_at": "2024-10-20T08:39:47.409Z",
    "views": 273,
    "like_count": 2,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 4,
    "accepted_answer_username": "ParaN3xus",
    "tags": [
      "layout",
      "tables"
    ],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 571
  },
  "posts": [
    {
      "id": 4181,
      "post_number": 1,
      "username": "raj2569",
      "name": "Raj",
      "created_at": "2024-10-18T16:46:35.533Z",
      "updated_at": "2024-10-23T13:28:37.304Z",
      "cooked": "<p>Hello all,</p>\n<p>I am pretty new with typst and trying to learn typst by generating one existing pdf from json data. I am mainly exploring typst for generating pdf automatically from (json) data.  This used to be generated using LaTeX + jinja work flow and I am trying to convert it to typst.</p>\n<p>I have gone through the documentation as well as <a href=\"https://sitandr.github.io/typst-examples-book/book/about.html\" rel=\"noopener nofollow ugc\">Typst Examples Book</a>, but I have not yet reached a level of proficiency to ask specific questions, thus this question is pretty general.</p>\n<p>I have an input data as follows:</p>\n<pre data-code-wrap=\"json\"><code class=\"lang-json\">{\n    \"Header\": {\n        \"Name\": \"John Doe\",\n        \"Branch Name\": \"New York\",\n        \"Communication Address\": \"123 Infinite Loop, Acme City, New York\",\n        \"Regd. Mobile Number\": \"123456789\",\n        \"Address Last Updated On\": \"14/11/2018\",\n        \"Customer ID\": \"1294786589\"\n    }\n}\n</code></pre>\n<p>I am trying to format this approximately as the figure below:<br>\n<img src=\"https://forum.typst.app/uploads/default/original/1X/c77f3661b9d05390efaa1541b8b234918d5ec971.jpeg\" alt=\"screen01\" data-base62-sha1=\"ssPzdm73LrSyAHJnfxYcSZ3PMtP\" width=\"681\" height=\"193\"></p>\n<p>The above image consists of two columns of key value data. Each column consists of a key, flexible space, a <code>:</code> followed by value. All the <code>:</code> are lined up in one column. But contrary to what is displayed here, rows in each column need not align with each other. For example the “Customer ID” need not align itsel with “Address Last Updated On” and can follow immediately after “Regd. Mobile Number” after a fixed gutter.</p>\n<p>How can I go about formatting such a grid in Typst?</p>",
      "raw": "Hello all,\n\nI am pretty new with typst and trying to learn typst by generating one existing pdf from json data. I am mainly exploring typst for generating pdf automatically from (json) data.  This used to be generated using LaTeX + jinja work flow and I am trying to convert it to typst. \n\nI have gone through the documentation as well as [Typst Examples Book](https://sitandr.github.io/typst-examples-book/book/about.html), but I have not yet reached a level of proficiency to ask specific questions, thus this question is pretty general. \n\nI have an input data as follows:\n```json\n{\n    \"Header\": {\n        \"Name\": \"John Doe\",\n        \"Branch Name\": \"New York\",\n        \"Communication Address\": \"123 Infinite Loop, Acme City, New York\",\n        \"Regd. Mobile Number\": \"123456789\",\n        \"Address Last Updated On\": \"14/11/2018\",\n        \"Customer ID\": \"1294786589\"\n    }\n}\n```\nI am trying to format this approximately as the figure below:\n![screen01|681x193](upload://ssPzdm73LrSyAHJnfxYcSZ3PMtP.jpeg)\n\nThe above image consists of two columns of key value data. Each column consists of a key, flexible space, a `:` followed by value. All the `:` are lined up in one column. But contrary to what is displayed here, rows in each column need not align with each other. For example the \"Customer ID\" need not align itsel with \"Address Last Updated On\" and can follow immediately after \"Regd. Mobile Number\" after a fixed gutter. \n\nHow can I go about formatting such a grid in Typst?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 26,
      "score": 1350.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 619
    },
    {
      "id": 4216,
      "post_number": 2,
      "username": "ParaN3xus",
      "name": "ParaN3xus",
      "created_at": "2024-10-19T08:33:09.112Z",
      "updated_at": "2024-10-19T08:33:09.112Z",
      "cooked": "<p>You image is basically a table without strokes, so we can simply use <code>table</code> to arrange contents.</p>\n<p>To automatically generate document from json data, we can use <code>json</code> to read data as a <code>dict</code> and get everything provided.</p>\n<p>A example:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let data = json(\"data.json\").at(\"Header\")\n\n#set page(width: 460pt, height: auto, margin: 10pt)\n\n#rect(\n  table(\n    stroke: none,\n    columns: 4,\n    rows: auto,\n    ..data.keys().map(k =&gt; (k, \": \" + data.at(k))).flatten()\n  ),\n)\n</code></pre>\n<p>gives<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/1X/d45a4a740bc6b7fb3c2530bfd2cb4d17eb08cee8.png\" data-download-href=\"https://forum.typst.app/uploads/default/d45a4a740bc6b7fb3c2530bfd2cb4d17eb08cee8\" title=\"ttest\"><img src=\"https://forum.typst.app/uploads/default/optimized/1X/d45a4a740bc6b7fb3c2530bfd2cb4d17eb08cee8_2_690x144.png\" alt=\"ttest\" data-base62-sha1=\"uiyFB8W1P0deGzJlrttLUBV5AJG\" width=\"690\" height=\"144\" srcset=\"https://forum.typst.app/uploads/default/optimized/1X/d45a4a740bc6b7fb3c2530bfd2cb4d17eb08cee8_2_690x144.png, https://forum.typst.app/uploads/default/original/1X/d45a4a740bc6b7fb3c2530bfd2cb4d17eb08cee8.png 1.5x, https://forum.typst.app/uploads/default/original/1X/d45a4a740bc6b7fb3c2530bfd2cb4d17eb08cee8.png 2x\" data-dominant-color=\"F0F0F0\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">ttest</span><span class=\"informations\">920×192 68.2 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "You image is basically a table without strokes, so we can simply use `table` to arrange contents.\n\nTo automatically generate document from json data, we can use `json` to read data as a `dict` and get everything provided.\n\nA example:\n```typ\n#let data = json(\"data.json\").at(\"Header\")\n\n#set page(width: 460pt, height: auto, margin: 10pt)\n\n#rect(\n  table(\n    stroke: none,\n    columns: 4,\n    rows: auto,\n    ..data.keys().map(k => (k, \": \" + data.at(k))).flatten()\n  ),\n)\n```\n\ngives\n![ttest|690x144](upload://uiyFB8W1P0deGzJlrttLUBV5AJG.png)",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 22,
      "score": 9.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 14
    },
    {
      "id": 4284,
      "post_number": 3,
      "username": "raj2569",
      "name": "Raj",
      "created_at": "2024-10-20T07:12:49.322Z",
      "updated_at": "2024-10-20T07:12:49.322Z",
      "cooked": "<p>Thanks a lot, this almost works.<br>\nJust a bit of nitpick.<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/1X/16f654e727d883b0f48475d46922009f079c8132.png\" data-download-href=\"https://forum.typst.app/uploads/default/16f654e727d883b0f48475d46922009f079c8132\" title=\"ttest(1)\"><img src=\"https://forum.typst.app/uploads/default/optimized/1X/16f654e727d883b0f48475d46922009f079c8132_2_690x144.png\" alt=\"ttest(1)\" data-base62-sha1=\"3h8gAc7hB3W2vqXaLwQlARoIRma\" width=\"690\" height=\"144\" srcset=\"https://forum.typst.app/uploads/default/optimized/1X/16f654e727d883b0f48475d46922009f079c8132_2_690x144.png, https://forum.typst.app/uploads/default/original/1X/16f654e727d883b0f48475d46922009f079c8132.png 1.5x, https://forum.typst.app/uploads/default/original/1X/16f654e727d883b0f48475d46922009f079c8132.png 2x\" data-dominant-color=\"F0F0EF\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">ttest(1)</span><span class=\"informations\">920×192 55.7 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>It will be perfect if the full text is rendered along the green line. I understand that my original example too was like the image in the answer.</p>\n<p>Also the order of how the items appear in the table is determined by column major arrangement of how the data is structured in the incoming data. If it can be made row major, it will be easy for me to output the json in the way I want it to appear in the output.</p>\n<p>Thanks!</p>",
      "raw": "Thanks a lot, this almost works. \nJust a bit of nitpick.\n![ttest(1)|690x144](upload://3h8gAc7hB3W2vqXaLwQlARoIRma.png)\n\nIt will be perfect if the full text is rendered along the green line. I understand that my original example too was like the image in the answer. \n\nAlso the order of how the items appear in the table is determined by column major arrangement of how the data is structured in the incoming data. If it can be made row major, it will be easy for me to output the json in the way I want it to appear in the output.\n\nThanks!",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 19,
      "score": 8.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 619
    },
    {
      "id": 4288,
      "post_number": 4,
      "username": "ParaN3xus",
      "name": "ParaN3xus",
      "created_at": "2024-10-20T07:59:46.945Z",
      "updated_at": "2024-10-20T07:59:46.945Z",
      "cooked": "<p>Regarding text alignment, we can place <code>:</code> in its own column, like this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#rect(\n  table(\n    stroke: none,\n    columns: 6,\n    column-gutter: (0em, -0.7em) * 2,\n    rows: auto,\n    ..data.keys().map(k =&gt; (k, \":\", data.at(k))).flatten()\n  ),\n)\n</code></pre>\n<p>Note that <code>column-gutter</code> was set because placing <code>:</code> in its own column makes it too far from the text that follows it. We can adjust this by setting <code>column-gutter</code>.</p>\n<p>Regarding the order of data arrangement, you can transpose it when exporting the JSON, or you can transpose it in Typst like this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set page(width: 460pt, height: auto, margin: 10pt)\n\n#let data = json(\"data.json\").at(\"Header\")\n\n#let data-arr = data.keys().map(k =&gt; (k, data.at(k))).chunks(3)\n#let data-arr = array.zip(..data-arr)\n\n#rect(\n  table(\n    stroke: none,\n    columns: 6,\n    column-gutter: (0em, -0.7em) * 2,\n    rows: auto,\n    ..data-arr.map(\n      r =&gt; r.map(\n        c =&gt; (c.at(0), \":\", c.at(1))\n      )\n    ).flatten()\n  ),\n)\n</code></pre>",
      "raw": "Regarding text alignment, we can place `:` in its own column, like this:\n\n```typ\n#rect(\n  table(\n    stroke: none,\n    columns: 6,\n    column-gutter: (0em, -0.7em) * 2,\n    rows: auto,\n    ..data.keys().map(k => (k, \":\", data.at(k))).flatten()\n  ),\n)\n```\n\nNote that `column-gutter` was set because placing `:` in its own column makes it too far from the text that follows it. We can adjust this by setting `column-gutter`.\n\nRegarding the order of data arrangement, you can transpose it when exporting the JSON, or you can transpose it in Typst like this:\n```typ\n#set page(width: 460pt, height: auto, margin: 10pt)\n\n#let data = json(\"data.json\").at(\"Header\")\n\n#let data-arr = data.keys().map(k => (k, data.at(k))).chunks(3)\n#let data-arr = array.zip(..data-arr)\n\n#rect(\n  table(\n    stroke: none,\n    columns: 6,\n    column-gutter: (0em, -0.7em) * 2,\n    rows: auto,\n    ..data-arr.map(\n      r => r.map(\n        c => (c.at(0), \":\", c.at(1))\n      )\n    ).flatten()\n  ),\n)\n```",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 19,
      "score": 38.8,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 14
    },
    {
      "id": 4291,
      "post_number": 5,
      "username": "raj2569",
      "name": "Raj",
      "created_at": "2024-10-20T08:39:47.409Z",
      "updated_at": "2024-10-20T08:39:47.409Z",
      "cooked": "<p>Thanks! This works perfectly!</p>",
      "raw": "Thanks! This works perfectly!",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 18,
      "score": 8.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 619
    }
  ],
  "scraped_at": "2025-06-10T09:56:31.893914"
}