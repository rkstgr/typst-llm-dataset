{
  "topic_metadata": {
    "id": 1150,
    "title": "How to disable undefined behavior in `outline` title ? (`heading(level: 1)`)",
    "slug": "how-to-disable-undefined-behavior-in-outline-title-heading-level-1",
    "posts_count": 3,
    "created_at": "2024-10-16T21:08:48.653Z",
    "last_posted_at": "2024-10-16T22:10:35.445Z",
    "views": 70,
    "like_count": 0,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "Eric",
    "tags": [
      "scripting",
      "layout"
    ],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 298
  },
  "posts": [
    {
      "id": 4030,
      "post_number": 1,
      "username": "alimgyeniyt",
      "name": "Alimgyehr Uuhniyt",
      "created_at": "2024-10-16T21:08:48.792Z",
      "updated_at": "2024-10-16T21:08:48.792Z",
      "cooked": "<p>i have a custom style for level one headings</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show heading: it =&gt; {\n  if it.level == 1 {\n    pagebreak()\n    v(20em)\n    align(center)[\n      #block(width: 70%,text(weight: 900, 2em, smallcaps(it)))\n    ]\n    pagebreak()\n  } \n}\n</code></pre>\n<p>the outline title is adopting this behavior by default. it will pagebreak before and after the title, so the entries will be in the next page. how to disable this? and is this intended behavior ?</p>",
      "raw": "i have a custom style for level one headings\n\n```typ\n#show heading: it => {\n  if it.level == 1 {\n    pagebreak()\n    v(20em)\n    align(center)[\n      #block(width: 70%,text(weight: 900, 2em, smallcaps(it)))\n    ]\n    pagebreak()\n  } \n}\n```\n\nthe outline title is adopting this behavior by default. it will pagebreak before and after the title, so the entries will be in the next page. how to disable this? and is this intended behavior ?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 26,
      "score": 155.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 605
    },
    {
      "id": 4031,
      "post_number": 2,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2024-10-16T21:56:45.867Z",
      "updated_at": "2024-10-16T21:57:06.175Z",
      "cooked": "<p>Hi, you can probably find a solution in <a href=\"https://forum.typst.app/t/how-to-create-a-pagebreak-before-every-depth-1-heading-except-for-the-outline/904\" class=\"inline-onebox\">How to create a pagebreak before every depth 1 heading except for the outline?</a> (though with <code>level</code> instead of <code>depth</code>).</p>\n<p>Some notes for your specific case:</p>\n<ul>\n<li>\n<p>When including the <code>if it.level == 1</code> in the body of the show rule, any heading with a higher level will not be shown at all, as the show rule returns <code>none</code> for them. You should instead use a <a href=\"https://typst.app/docs/reference/foundations/function/#definitions-where\"><code>where</code>-selector</a> as in</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show heading.where(level: 1): it =&gt; ...\n</code></pre>\n</li>\n<li>\n<p>A normal <code>pagebreak</code> may create an unwanted empty page when the previous page is already empty. You maybe want to set the <a href=\"https://typst.app/docs/reference/layout/pagebreak/#parameters-weak\"><code>weak</code> parameter</a> to prevent that.</p>\n</li>\n</ul>",
      "raw": "Hi, you can probably find a solution in https://forum.typst.app/t/how-to-create-a-pagebreak-before-every-depth-1-heading-except-for-the-outline/904 (though with `level` instead of `depth`).\n\nSome notes for your specific case:\n- When including the `if it.level == 1` in the body of the show rule, any heading with a higher level will not be shown at all, as the show rule returns `none` for them. You should instead use a [`where`-selector](https://typst.app/docs/reference/foundations/function/#definitions-where) as in\n  ```typ\n  #show heading.where(level: 1): it => ...\n  ```\n\n- A normal `pagebreak` may create an unwanted empty page when the previous page is already empty. You maybe want to set the [`weak` parameter](https://typst.app/docs/reference/layout/pagebreak/#parameters-weak) to prevent that.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 9.8,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 4033,
      "post_number": 3,
      "username": "alimgyeniyt",
      "name": "Alimgyehr Uuhniyt",
      "created_at": "2024-10-16T22:10:35.445Z",
      "updated_at": "2024-10-16T22:10:35.445Z",
      "cooked": "<p>Thanks this solution worked.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show outline: it =&gt; {\n  state(\"in-outline\").update(true)\n  it\n  state(\"in-outline\").update(false)\n}\n\n#show heading.where(depth: 1): it =&gt; {\n  if not state(\"in-outline\", false).get() {\n    pagebreak(weak: true)\n  }\n  it\n}\n</code></pre>\n<p>Although I think the outline title should not adopt behavior from the level one heading. as for your suggestion of using the <code>where</code> selector (which Iâ€™m thankful for), I have 6 levels of headings defined and default behavior for anything above that in my template, and the normal function seems to work best for me in such a case.</p>",
      "raw": "Thanks this solution worked.\n\n```typ\n#show outline: it => {\n  state(\"in-outline\").update(true)\n  it\n  state(\"in-outline\").update(false)\n}\n\n#show heading.where(depth: 1): it => {\n  if not state(\"in-outline\", false).get() {\n    pagebreak(weak: true)\n  }\n  it\n}\n```\n\nAlthough I think the outline title should not adopt behavior from the level one heading. as for your suggestion of using the `where` selector (which I'm thankful for), I have 6 levels of headings defined and default behavior for anything above that in my template, and the normal function seems to work best for me in such a case.",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 22,
      "score": 4.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 605
    }
  ],
  "scraped_at": "2025-06-10T09:56:40.763164"
}