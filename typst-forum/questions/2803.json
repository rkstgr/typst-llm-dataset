{
  "topic_metadata": {
    "id": 2803,
    "title": "How can I get inline math output to SVG with 0 margin to be cropped propertly",
    "slug": "how-can-i-get-inline-math-output-to-svg-with-0-margin-to-be-cropped-propertly",
    "posts_count": 4,
    "created_at": "2025-02-13T03:48:24.774Z",
    "last_posted_at": "2025-02-21T22:33:25.032Z",
    "views": 114,
    "like_count": 3,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "Eric",
    "tags": [
      "layout",
      "math"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 285
  },
  "posts": [
    {
      "id": 8540,
      "post_number": 1,
      "username": "Xiaoduan_Chang",
      "name": "Xiaoduan Chang",
      "created_at": "2025-02-13T03:48:24.928Z",
      "updated_at": "2025-02-21T22:21:43.264Z",
      "cooked": "<p>My sample Typst file is as follows:</p>\n<pre><code class=\"lang-auto\">#set page(width: auto, height: auto, margin: 0pt)\n$union.big_(a in A) X_a$\n</code></pre>\n<p>When compiled using the following command:</p>\n<pre><code class=\"lang-auto\">typst c -f svg test.typ \n</code></pre>\n<p>The resulting svg is cropped too much:</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/6/63b817e9e4ac36278dbefef3a84bca4de4ac985d.png\" alt=\"image\" data-base62-sha1=\"ee9GEfWvYGwpJkh4Ns2GOQFHTlP\" width=\"201\" height=\"51\"></p>\n<p>If I change the Typst code so that the math part is displayed on a separate line:</p>\n<pre><code class=\"lang-auto\">#set page(width: auto, height: auto, margin: 0pt)\n$ union.big_(a in A) X_a $\n</code></pre>\n<p>and compile it with the same command, then the output is:</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/b/b518b7d835edeec1041b9f65a42fd15799351008.png\" alt=\"image\" data-base62-sha1=\"pQ3nAKvn2fK0CgQzlxIQL82vtDW\" width=\"135\" height=\"72\"></p>\n<p>Is there anyway to make inline math also cropped properly? Though I can manualy change the margin value so that the desired content is not cropped, but this is not practical because the margin value depends on the font size, and I do not want to change the margin value every time I change the font size.</p>",
      "raw": "My sample Typst file is as follows:\n\n```\n#set page(width: auto, height: auto, margin: 0pt)\n$union.big_(a in A) X_a$\n```\n\nWhen compiled using the following command:\n\n```\ntypst c -f svg test.typ \n```\n\nThe resulting svg is cropped too much:\n\n![image|201x51](upload://ee9GEfWvYGwpJkh4Ns2GOQFHTlP.png)\n\nIf I change the Typst code so that the math part is displayed on a separate line:\n\n```\n#set page(width: auto, height: auto, margin: 0pt)\n$ union.big_(a in A) X_a $\n```\n\nand compile it with the same command, then the output is:\n\n![image|135x72](upload://pQ3nAKvn2fK0CgQzlxIQL82vtDW.png)\n\nIs there anyway to make inline math also cropped properly? Though I can manualy change the margin value so that the desired content is not cropped, but this is not practical because the margin value depends on the font size, and I do not want to change the margin value every time I change the font size.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 26,
      "score": 160.2,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1187
    },
    {
      "id": 8570,
      "post_number": 2,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2025-02-13T11:06:49.665Z",
      "updated_at": "2025-02-13T11:06:49.665Z",
      "cooked": "<p>Inline math content by default uses “fake” boundaries so that the line spacing in paragraph remains consistent. For cases like yours, where you don’t need that consistency, you can explicitly tell Typst to use the “real” boundaries via the show-set rule</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show math.equation: set text(top-edge: \"bounds\", bottom-edge: \"bounds\")\n</code></pre>",
      "raw": "Inline math content by default uses \"fake\" boundaries so that the line spacing in paragraph remains consistent. For cases like yours, where you don't need that consistency, you can explicitly tell Typst to use the \"real\" boundaries via the show-set rule\n\n```typ\n#show math.equation: set text(top-edge: \"bounds\", bottom-edge: \"bounds\")\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 25,
      "score": 40.0,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 8640,
      "post_number": 3,
      "username": "Xiaoduan_Chang",
      "name": "Xiaoduan Chang",
      "created_at": "2025-02-14T01:50:38.403Z",
      "updated_at": "2025-02-14T01:50:38.403Z",
      "cooked": "<p>Thanks. This perfectly solves my problem!</p>",
      "raw": "Thanks. This perfectly solves my problem!",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 22,
      "score": 4.4,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1187
    },
    {
      "id": 8849,
      "post_number": 4,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-02-21T22:33:25.032Z",
      "updated_at": "2025-02-21T22:33:25.032Z",
      "cooked": "<p>Another solution (that as far as I can tell produces the same result for your example) would be this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">$ inline(union.big_(a in A) X_a) $\n// or as a show rule:\n#show math.equation.where(block: false): it =&gt; $ inline(#it) $\n</code></pre>\n<p>While Eric’s solution overrides Typst’s default inline height treatment (which allows for regular line spacing), this uses a display equation, but styles the math inside it the same way as inline math.</p>",
      "raw": "Another solution (that as far as I can tell produces the same result for your example) would be this:\n\n```typ\n$ inline(union.big_(a in A) X_a) $\n// or as a show rule:\n#show math.equation.where(block: false): it => $ inline(#it) $\n```\n\nWhile Eric's solution overrides Typst's default inline height treatment (which allows for regular line spacing), this uses a display equation, but styles the math inside it the same way as inline math.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 17,
      "score": 3.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    }
  ],
  "scraped_at": "2025-06-10T09:51:40.745022"
}