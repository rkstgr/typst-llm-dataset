{
  "topic_metadata": {
    "id": 1978,
    "title": "How to implement sub-numbering for custom figures and equations?",
    "slug": "how-to-implement-sub-numbering-for-custom-figures-and-equations",
    "posts_count": 7,
    "created_at": "2024-12-04T12:43:20.752Z",
    "last_posted_at": "2024-12-09T08:48:33.622Z",
    "views": 256,
    "like_count": 3,
    "reply_count": 4,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 6,
    "accepted_answer_username": "miles-1",
    "tags": [
      "scripting",
      "numbering"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 579
  },
  "posts": [
    {
      "id": 6322,
      "post_number": 1,
      "username": "Ido",
      "name": "",
      "created_at": "2024-12-04T12:43:20.884Z",
      "updated_at": "2024-12-04T18:26:17.255Z",
      "cooked": "<p>After reading a post here about this topic for equations where the first number of the numbering should be from the level 1 heading I found this solution:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#set heading(numbering: \"1.\")\n#show heading.where(level:1): it =&gt; {\n  counter(math.equation).update(0)\n  it\n}\n\n#set math.equation(\n  numbering: it =&gt; {\n    let count = counter(heading.where(level: 1)).at(here()).first()\n    if count &gt;0 {\n      numbering(\"(1.1)\", count, it)\n    } else {\n      numbering(\"(1)\",it)\n    }\n  }\n)\n</code></pre>\n<p>How I can implement it also for this custom figure (theorem):</p>\n<pre><code class=\"lang-auto\">#show figure.where(kind: \"thm\"): it =&gt; [\n  / #it.supplement #context(it.counter.display(it.numbering)).: #it.body\n]\n#let thm(it) = figure(\n  kind: \"thm\",\n  supplement: \"Theorem\",\n  caption: none,\n  placement: none, \n  it\n) \n</code></pre>\n<p>What will be the most correct way to implement a thing like this? Any tips on making this numbering function to be more generic or to define the theorem better would help a lot!</p>",
      "raw": "After reading a post here about this topic for equations where the first number of the numbering should be from the level 1 heading I found this solution:\n```typst\n#set heading(numbering: \"1.\")\n#show heading.where(level:1): it => {\n  counter(math.equation).update(0)\n  it\n}\n\n#set math.equation(\n  numbering: it => {\n    let count = counter(heading.where(level: 1)).at(here()).first()\n    if count >0 {\n      numbering(\"(1.1)\", count, it)\n    } else {\n      numbering(\"(1)\",it)\n    }\n  }\n)\n```\nHow I can implement it also for this custom figure (theorem):\n```\n#show figure.where(kind: \"thm\"): it => [\n  / #it.supplement #context(it.counter.display(it.numbering)).: #it.body\n]\n#let thm(it) = figure(\n  kind: \"thm\",\n  supplement: \"Theorem\",\n  caption: none,\n  placement: none, \n  it\n) \n```\nWhat will be the most correct way to implement a thing like this? Any tips on making this numbering function to be more generic or to define the theorem better would help a lot!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 38,
      "score": 722.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 875
    },
    {
      "id": 6337,
      "post_number": 2,
      "username": "miles-1",
      "name": "miles",
      "created_at": "2024-12-04T17:22:25.968Z",
      "updated_at": "2024-12-04T23:13:02.019Z",
      "cooked": "<p>Setting the <a href=\"https://typst.app/docs/reference/model/figure/\">kind</a> argument will automatically generate a counter. I learned a bit more since the last post (e.g., <code>.get()</code> is the same as <code>.at(here())</code>).</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#set heading(numbering: \"1\")\n\n#show heading.where(level:1): it =&gt; {\n  counter(figure.where(kind: \"thm\")).update(0)\n  it\n}\n\n#show figure.where(kind: \"thm\"): it =&gt; {\n  let num = numbering(\n    \"1.1\",\n    counter(heading).get().first(),\n    it.counter.get().first()\n  )\n  [/ #it.supplement #num: #it.body]\n}\n\n#let thm(it) = figure(\n  kind: \"thm\",\n  supplement: \"Theorem\",\n  // default values of caption &amp; placement are already none :)\n  it\n)\n\n\n= one chapter\n\n#thm(lorem(20))\n#thm(lorem(20))\n#thm(lorem(20))\n#thm(lorem(20))\n\n= another chapter\n\n#thm(lorem(20))\n#thm(lorem(20))\n#thm(lorem(20))\n#thm(lorem(20))\n</code></pre>\n<p>Follow-up question though… I had never seen the <code>[\\ text:]</code> styling before for bolding. Where is that from? Is it just another way to bold text?</p>",
      "raw": "Setting the [kind](https://typst.app/docs/reference/model/figure/) argument will automatically generate a counter. I learned a bit more since the last post (e.g., `.get()` is the same as `.at(here())`).\n\n```typst\n#set heading(numbering: \"1\")\n\n#show heading.where(level:1): it => {\n  counter(figure.where(kind: \"thm\")).update(0)\n  it\n}\n\n#show figure.where(kind: \"thm\"): it => {\n  let num = numbering(\n    \"1.1\",\n    counter(heading).get().first(),\n    it.counter.get().first()\n  )\n  [/ #it.supplement #num: #it.body]\n}\n\n#let thm(it) = figure(\n  kind: \"thm\",\n  supplement: \"Theorem\",\n  // default values of caption & placement are already none :)\n  it\n)\n\n\n= one chapter\n\n#thm(lorem(20))\n#thm(lorem(20))\n#thm(lorem(20))\n#thm(lorem(20))\n\n= another chapter\n\n#thm(lorem(20))\n#thm(lorem(20))\n#thm(lorem(20))\n#thm(lorem(20))\n```\n\nFollow-up question though... I had never seen the `[\\ text:]` styling before for bolding. Where is that from? Is it just another way to bold text?",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 0,
      "reads": 36,
      "score": 47.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 177
    },
    {
      "id": 6341,
      "post_number": 3,
      "username": "jbirnick",
      "name": "Johann Birnick",
      "created_at": "2024-12-04T17:42:18.878Z",
      "updated_at": "2024-12-04T17:42:18.878Z",
      "cooked": "<p><a class=\"mention\" href=\"/u/miles-1\">@miles-1</a> The slash syntax is for <a href=\"https://typst.app/docs/reference/model/terms/\">term lists</a>.</p>\n<p><a class=\"mention\" href=\"/u/ido\">@Ido</a> As you may already know, there are packages like <a href=\"https://typst.app/universe/package/great-theorems\">great-theorems</a> which take care of all of this.</p>",
      "raw": "@miles-1 The slash syntax is for [term lists](https://typst.app/docs/reference/model/terms/).\n\n@Ido As you may already know, there are packages like [great-theorems](https://typst.app/universe/package/great-theorems) which take care of all of this.",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 32,
      "score": 31.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 218
    },
    {
      "id": 6342,
      "post_number": 4,
      "username": "PgBiel",
      "name": "",
      "created_at": "2024-12-04T18:26:21.994Z",
      "updated_at": "2024-12-04T18:26:21.994Z",
      "cooked": "<p>Hey <a class=\"mention\" href=\"/u/ido\">@Ido</a>! I’ve changed your question post’s title to better fit our guidelines: <a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11\" class=\"inline-onebox\">How to post in the Questions category</a></p>\n<p>For future posts, make sure your title is a question you’d ask to a friend about Typst. <img src=\"https://forum.typst.app/images/emoji/apple/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Hey @Ido! I’ve changed your question post’s title to better fit our guidelines: https://forum.typst.app/t/how-to-post-in-the-questions-category/11\n\nFor future posts, make sure your title is a question you’d ask to a friend about Typst. :wink:",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 31,
      "score": 26.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 6419,
      "post_number": 5,
      "username": "Ido",
      "name": "",
      "created_at": "2024-12-08T08:18:53.234Z",
      "updated_at": "2024-12-08T08:18:53.234Z",
      "cooked": "<p>Thanks a lot! I am having some rough time adding the if statement to this implementation for the figure numbering… any help on that?</p>",
      "raw": "Thanks a lot! I am having some rough time adding the if statement to this implementation for the figure numbering... any help on that?",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 26,
      "score": 15.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 875
    },
    {
      "id": 6426,
      "post_number": 6,
      "username": "miles-1",
      "name": "miles",
      "created_at": "2024-12-08T20:10:00.821Z",
      "updated_at": "2024-12-08T20:10:00.821Z",
      "cooked": "<p>If I’m understanding your initial code correctly, you want to make all theorems before the first header just have a theorem counter number (e.g., <code>(1)</code>), and all theorems after a header to have that header’s number and the theorem counter number (e.g., <code>(1.1)</code>), yes? If that’s the case, inside your <code>show</code> rule for <code>thm</code> figures, you will want to:</p>\n<ul>\n<li>save current header count in a variable (e.g., <code>let header_count = ...</code>)</li>\n<li>save current theorem count in a variable (e.g., <code>let thm_count = ...</code>)</li>\n<li>use an <code>if</code> statement to use one of the two <code>numbering</code> uses based on <code>header_count</code>, and save its result to a variable (e.g., <code>let num = if header_count &gt; 0 {...} else {...}</code>)</li>\n</ul>\n<p>Give that a try!</p>",
      "raw": "If I'm understanding your initial code correctly, you want to make all theorems before the first header just have a theorem counter number (e.g., `(1)`), and all theorems after a header to have that header's number and the theorem counter number (e.g., `(1.1)`), yes? If that's the case, inside your `show` rule for `thm` figures, you will want to:\n- save current header count in a variable (e.g., `let header_count = ...`)\n- save current theorem count in a variable (e.g., `let thm_count = ...`)\n- use an `if` statement to use one of the two `numbering` uses based on `header_count`, and save its result to a variable (e.g., `let num = if header_count > 0 {...} else {...}`)\n\nGive that a try!",
      "reply_to_post_number": 5,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 26,
      "score": 95.2,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 177
    },
    {
      "id": 6439,
      "post_number": 7,
      "username": "Ido",
      "name": "",
      "created_at": "2024-12-09T08:48:33.622Z",
      "updated_at": "2024-12-09T08:48:33.622Z",
      "cooked": "<p>Something like this?</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#show figure.where(kind: \"thm\"): it =&gt; {\n    let header_count = counter(heading.where(level: 1)).get().first()\n    let thm_count = it.counter.get().first()\n    let thm_num = if header_count &gt; 0 {\n      numbering(\"1.1.\",header_count,thm_count)\n    } else {\n      numbering(\"1.\",thm_count)\n    }\n    set align(left)\n    terms[/ #it.supplement #thm_num: #it.body]\n}\n</code></pre>\n<p>Thanks a lot!!</p>",
      "raw": "Something like this?\n```typst\n#show figure.where(kind: \"thm\"): it => {\n    let header_count = counter(heading.where(level: 1)).get().first()\n    let thm_count = it.counter.get().first()\n    let thm_num = if header_count > 0 {\n      numbering(\"1.1.\",header_count,thm_count)\n    } else {\n      numbering(\"1.\",thm_count)\n    }\n    set align(left)\n    terms[/ #it.supplement #thm_num: #it.body]\n}\n```\nThanks a lot!!",
      "reply_to_post_number": 6,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 23,
      "score": 19.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 875
    }
  ],
  "scraped_at": "2025-06-10T09:54:05.731170"
}