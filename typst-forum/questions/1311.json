{
  "topic_metadata": {
    "id": 1311,
    "title": "What are the values that are shown when hovering over a variable?",
    "slug": "what-are-the-values-that-are-shown-when-hovering-over-a-variable",
    "posts_count": 6,
    "created_at": "2024-10-23T12:07:24.984Z",
    "last_posted_at": "2024-10-23T20:20:03.138Z",
    "views": 109,
    "like_count": 4,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "gezepi",
    "tags": [
      "scripting",
      "tooling"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 392
  },
  "posts": [
    {
      "id": 4532,
      "post_number": 1,
      "username": "SebastianJL",
      "name": "Johannes Lade",
      "created_at": "2024-10-23T12:07:24.984Z",
      "updated_at": "2024-10-23T12:56:18.622Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"gezepi\" data-post=\"4\" data-topic=\"1305\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/g/C34CE0/48.png\" class=\"avatar\"><a href=\"https://forum.typst.app/t/what-is-the-it-in-show-rules-exactly/1305/4\">What is the `it` in show rules exactly?</a></div>\n<blockquote>\n<p>The tooltips that the web app (and Tinymist) provide are also very helpful. Hovering my mouse over the <code>it</code> shows the same info that <code>repr</code> does:</p>\n</blockquote>\n</aside>\n<p>Oh I never knew that. What are the many different versions that it shows? Just examples?</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/9/9cf71c52d85faeabda153394ed276467d1b609a6.png\" data-download-href=\"https://forum.typst.app/uploads/default/9cf71c52d85faeabda153394ed276467d1b609a6\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/9/9cf71c52d85faeabda153394ed276467d1b609a6_2_690x429.png\" alt=\"image\" data-base62-sha1=\"mozUSQbD39zYX6Q9bJN5YMANyom\" width=\"690\" height=\"429\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/9/9cf71c52d85faeabda153394ed276467d1b609a6_2_690x429.png, https://forum.typst.app/uploads/default/optimized/2X/9/9cf71c52d85faeabda153394ed276467d1b609a6_2_1035x643.png 1.5x, https://forum.typst.app/uploads/default/original/2X/9/9cf71c52d85faeabda153394ed276467d1b609a6.png 2x\" data-dominant-color=\"242525\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1113×692 100 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>On the image you can only see two, but there are around 9 available with scrolling.</p>",
      "raw": "[quote=\"gezepi, post:4, topic:1305\"]\nThe tooltips that the web app (and Tinymist) provide are also very helpful. Hovering my mouse over the `it` shows the same info that `repr` does:\n[/quote]\n\nOh I never knew that. What are the many different versions that it shows? Just examples?\n\n![image|690x429](upload://mozUSQbD39zYX6Q9bJN5YMANyom.png)\n\nOn the image you can only see two, but there are around 9 available with scrolling.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 1,
      "reads": 28,
      "score": 385.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 591
    },
    {
      "id": 4541,
      "post_number": 2,
      "username": "gezepi",
      "name": "",
      "created_at": "2024-10-23T12:37:56.023Z",
      "updated_at": "2024-10-23T12:56:18.628Z",
      "cooked": "<blockquote>\n<p>What are the many different versions that it shows?</p>\n</blockquote>\n<p>It’s all the instances of <code>it</code> that end up where your cursor is.  So if you had two non-block equations then there would be two items in this list.  If you had 10 there would be 10 of them.</p>",
      "raw": "> What are the many different versions that it shows?\n\nIt's all the instances of `it` that end up where your cursor is.  So if you had two non-block equations then there would be two items in this list.  If you had 10 there would be 10 of them.",
      "reply_to_post_number": 1,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 26,
      "score": 25.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 326
    },
    {
      "id": 4542,
      "post_number": 3,
      "username": "SebastianJL",
      "name": "Johannes Lade",
      "created_at": "2024-10-23T12:39:26.302Z",
      "updated_at": "2024-10-23T12:56:18.632Z",
      "cooked": "<p>Oh wow. Why would it do that?</p>",
      "raw": "Oh wow. Why would it do that?",
      "reply_to_post_number": 2,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 14.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 591
    },
    {
      "id": 4547,
      "post_number": 4,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2024-10-23T12:59:39.905Z",
      "updated_at": "2024-10-23T21:30:58.530Z",
      "cooked": "<p>(I split this discussion off so that it’s easier to find on its own)</p>\n<aside class=\"quote no-group\" data-username=\"SebastianJL\" data-post=\"3\" data-topic=\"1311\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/sebastianjl/48/870_2.png\" class=\"avatar\"> SebastianJL:</div>\n<blockquote>\n<p>Oh wow. Why would it do that?</p>\n</blockquote>\n</aside>\n<p>Why wouldn’t it? :P Typst has no way of knowing which execution of the show rule you’re currently interested in, so it shows all.</p>\n<p>If I’m interested in something specific, I often create an extra variable for that:</p>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">if it.supplement == \"Fancy Equation\" {\n  // hovering over this will only show `it` from certain executions\n  let dbg = it\n}\n</code></pre>",
      "raw": "(I split this discussion off so that it's easier to find on its own)\n\n[quote=\"SebastianJL, post:3, topic:1311, full:true\"]\nOh wow. Why would it do that?\n[/quote]\n\nWhy wouldn't it? :P Typst has no way of knowing which execution of the show rule you're currently interested in, so it shows all.\n\nIf I'm interested in something specific, I often create an extra variable for that:\n```typc\nif it.supplement == \"Fancy Equation\" {\n  // hovering over this will only show `it` from certain executions\n  let dbg = it\n}\n```",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 2,
      "reads": 24,
      "score": 34.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 4551,
      "post_number": 5,
      "username": "gezepi",
      "name": "",
      "created_at": "2024-10-23T13:05:21.909Z",
      "updated_at": "2024-10-23T13:05:21.909Z",
      "cooked": "<p>I can only speculate about <em>why</em>. So here I go speculating:</p>\n<p>Typst relies heavily on <a href=\"https://en.wikipedia.org/wiki/Memoization\" rel=\"noopener nofollow ugc\">memoizing</a> to speed up document compilation. As I understand it this works by saving the output of a function for the given inputs. Then if the function is called again with those same inputs, it can simply return the already-calculated output.<br>\nGetting back to the question: there already exists a record of every version of a given variable for the whole document. I assume this makes it pretty trivial to display it like you see when you hover over a variable.<br>\nIt could also be a way to offer a debugging tool without going through the effort of a full-blown debugging environment.</p>\n<p>From a user perspective I’ve found it helpful to see all these while working on a function. When I can’t keep all the variables and scopes in my head this can help get me back on track.</p>",
      "raw": "I can only speculate about *why*. So here I go speculating:\n\nTypst relies heavily on [memoizing](https://en.wikipedia.org/wiki/Memoization) to speed up document compilation. As I understand it this works by saving the output of a function for the given inputs. Then if the function is called again with those same inputs, it can simply return the already-calculated output.\nGetting back to the question: there already exists a record of every version of a given variable for the whole document. I assume this makes it pretty trivial to display it like you see when you hover over a variable.\nIt could also be a way to offer a debugging tool without going through the effort of a full-blown debugging environment.\n\nFrom a user perspective I’ve found it helpful to see all these while working on a function. When I can’t keep all the variables and scopes in my head this can help get me back on track.",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 22,
      "score": 9.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 326
    },
    {
      "id": 4585,
      "post_number": 6,
      "username": "SebastianJL",
      "name": "Johannes Lade",
      "created_at": "2024-10-23T20:20:03.138Z",
      "updated_at": "2024-10-23T20:20:03.138Z",
      "cooked": "<p>Ah I see, seems reasonable. Thanks for your take <img src=\"https://forum.typst.app/images/emoji/apple/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Ah I see, seems reasonable. Thanks for your take :slight_smile:",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 22,
      "score": 4.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 591
    }
  ],
  "scraped_at": "2025-06-10T09:56:03.502460"
}