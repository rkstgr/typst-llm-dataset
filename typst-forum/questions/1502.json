{
  "topic_metadata": {
    "id": 1502,
    "title": "How to make Cross Hatching sections of a sphere?",
    "slug": "how-to-make-cross-hatching-sections-of-a-sphere",
    "posts_count": 4,
    "created_at": "2024-11-02T15:55:42.429Z",
    "last_posted_at": "2024-11-06T09:58:02.380Z",
    "views": 257,
    "like_count": 9,
    "reply_count": 0,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 3,
    "accepted_answer_username": "DVDTSB",
    "tags": [
      "cetz"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 801
  },
  "posts": [
    {
      "id": 5045,
      "post_number": 1,
      "username": "DVDTSB",
      "name": "",
      "created_at": "2024-11-02T15:55:42.537Z",
      "updated_at": "2024-11-05T12:59:14.154Z",
      "cooked": "<p>I am trying to recreate:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/4/4af5a7627cc1125da1bc883ad67c862af8450b8a.png\" data-download-href=\"https://forum.typst.app/uploads/default/4af5a7627cc1125da1bc883ad67c862af8450b8a\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/4/4af5a7627cc1125da1bc883ad67c862af8450b8a_2_609x499.png\" alt=\"image\" data-base62-sha1=\"aH7DUA9SKxN8B8orhD5QHmPoeVk\" width=\"609\" height=\"499\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/4/4af5a7627cc1125da1bc883ad67c862af8450b8a_2_609x499.png, https://forum.typst.app/uploads/default/original/2X/4/4af5a7627cc1125da1bc883ad67c862af8450b8a.png 1.5x, https://forum.typst.app/uploads/default/original/2X/4/4af5a7627cc1125da1bc883ad67c862af8450b8a.png 2x\" data-dominant-color=\"F2F2F2\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">700×574 101 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>using CETZ.</p>\n<p>Here is my code so far:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#import \"@preview/cetz:0.3.1\"\n#cetz.canvas({\n  import cetz.draw: *\n  content=content.with(padding:0.5em)\n\n  set-style(\n    grid:(\n      stroke:gray,\n    ),\n  mark: (\n    fill: black,\n    scale:0.5,\n  )\n  )\n  scale(175%)\n\n  on-xy({\n      arc((2,0), start: 0deg, stop: 180deg, radius:2, stroke:0.5pt)\n    })\n  \n  ortho({\n    on-xz({\n      set-style(\n        line: (stroke:0.5pt )\n      )\n      line((-2,2),(2,2))\n      line((-2,-2),(2,-2))\n\n      for i in range(4){\n        line((-1+i,2.8),(-1+i,-2))\n        content((-1.5+i,2.3),$x$)\n\n        line((-1.7+i,2.3), (-2+i,2.3), mark:(end:\"&gt;\"))\n        line((-1+i,2.3), (-1.3+i,2.3), mark:(start:\"&gt;\"))\n\n        content((-1.5+i,3),numbering(\"I\", i+1))\n        \n      }\n      line((-2,2.8),(-2,-2))\n\n      line((-2.4,2.4),(2.4,-2.4))\n\n      line((-2.4+fsqrt(2),2.4),(1.8+fsqrt(2),-1.8))\n    \n      circle((0,0),radius:2,stroke:0.5pt)\n\n\n      \n    })\n    on-yz({\n    arc((fsqrt(3),0), start: 0deg, stop: 180deg, radius:fsqrt(3))\n    },x:-1)\n\n    on-yz({\n    arc((fsqrt(3),0), start: 0deg, stop: 180deg, radius:fsqrt(3))\n    },x:1)\n    \n    on-yz({\n    arc((2,0), start: 0deg, stop: 180deg, radius:2)\n    })\n\n    rotate(y:-45deg)\n    on-yz({\n    arc((2,0), start: 0deg, stop: 180deg, radius:2)\n    })\n    on-yz({\n    arc((fsqrt(3),0), start: 0deg, stop: 180deg, radius:fsqrt(3))\n    },x:1)\n\n  },  x:40deg, y:34deg)\n\n})]\n</code></pre>\n<p>And the result:<br>\n<img src=\"https://forum.typst.app/uploads/default/original/2X/e/edc46423665fe1c314764cd8458f28881fd20655.png\" alt=\"image\" data-base62-sha1=\"xVnVrXdg4Mz3z1whekfoMbFjIRT\" width=\"619\" height=\"387\"></p>\n<p>I’m totally stuck on how to make the cross-hatching. Any ideas?</p>",
      "raw": "I am trying to recreate:\n\n![image|609x499](upload://aH7DUA9SKxN8B8orhD5QHmPoeVk.png)\n\nusing CETZ.\n\nHere is my code so far:\n\n```typst\n#import \"@preview/cetz:0.3.1\"\n#cetz.canvas({\n  import cetz.draw: *\n  content=content.with(padding:0.5em)\n\n  set-style(\n    grid:(\n      stroke:gray,\n    ),\n  mark: (\n    fill: black,\n    scale:0.5,\n  )\n  )\n  scale(175%)\n\n  on-xy({\n      arc((2,0), start: 0deg, stop: 180deg, radius:2, stroke:0.5pt)\n    })\n  \n  ortho({\n    on-xz({\n      set-style(\n        line: (stroke:0.5pt )\n      )\n      line((-2,2),(2,2))\n      line((-2,-2),(2,-2))\n\n      for i in range(4){\n        line((-1+i,2.8),(-1+i,-2))\n        content((-1.5+i,2.3),$x$)\n\n        line((-1.7+i,2.3), (-2+i,2.3), mark:(end:\">\"))\n        line((-1+i,2.3), (-1.3+i,2.3), mark:(start:\">\"))\n\n        content((-1.5+i,3),numbering(\"I\", i+1))\n        \n      }\n      line((-2,2.8),(-2,-2))\n\n      line((-2.4,2.4),(2.4,-2.4))\n\n      line((-2.4+fsqrt(2),2.4),(1.8+fsqrt(2),-1.8))\n    \n      circle((0,0),radius:2,stroke:0.5pt)\n\n\n      \n    })\n    on-yz({\n    arc((fsqrt(3),0), start: 0deg, stop: 180deg, radius:fsqrt(3))\n    },x:-1)\n\n    on-yz({\n    arc((fsqrt(3),0), start: 0deg, stop: 180deg, radius:fsqrt(3))\n    },x:1)\n    \n    on-yz({\n    arc((2,0), start: 0deg, stop: 180deg, radius:2)\n    })\n\n    rotate(y:-45deg)\n    on-yz({\n    arc((2,0), start: 0deg, stop: 180deg, radius:2)\n    })\n    on-yz({\n    arc((fsqrt(3),0), start: 0deg, stop: 180deg, radius:fsqrt(3))\n    },x:1)\n\n  },  x:40deg, y:34deg)\n\n})]\n```\nAnd the result:\n![image|619x387](upload://xVnVrXdg4Mz3z1whekfoMbFjIRT.png)\n\nI'm totally stuck on how to make the cross-hatching. Any ideas?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 3,
      "reads": 48,
      "score": 919.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 467
    },
    {
      "id": 5047,
      "post_number": 2,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2024-11-02T16:19:53.478Z",
      "updated_at": "2024-11-02T16:20:01.058Z",
      "cooked": "<p>Hi <a class=\"mention\" href=\"/u/dvdtsb\">@DVDTSB</a>, could you maybe try to revise your post’s title to be a complete question as per the <a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11\">question guidelines</a>:</p>\n<blockquote>\n<p><strong>Good titles are questions you would ask your friend about Typst.</strong></p>\n</blockquote>\n<p>We hope by adhering to this, we make the information in this forum easy to find in the future.</p>\n<hr>\n<p>Also, while I have no help to offer for this problem, let me say: this is <em>awesome</em>! I assume <code>fsqrt</code> stands for “fast square root”? It’s not part of your example, but adding <code>#let fsqrt = calc.sqrt</code> still works well. (And there’s an extra <code>]</code> in the end, if you care enough to clean it up.)</p>\n<p>Also also, for anyone who wants to play with this like me: you can get rudimentary animation by using <code>\"\".len() * 5deg</code> as the <code>x</code> and <code>y</code> angles, and then just adding characters to the strings (Laurenz mentioned that trick at some point somewhere.)</p>",
      "raw": "Hi @DVDTSB, could you maybe try to revise your post’s title to be a complete question as per the [question guidelines](https://forum.typst.app/t/how-to-post-in-the-questions-category/11):\n\n> **Good titles are questions you would ask your friend about Typst.**\n\nWe hope by adhering to this, we make the information in this forum easy to find in the future.\n\n---\n\nAlso, while I have no help to offer for this problem, let me say: this is _awesome_! I assume `fsqrt` stands for \"fast square root\"? It's not part of your example, but adding `#let fsqrt = calc.sqrt` still works well. (And there's an extra `]` in the end, if you care enough to clean it up.)\n\nAlso also, for anyone who wants to play with this like me: you can get rudimentary animation by using `\"\".len() * 5deg` as the `x` and `y` angles, and then just adding characters to the strings (Laurenz mentioned that trick at some point somewhere.)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 45,
      "score": 94.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 5048,
      "post_number": 3,
      "username": "DVDTSB",
      "name": "",
      "created_at": "2024-11-02T16:50:14.875Z",
      "updated_at": "2024-11-02T16:50:14.875Z",
      "cooked": "<p>In the end i managed to solve it by myself:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#import \"@preview/cetz:0.3.1\"\n#let fsqrt=calc.sqrt\n#cetz.canvas({\n  import cetz.draw: *\n  content=content.with(padding:0.5em)\n\n  set-style(\n    grid:(\n      stroke:gray,\n    ),\n  mark: (\n    fill: black,\n    scale:0.5,\n  )\n  )\n  scale(175%)\n\n  on-xy({\n      arc((2,0), start: 0deg, stop: 180deg, radius:2, stroke:0.5pt)\n    })\n\n  let det=80\n    \n  ortho({\n    on-xz({\n      set-style(\n        line: (stroke:0.5pt )\n      )\n      line((-2,2),(2,2))\n      line((-2,-2),(2,-2))\n\n      for i in range(4){\n        line((-1+i,2.8),(-1+i,-2))\n        content((-1.5+i,2.3),$x$)\n\n        line((-1.7+i,2.3), (-2+i,2.3), mark:(end:\"&gt;\"))\n        line((-1+i,2.3), (-1.3+i,2.3), mark:(start:\"&gt;\"))\n\n        content((-1.5+i,3),numbering(\"I\", i+1))\n        \n      }\n      line((-2,2.8),(-2,-2))\n\n      line((-2.4,2.4),(2.4,-2.4))\n\n      line((-2.4+fsqrt(2),2.4),(1.8+fsqrt(2),-1.8))\n    \n      circle((0,0),radius:2,stroke:0.5pt)\n\n\n        \n      for i in range(det){\n        let depth=2/det*i\n        let start=-calc.min(1,fsqrt(4-depth*depth))\n        let end=calc.min(0, -depth+fsqrt(2))\n        start=calc.max(start,-depth)\n        if start &lt; end{\n          line((start,depth),(end,depth))\n        }\n      }\n\n      \n    })\n    on-yz({\n    arc((fsqrt(3),0), start: 0deg, stop: 180deg, radius:fsqrt(3))\n    },x:-1)\n\n    on-yz({\n    arc((fsqrt(3),0), start: 0deg, stop: 180deg, radius:fsqrt(3))\n    },x:1)\n    \n    on-yz({\n    arc((2,0), start: 0deg, stop: 180deg, radius:2)\n    })\n\n\n    \n    rotate(y:-90deg)\n    \n    for i in range(det){\n      let depth=2/det*i\n\n      on-yz({\n\n        let r=fsqrt(4-depth*depth)\n\n        let start=-calc.min(1,r)\n        let end=calc.min(0, -depth+fsqrt(2))\n        start=calc.max(start,-depth)\n        \n        if start &lt; end{\n          arc((-start,fsqrt(r*r - start*start)), start: calc.acos(-start/r), stop: calc.acos(-end/r), radius:r, stroke:0.5pt)\n        }\n          \n        \n      },x:depth)\n    }\n\n    rotate(y:45deg)\n    on-yz({\n    arc((2,0), start: 0deg, stop: 180deg, radius:2)\n    })\n    on-yz({\n    arc((fsqrt(3),0), start: 0deg, stop: 180deg, radius:fsqrt(3))\n    },x:1)\n\n  },  x:40deg, y:34deg)\n\n})\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/4/47011fde852fbdb57ae22bf49ff6b17a00e80829.png\" data-download-href=\"https://forum.typst.app/uploads/default/47011fde852fbdb57ae22bf49ff6b17a00e80829\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/4/47011fde852fbdb57ae22bf49ff6b17a00e80829_2_690x434.png\" alt=\"image\" data-base62-sha1=\"a88jc8qY5C7prIYqZQhMg2tyo1b\" width=\"690\" height=\"434\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/4/47011fde852fbdb57ae22bf49ff6b17a00e80829_2_690x434.png, https://forum.typst.app/uploads/default/original/2X/4/47011fde852fbdb57ae22bf49ff6b17a00e80829.png 1.5x, https://forum.typst.app/uploads/default/original/2X/4/47011fde852fbdb57ae22bf49ff6b17a00e80829.png 2x\" data-dominant-color=\"ECECEC\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">782×492 93.9 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p><a class=\"mention\" href=\"/u/sillyfreak\">@SillyFreak</a>, thanks, i’ll update it asap.</p>",
      "raw": "In the end i managed to solve it by myself:\n\n\n```typst\n#import \"@preview/cetz:0.3.1\"\n#let fsqrt=calc.sqrt\n#cetz.canvas({\n  import cetz.draw: *\n  content=content.with(padding:0.5em)\n\n  set-style(\n    grid:(\n      stroke:gray,\n    ),\n  mark: (\n    fill: black,\n    scale:0.5,\n  )\n  )\n  scale(175%)\n\n  on-xy({\n      arc((2,0), start: 0deg, stop: 180deg, radius:2, stroke:0.5pt)\n    })\n\n  let det=80\n    \n  ortho({\n    on-xz({\n      set-style(\n        line: (stroke:0.5pt )\n      )\n      line((-2,2),(2,2))\n      line((-2,-2),(2,-2))\n\n      for i in range(4){\n        line((-1+i,2.8),(-1+i,-2))\n        content((-1.5+i,2.3),$x$)\n\n        line((-1.7+i,2.3), (-2+i,2.3), mark:(end:\">\"))\n        line((-1+i,2.3), (-1.3+i,2.3), mark:(start:\">\"))\n\n        content((-1.5+i,3),numbering(\"I\", i+1))\n        \n      }\n      line((-2,2.8),(-2,-2))\n\n      line((-2.4,2.4),(2.4,-2.4))\n\n      line((-2.4+fsqrt(2),2.4),(1.8+fsqrt(2),-1.8))\n    \n      circle((0,0),radius:2,stroke:0.5pt)\n\n\n        \n      for i in range(det){\n        let depth=2/det*i\n        let start=-calc.min(1,fsqrt(4-depth*depth))\n        let end=calc.min(0, -depth+fsqrt(2))\n        start=calc.max(start,-depth)\n        if start < end{\n          line((start,depth),(end,depth))\n        }\n      }\n\n      \n    })\n    on-yz({\n    arc((fsqrt(3),0), start: 0deg, stop: 180deg, radius:fsqrt(3))\n    },x:-1)\n\n    on-yz({\n    arc((fsqrt(3),0), start: 0deg, stop: 180deg, radius:fsqrt(3))\n    },x:1)\n    \n    on-yz({\n    arc((2,0), start: 0deg, stop: 180deg, radius:2)\n    })\n\n\n    \n    rotate(y:-90deg)\n    \n    for i in range(det){\n      let depth=2/det*i\n\n      on-yz({\n\n        let r=fsqrt(4-depth*depth)\n\n        let start=-calc.min(1,r)\n        let end=calc.min(0, -depth+fsqrt(2))\n        start=calc.max(start,-depth)\n        \n        if start < end{\n          arc((-start,fsqrt(r*r - start*start)), start: calc.acos(-start/r), stop: calc.acos(-end/r), radius:r, stroke:0.5pt)\n        }\n          \n        \n      },x:depth)\n    }\n\n    rotate(y:45deg)\n    on-yz({\n    arc((2,0), start: 0deg, stop: 180deg, radius:2)\n    })\n    on-yz({\n    arc((fsqrt(3),0), start: 0deg, stop: 180deg, radius:fsqrt(3))\n    },x:1)\n\n  },  x:40deg, y:34deg)\n\n})\n```\n\n![image|690x434](upload://a88jc8qY5C7prIYqZQhMg2tyo1b.png)\n\n\n@SillyFreak, thanks, i'll update it asap.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 6,
      "reads": 46,
      "score": 164.2,
      "accepted_answer": true,
      "trust_level": 1,
      "user_id": 467
    },
    {
      "id": 5205,
      "post_number": 4,
      "username": "M4R1S",
      "name": "Maris Baier",
      "created_at": "2024-11-06T09:58:02.380Z",
      "updated_at": "2024-11-06T09:58:02.380Z",
      "cooked": "<p>That. is. beautiful. Cetz ist the best!</p>",
      "raw": "That. is. beautiful. Cetz ist the best!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 29,
      "score": 20.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 643
    }
  ],
  "scraped_at": "2025-06-10T09:55:36.842872"
}