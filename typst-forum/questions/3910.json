{
  "topic_metadata": {
    "id": 3910,
    "title": "Help drawing a soil profile diagram with inclined backfill in Typst",
    "slug": "help-drawing-a-soil-profile-diagram-with-inclined-backfill-in-typst",
    "posts_count": 5,
    "created_at": "2025-05-02T19:58:46.886Z",
    "last_posted_at": "2025-05-04T12:46:39.740Z",
    "views": 87,
    "like_count": 2,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 3,
    "accepted_answer_username": "Andrew",
    "tags": [
      "graphics",
      "cetz"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 1034
  },
  "posts": [
    {
      "id": 11903,
      "post_number": 1,
      "username": "TlidYou",
      "name": "TlidYou",
      "created_at": "2025-05-02T19:58:47.000Z",
      "updated_at": "2025-05-04T12:45:35.793Z",
      "cooked": "<p>Hi everyone,</p>\n<p>I’m trying to reproduce the attached figure in Typst. It’s a soil profile showing two layers (gravel and sand) with inclined backfill (β = 20°), and I’d appreciate any help or example code.<br>\n<img src=\"https://forum.typst.app/uploads/default/original/2X/1/11149815ade87cf223a079896b64bb155bf7c3af.png\" alt=\"Capture\" data-base62-sha1=\"2r6eR4jdNNdOBHYAs9sDVOc7BNR\" width=\"268\" height=\"266\"></p>\n<p>Here are the details I’d like to include:</p>\n<ul>\n<li>Two soil layers:\n<ul>\n<li><strong>Bottom layer (Gravier)</strong>: γ = 21 kN/m³, φ’ = 40°, K<sub>ra2</sub> = 0.266</li>\n<li><strong>Top layer (Sable)</strong>: γ = 18 kN/m³, φ’ = 30°, K<sub>ra1</sub> = 0.441</li>\n</ul>\n</li>\n<li>Inclined backfill with slope β = 20°</li>\n<li>Layer thicknesses: z₂ = 2 m (Gravier), z₁ = 4 m (Sable), total H = 6 m</li>\n<li>Labeled points: A (bottom), B (interface), and C (top)</li>\n<li>Sloped lines for the soil surface and interface</li>\n<li>Shaded color areas for the two layers (different colors)</li>\n<li>Vertical dimension lines and labels for z₁, z₂, and H</li>\n</ul>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/cetz:0.3.4\"\n#set page(width: auto, height: auto, margin: .5cm)\n\n#cetz.canvas(length: 3cm, {\n  import cetz.draw: *\n\n  // Define slope\n  let slope = calc.tan(20deg)\n\n  // Line 1 from (0,0) to (3, 3*slope)\n  line((0, 0), (1, 2 * slope), stroke: (paint: blue))\n\n  // Line 2: parallel, offset in y by -1\n  line((0, -1), (1,  2* slope - 1), stroke: (paint: red))\n   set-style(stroke: (thickness: 1.2pt))\n  line((0, 0), (0, -1.5), stroke: (paint: black))\n})\n</code></pre>\n<p>Any help writing the Typst code to generate this would be greatly appreciated!</p>\n<p>Thanks in advance!</p>",
      "raw": "Hi everyone,\n\nI'm trying to reproduce the attached figure in Typst. It's a soil profile showing two layers (gravel and sand) with inclined backfill (β = 20°), and I'd appreciate any help or example code.\n![Capture|268x266](upload://2r6eR4jdNNdOBHYAs9sDVOc7BNR.png)\n\nHere are the details I'd like to include:\n\n* Two soil layers:\n  * **Bottom layer (Gravier)**: γ = 21 kN/m³, φ' = 40°, K<sub>ra2</sub> = 0.266\n  * **Top layer (Sable)**: γ = 18 kN/m³, φ' = 30°, K<sub>ra1</sub> = 0.441\n* Inclined backfill with slope β = 20°\n* Layer thicknesses: z₂ = 2 m (Gravier), z₁ = 4 m (Sable), total H = 6 m\n* Labeled points: A (bottom), B (interface), and C (top)\n* Sloped lines for the soil surface and interface\n* Shaded color areas for the two layers (different colors)\n* Vertical dimension lines and labels for z₁, z₂, and H\n\n```typ\n#import \"@preview/cetz:0.3.4\"\n#set page(width: auto, height: auto, margin: .5cm)\n\n#cetz.canvas(length: 3cm, {\n  import cetz.draw: *\n\n  // Define slope\n  let slope = calc.tan(20deg)\n\n  // Line 1 from (0,0) to (3, 3*slope)\n  line((0, 0), (1, 2 * slope), stroke: (paint: blue))\n\n  // Line 2: parallel, offset in y by -1\n  line((0, -1), (1,  2* slope - 1), stroke: (paint: red))\n   set-style(stroke: (thickness: 1.2pt))\n  line((0, 0), (0, -1.5), stroke: (paint: black))\n})\n```\n\n\nAny help writing the Typst code to generate this would be greatly appreciated!\n\nThanks in advance!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 33,
      "score": 86.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1467
    },
    {
      "id": 11915,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-03T01:28:12.922Z",
      "updated_at": "2025-05-03T01:41:42.408Z",
      "cooked": "<p>Hi. Please read the <a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11\" class=\"inline-onebox\">How to post in the Questions category</a>. The category should be <a class=\"hashtag-cooked\" href=\"/c/questions/5\" data-type=\"category\" data-slug=\"questions\" data-id=\"5\"><span class=\"hashtag-icon-placeholder\"><svg class=\"fa d-icon d-icon-square-full svg-icon svg-node\"><use href=\"#square-full\"></use></svg></span><span>Questions</span></a>.</p>\n<aside class=\"quote no-group quote-modified\" data-username=\"reknih\" data-post=\"1\" data-topic=\"11\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/reknih/48/3_2.png\" class=\"avatar\"><a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11/1\">How to post in the Questions category</a></div>\n<blockquote>\n<p>If your question pertains to a bit of Typst markup you have problems with, put it in the question body! You can syntax-highlight Typst code by wrapping it in ` ```typ … ````. It will then look like this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set font(size: 12pt)\n\nHello from *Typst* at $ pi.var + 1 $ o'clock!\n</code></pre>\n<p>If you need to highlight a code or math mode snippet instead, the language tags <code>typc</code> and <code>typm</code> do that, respectively.</p>\n</blockquote>\n</aside>",
      "raw": "Hi. Please read the https://forum.typst.app/t/how-to-post-in-the-questions-category/11. The category should be #questions.\n\n[quote=\"reknih, post:1, topic:11\"]\nIf your question pertains to a bit of Typst markup you have problems with, put it in the question body! You can syntax-highlight Typst code by wrapping it in ` ```typ ... ````. It will then look like this:\n\n```typ\n#set font(size: 12pt)\n\nHello from *Typst* at $ pi.var + 1 $ o'clock!\n```\n\nIf you need to highlight a code or math mode snippet instead, the language tags `typc` and `typm` do that, respectively.\n[/quote]",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 29,
      "score": 10.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11916,
      "post_number": 3,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-03T01:37:16.091Z",
      "updated_at": "2025-05-03T01:38:24.927Z",
      "cooked": "<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/cetz:0.3.4\"\n#set page(width: auto, height: auto, margin: .5cm)\n\n#set text(8pt)\n#cetz.canvas(length: 1cm, {\n  let olive = rgb(\"#a5a552\")\n\n  let pattern(degree, width: 10cm, dx: 0pt) = tiling(size: (width, 10cm), {\n    let rect = rect(width: 8pt, stroke: olive)\n    let rail = tiling(size: (11pt, 4pt), place(dx: 0.5pt, rect))\n    rotate(degree, move(dx: dx, block(width: width, height: 10cm, fill: rail)))\n  })\n\n  import cetz.draw: *\n\n  let draw-slope(pos, deg) = {\n    line(pos, (rel: (1.5, 0)), name: \"l\")\n    let label = $beta = #calc.round(deg.deg()) degree$\n    content((rel: (0.3, -0.2), to: \"l.mid\"), text(0.8em, label))\n    let mark = (symbol: \"&gt;\", width: 4pt, scale: 0.4)\n    arc(\"l.end\", radius: 1.5, start: 0deg, stop: deg, mark: mark)\n  }\n\n  let draw-pattern(from, to, height: 0.3, pattern) = line(\n    (rel: (0, -height), to: from),\n    (rel: (0, height)),\n    to,\n    (rel: (0, -height)),\n    close: true,\n    stroke: none,\n    fill: pattern,\n  )\n\n  let soil-info(name, body) = content(name, {\n    set align(center)\n    set par(spacing: 0.5em)\n    set par(leading: 0.3em)\n    underline(emph(name))\n    parbreak()\n    body\n  })\n\n  let height = 6\n  let gravier-height = 2\n  let beta = 20deg\n  let slope = (beta, 5)\n\n  // Sable background\n  line(\n    (0, gravier-height),\n    (0, height),\n    (rel: slope),\n    (rel: (0, -(height - gravier-height))),\n    fill: rgb(\"#ece9c0\"),\n    stroke: none,\n    close: true,\n    name: \"Sable\",\n  )\n\n  draw-slope(\"Sable.32%\", beta)\n  draw-pattern(\"Sable.25%\", \"Sable.31%\", pattern(5deg, dx: -12mm))\n  draw-pattern(\"Sable.42%\", \"Sable.49%\", pattern(5deg, dx: -12mm))\n\n  soil-info(\"Sable\")[\n    $\n          gamma &amp; = 18 [k N\\/m^3] \\\n           phi' &amp; = 30 degree     \\\n      K_(r a_1) &amp; = 0.441         \\\n    $\n  ]\n\n  // Gravier background\n  line(\n    (0, 0),\n    (0, gravier-height),\n    (rel: slope),\n    ((), \"|-\", (0, 0)),\n    fill: rgb(\"#c7e6c7\"),\n    stroke: none,\n    close: true,\n    name: \"Gravier\",\n  )\n\n  draw-slope(\"Gravier.28%\", beta)\n\n  soil-info(\"Gravier\")[\n    $\n          gamma &amp; = 21 [k N\\/m^3] \\\n           phi' &amp; = 40 degree     \\\n      K_(r a_2) &amp; = 0.266         \\\n    $\n  ]\n\n  // Right-side lines\n  line((0, height), (rel: slope), stroke: olive)\n  line((0, gravier-height), (rel: slope), stroke: red)\n\n  // Left-side lines\n  let right-length = 3\n  line((0, 0), (rel: (-right-length, 0)), name: \"l\", stroke: olive)\n  draw-pattern(\"l.12%\", \"l.90%\", pattern(30deg, width: 25.8mm, dx: -28.8mm))\n  line((0, height), (rel: (-right-length, 0)))\n\n  let dimention-text(at, body) = {\n    content(at, box(fill: white, inset: 0.1em, body))\n  }\n  let dimention-line(..args) = {\n    let s = (symbol: \"&gt;\", fill: black, stroke: (miter-limit: 100), width: 0.5mm)\n    line(mark: s, ..args)\n  }\n\n  let x = -right-length + 0.2\n  dimention-line((x, 0), (x, height), name: \"H\")\n  dimention-text(\"H.mid\")[$\"H\" = height thin \"m\"$]\n\n  let x = -right-length / 2\n\n  anchor(\"C\", (rel: (-0.1, -0.1), to: (0, height)))\n  content(\"C\", anchor: \"north-east\")[$C$]\n\n  dimention-line((x, gravier-height), (x, height), name: \"z1\")\n  let pos = (rel: (-0.3, 0), to: \"z1.mid\")\n  dimention-text(pos)[$z_1 = #(height - gravier-height) thin \"m\"$]\n\n  line((0, gravier-height), (rel: (x - 0.1, 0)))\n\n  anchor(\"B\", (rel: (-0.1, -0.1), to: (0, gravier-height)))\n  content(\"B\", anchor: \"north-east\")[$B$]\n\n  dimention-line((x, 0), (x, gravier-height), name: \"z2\")\n  let pos = (rel: (-0.3, 0), to: \"z2.mid\")\n  dimention-text(pos)[$z_2 = #gravier-height thin \"m\"$]\n\n  anchor(\"A\", (rel: (-0.1, -0.1), to: (0, 0)))\n  content(\"A\", anchor: \"north-east\")[$A$]\n\n  line((0, 0), (0, height), stroke: 1.5pt)\n})\n</code></pre>\n<details><summary>Output</summary>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/f/f24d426c71c9139eaeacf1804c6e8189c64fa86a.png\" data-download-href=\"https://forum.typst.app/uploads/default/f24d426c71c9139eaeacf1804c6e8189c64fa86a\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/f/f24d426c71c9139eaeacf1804c6e8189c64fa86a_2_367x375.png\" alt=\"image\" data-base62-sha1=\"yzv4GchSJSE4g1GxgClfyTknB0K\" width=\"367\" height=\"375\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/f/f24d426c71c9139eaeacf1804c6e8189c64fa86a_2_367x375.png, https://forum.typst.app/uploads/default/optimized/2X/f/f24d426c71c9139eaeacf1804c6e8189c64fa86a_2_550x562.png 1.5x, https://forum.typst.app/uploads/default/optimized/2X/f/f24d426c71c9139eaeacf1804c6e8189c64fa86a_2_734x750.png 2x\" data-dominant-color=\"E7EBD8\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">919×936 57.9 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n</details>\n<p>You can change these variables and pretty much everything will automatically adapt to new values:</p>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">  let height = 6\n  let gravier-height = 2\n  let beta = 20deg\n  let slope = (beta, 5)\n  let right-length = 3\n</code></pre>\n<p>The only thing that doesn’t work great is the pattern. It is pretty complex in terms of transformation, so I don’t know how to make it more adaptable. I also tried to copy the start/end look from the original image.</p>\n<p>You can play with global <code>length</code> and font size to get better scaling of things.</p>",
      "raw": "```typ\n#import \"@preview/cetz:0.3.4\"\n#set page(width: auto, height: auto, margin: .5cm)\n\n#set text(8pt)\n#cetz.canvas(length: 1cm, {\n  let olive = rgb(\"#a5a552\")\n\n  let pattern(degree, width: 10cm, dx: 0pt) = tiling(size: (width, 10cm), {\n    let rect = rect(width: 8pt, stroke: olive)\n    let rail = tiling(size: (11pt, 4pt), place(dx: 0.5pt, rect))\n    rotate(degree, move(dx: dx, block(width: width, height: 10cm, fill: rail)))\n  })\n\n  import cetz.draw: *\n\n  let draw-slope(pos, deg) = {\n    line(pos, (rel: (1.5, 0)), name: \"l\")\n    let label = $beta = #calc.round(deg.deg()) degree$\n    content((rel: (0.3, -0.2), to: \"l.mid\"), text(0.8em, label))\n    let mark = (symbol: \">\", width: 4pt, scale: 0.4)\n    arc(\"l.end\", radius: 1.5, start: 0deg, stop: deg, mark: mark)\n  }\n\n  let draw-pattern(from, to, height: 0.3, pattern) = line(\n    (rel: (0, -height), to: from),\n    (rel: (0, height)),\n    to,\n    (rel: (0, -height)),\n    close: true,\n    stroke: none,\n    fill: pattern,\n  )\n\n  let soil-info(name, body) = content(name, {\n    set align(center)\n    set par(spacing: 0.5em)\n    set par(leading: 0.3em)\n    underline(emph(name))\n    parbreak()\n    body\n  })\n\n  let height = 6\n  let gravier-height = 2\n  let beta = 20deg\n  let slope = (beta, 5)\n\n  // Sable background\n  line(\n    (0, gravier-height),\n    (0, height),\n    (rel: slope),\n    (rel: (0, -(height - gravier-height))),\n    fill: rgb(\"#ece9c0\"),\n    stroke: none,\n    close: true,\n    name: \"Sable\",\n  )\n\n  draw-slope(\"Sable.32%\", beta)\n  draw-pattern(\"Sable.25%\", \"Sable.31%\", pattern(5deg, dx: -12mm))\n  draw-pattern(\"Sable.42%\", \"Sable.49%\", pattern(5deg, dx: -12mm))\n\n  soil-info(\"Sable\")[\n    $\n          gamma & = 18 [k N\\/m^3] \\\n           phi' & = 30 degree     \\\n      K_(r a_1) & = 0.441         \\\n    $\n  ]\n\n  // Gravier background\n  line(\n    (0, 0),\n    (0, gravier-height),\n    (rel: slope),\n    ((), \"|-\", (0, 0)),\n    fill: rgb(\"#c7e6c7\"),\n    stroke: none,\n    close: true,\n    name: \"Gravier\",\n  )\n\n  draw-slope(\"Gravier.28%\", beta)\n\n  soil-info(\"Gravier\")[\n    $\n          gamma & = 21 [k N\\/m^3] \\\n           phi' & = 40 degree     \\\n      K_(r a_2) & = 0.266         \\\n    $\n  ]\n\n  // Right-side lines\n  line((0, height), (rel: slope), stroke: olive)\n  line((0, gravier-height), (rel: slope), stroke: red)\n\n  // Left-side lines\n  let right-length = 3\n  line((0, 0), (rel: (-right-length, 0)), name: \"l\", stroke: olive)\n  draw-pattern(\"l.12%\", \"l.90%\", pattern(30deg, width: 25.8mm, dx: -28.8mm))\n  line((0, height), (rel: (-right-length, 0)))\n\n  let dimention-text(at, body) = {\n    content(at, box(fill: white, inset: 0.1em, body))\n  }\n  let dimention-line(..args) = {\n    let s = (symbol: \">\", fill: black, stroke: (miter-limit: 100), width: 0.5mm)\n    line(mark: s, ..args)\n  }\n\n  let x = -right-length + 0.2\n  dimention-line((x, 0), (x, height), name: \"H\")\n  dimention-text(\"H.mid\")[$\"H\" = height thin \"m\"$]\n\n  let x = -right-length / 2\n\n  anchor(\"C\", (rel: (-0.1, -0.1), to: (0, height)))\n  content(\"C\", anchor: \"north-east\")[$C$]\n\n  dimention-line((x, gravier-height), (x, height), name: \"z1\")\n  let pos = (rel: (-0.3, 0), to: \"z1.mid\")\n  dimention-text(pos)[$z_1 = #(height - gravier-height) thin \"m\"$]\n\n  line((0, gravier-height), (rel: (x - 0.1, 0)))\n\n  anchor(\"B\", (rel: (-0.1, -0.1), to: (0, gravier-height)))\n  content(\"B\", anchor: \"north-east\")[$B$]\n\n  dimention-line((x, 0), (x, gravier-height), name: \"z2\")\n  let pos = (rel: (-0.3, 0), to: \"z2.mid\")\n  dimention-text(pos)[$z_2 = #gravier-height thin \"m\"$]\n\n  anchor(\"A\", (rel: (-0.1, -0.1), to: (0, 0)))\n  content(\"A\", anchor: \"north-east\")[$A$]\n\n  line((0, 0), (0, height), stroke: 1.5pt)\n})\n```\n\n<details><summary>Output</summary>\n\n![image|490x500, 75%](upload://yzv4GchSJSE4g1GxgClfyTknB0K.png)\n\n</details>\n\nYou can change these variables and pretty much everything will automatically adapt to new values:\n\n```typc\n  let height = 6\n  let gravier-height = 2\n  let beta = 20deg\n  let slope = (beta, 5)\n  let right-length = 3\n```\n\nThe only thing that doesn't work great is the pattern. It is pretty complex in terms of transformation, so I don't know how to make it more adaptable. I also tried to copy the start/end look from the original image.\n\nYou can play with global `length` and font size to get better scaling of things.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 31,
      "score": 21.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11922,
      "post_number": 4,
      "username": "TlidYou",
      "name": "TlidYou",
      "created_at": "2025-05-03T04:18:06.092Z",
      "updated_at": "2025-05-03T04:18:06.092Z",
      "cooked": "<p>Thank you for your time.</p>",
      "raw": "Thank you for your time.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 31,
      "score": 11.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1467
    },
    {
      "id": 11962,
      "post_number": 5,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-05-04T12:46:39.740Z",
      "updated_at": "2025-05-04T12:46:39.740Z",
      "cooked": "<p>Hi <a class=\"mention\" href=\"/u/tlidyou\">@TlidYou</a>, thanks for your question! If you feel the response you got has sufficiently answered your question, be sure to give it a checkmark <img src=\"https://forum.typst.app/images/emoji/apple/ballot_box_with_check.png?v=12\" title=\":ballot_box_with_check:\" class=\"emoji\" alt=\":ballot_box_with_check:\" loading=\"lazy\" width=\"20\" height=\"20\">. This will help others find the solution in the future. If something is missing, please let us know what so we can resolve your issue. Thanks!</p>",
      "raw": "Hi @TlidYou, thanks for your question! If you feel the response you got has sufficiently answered your question, be sure to give it a checkmark :ballot_box_with_check:. This will help others find the solution in the future. If something is missing, please let us know what so we can resolve your issue. Thanks!",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 21,
      "score": 4.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    }
  ],
  "scraped_at": "2025-06-10T09:48:21.482611"
}