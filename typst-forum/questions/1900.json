{
  "topic_metadata": {
    "id": 1900,
    "title": "How do I sort an array of dictionaries by more than one key?",
    "slug": "how-do-i-sort-an-array-of-dictionaries-by-more-than-one-key",
    "posts_count": 5,
    "created_at": "2024-11-26T14:57:26.602Z",
    "last_posted_at": "2024-12-03T17:10:43.755Z",
    "views": 223,
    "like_count": 3,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "quachpas",
    "tags": [
      "scripting"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 233
  },
  "posts": [
    {
      "id": 6122,
      "post_number": 1,
      "username": "NNS",
      "name": "Nikolai Neff-Sarnow",
      "created_at": "2024-11-26T14:57:26.775Z",
      "updated_at": "2024-12-07T18:13:29.119Z",
      "cooked": "<p>Let’s say I have the following array:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let arr = (\n  (a: \"foo\", b: \"not bar\", c: \"baz\"),\n  (a: \"qux\", b: \"quux\", c: \"corge\"),\n  (a: \"fizz\", b: \"buzz\", c: \"fizzbuzz\"),\n  (a: \"foo\", b: \"bar\", c: \"baz\"),\n)\n</code></pre>\n<p>I now want to sort this array fist by the key <code>a</code> of the contained dictionary <em>and then</em> by the key <code>b</code>. using <code>#arr.sorted(key: it =&gt; it.a)</code> only sorts by the first key. If they are the same, like in line 1 and 4, I then want to sort by key <code>b</code> within this subgroub, such that the result would be:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">(\n  (a: \"fizz\", b: \"buzz\", c: \"fizzbuzz\"),\n  (a: \"foo\", b: \"bar\", c: \"baz\"),\n  (a: \"foo\", b: \"not bar\", c: \"baz\"),\n  (a: \"qux\", b: \"quux\", c: \"corge\"),\n)\n</code></pre>\n<p>How can I achieve this sorting?</p>",
      "raw": "Let's say I have the following array:\n```typst\n#let arr = (\n  (a: \"foo\", b: \"not bar\", c: \"baz\"),\n  (a: \"qux\", b: \"quux\", c: \"corge\"),\n  (a: \"fizz\", b: \"buzz\", c: \"fizzbuzz\"),\n  (a: \"foo\", b: \"bar\", c: \"baz\"),\n)\n```\nI now want to sort this array fist by the key `a` of the contained dictionary _and then_ by the key `b`. using `#arr.sorted(key: it => it.a)` only sorts by the first key. If they are the same, like in line 1 and 4, I then want to sort by key `b` within this subgroub, such that the result would be:\n```typst\n(\n  (a: \"fizz\", b: \"buzz\", c: \"fizzbuzz\"),\n  (a: \"foo\", b: \"bar\", c: \"baz\"),\n  (a: \"foo\", b: \"not bar\", c: \"baz\"),\n  (a: \"qux\", b: \"quux\", c: \"corge\"),\n)\n```\nHow can I achieve this sorting?",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 40,
      "score": 998.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 754
    },
    {
      "id": 6123,
      "post_number": 2,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-11-26T15:03:24.398Z",
      "updated_at": "2024-11-26T15:03:24.398Z",
      "cooked": "<p>You can give a tuple for the key.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#arr.sorted(key: it =&gt; (it.a, it.b))\n</code></pre>",
      "raw": "You can give a tuple for the key.\n\n```typ\n#arr.sorted(key: it => (it.a, it.b))\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 35,
      "score": 47.0,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 6124,
      "post_number": 3,
      "username": "ParaN3xus",
      "name": "ParaN3xus",
      "created_at": "2024-11-26T15:05:59.102Z",
      "updated_at": "2024-11-26T15:07:01.617Z",
      "cooked": "<p>You can also give a sum of <code>a</code> and <code>b</code> for the key.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#arr.sorted(key: x =&gt; x.a + x.b)\n</code></pre>\n<p>But I think a <code>sorted</code> function with custom compare function will be better. Unfortunately it’s not supported yet, but there’s already an <a href=\"https://github.com/typst/typst/issues/5365\">issue</a>.</p>",
      "raw": "You can also give a sum of `a` and `b` for the key.\n```typ\n#arr.sorted(key: x => x.a + x.b)\n```\n\nBut I think a `sorted` function with custom compare function will be better. Unfortunately it's not supported yet, but there's already an [issue](https://github.com/typst/typst/issues/5365).",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 37,
      "score": 22.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 14
    },
    {
      "id": 6125,
      "post_number": 4,
      "username": "NNS",
      "name": "Nikolai Neff-Sarnow",
      "created_at": "2024-11-26T15:17:53.628Z",
      "updated_at": "2024-11-26T15:29:12.023Z",
      "cooked": "<p>nice! I think the docs should be updated to mention this possibility. If I find the time I’ll create a PR</p>",
      "raw": "nice! I think the docs should be updated to mention this possibility. If I find the time I'll create a PR",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 34,
      "score": 26.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 754
    },
    {
      "id": 6287,
      "post_number": 5,
      "username": "NNS",
      "name": "Nikolai Neff-Sarnow",
      "created_at": "2024-12-03T17:10:43.755Z",
      "updated_at": "2024-12-03T17:10:43.755Z",
      "cooked": "<p><a href=\"https://github.com/typst/typst/pull/5475\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Add documentation example to `array.sorted()` by nineff · Pull Request #5475 · typst/typst · GitHub</a> is merged!</p>",
      "raw": "https://github.com/typst/typst/pull/5475 is merged!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 25,
      "score": 30.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 754
    }
  ],
  "scraped_at": "2025-06-10T09:54:21.811688"
}