{
  "topic_metadata": {
    "id": 4018,
    "title": "How to reproduce a stress diagram image in Typst?",
    "slug": "how-to-reproduce-a-stress-diagram-image-in-typst",
    "posts_count": 11,
    "created_at": "2025-05-10T16:26:02.263Z",
    "last_posted_at": "2025-05-11T19:47:42.394Z",
    "views": 136,
    "like_count": 5,
    "reply_count": 5,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 7,
    "accepted_answer_username": "Andrew",
    "tags": [
      "graphics",
      "lilaq"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 961
  },
  "posts": [
    {
      "id": 12231,
      "post_number": 1,
      "username": "TlidYou",
      "name": "TlidYou",
      "created_at": "2025-05-10T16:26:02.389Z",
      "updated_at": "2025-05-11T16:56:28.504Z",
      "cooked": "<p>Hi everyone,</p>\n<p>I’m trying to recreate a stress diagram in Typst that includes:</p>\n<ul>\n<li>A grid with labeled axes (Normal stress vs. Shear stress)</li>\n<li>A straight line representing a failure envelope (starting from the cohesion intercept)</li>\n<li>Several circular data points along the line</li>\n<li>An annotated point labeled (320, 138)</li>\n<li>A text box in the top-right corner showing <code>c = 34 kN/m²</code> and <code>ϕ = 20°</code></li>\n</ul>\n<p>Here’s the reference image I’m trying to replicate:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/8/8a99a479635a821a582c7952b7efdc6aa78f7fb6.png\" data-download-href=\"https://forum.typst.app/uploads/default/8a99a479635a821a582c7952b7efdc6aa78f7fb6\" title=\"page_295 conv 1\"><img src=\"https://forum.typst.app/uploads/default/original/2X/8/8a99a479635a821a582c7952b7efdc6aa78f7fb6.png\" alt=\"page_295 conv 1\" data-base62-sha1=\"jM74eYkie5y6ybTXV4InGDwxGZM\" width=\"690\" height=\"412\" data-dominant-color=\"F2F1F1\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">page_295 conv 1</span><span class=\"informations\">1174×702 14.2 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\nI’ve started writing some code using lilaq</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/lilaq:0.1.0\" as lq\n\n#let xs = (100, 200, 300, 400)\n\n#lq.diagram(\n  width: 15cm, \n  height: 7cm,\n  ylim: (30, 350),\n  xlim: (0, 450),\n  margin: (x: 5%),\n  title: [Data],\n  xlabel: $sigma_n | k N\\/m^2$, \n  ylabel: $tau | k N\\/m^2$,\n\n  lq.scatter(xs, (72.2, 105.6, 144.4, 177.7), mark: \"s\", label: [A]),\n \n)\n</code></pre>\n<p>Thanks a lot in advance for your help!</p>",
      "raw": "Hi everyone,\n\nI'm trying to recreate a stress diagram in Typst that includes:\n\n* A grid with labeled axes (Normal stress vs. Shear stress)\n* A straight line representing a failure envelope (starting from the cohesion intercept)\n* Several circular data points along the line\n* An annotated point labeled (320, 138)\n* A text box in the top-right corner showing `c = 34 kN/m²` and `ϕ = 20°`\n\nHere’s the reference image I'm trying to replicate:\n![page_295 conv 1|690x412](upload://jM74eYkie5y6ybTXV4InGDwxGZM.png)\nI've started writing some code using lilaq\n\n```typ\n#import \"@preview/lilaq:0.1.0\" as lq\n\n#let xs = (100, 200, 300, 400)\n\n#lq.diagram(\n  width: 15cm, \n  height: 7cm,\n  ylim: (30, 350),\n  xlim: (0, 450),\n  margin: (x: 5%),\n  title: [Data],\n  xlabel: $sigma_n | k N\\/m^2$, \n  ylabel: $tau | k N\\/m^2$,\n\n  lq.scatter(xs, (72.2, 105.6, 144.4, 177.7), mark: \"s\", label: [A]),\n \n)\n```\nThanks a lot in advance for your help!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 47,
      "score": 49.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1467
    },
    {
      "id": 12232,
      "post_number": 2,
      "username": "vmartel08",
      "name": "Vincent Martel",
      "created_at": "2025-05-10T16:59:46.483Z",
      "updated_at": "2025-05-10T22:40:45.294Z",
      "cooked": "<p>Hi there <a class=\"mention\" href=\"/u/tlidyou\">@TlidYou</a>,</p>\n<p>Nice job getting accustomed to using <code>Lilaq</code>. It is worth mentioning that <code>Lilaq</code> is now v. 0.3.0 and should be imported using:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/lilaq:0.2.0\" as lq //0.3.0 waiting for PR to be released\n</code></pre>\n<p>What can we help you with exactly? Your question is obviously about reproducing the image, but it seems what you are looking for is some advice on how to use <code>Lilaq</code> for that purpose, am I correct?</p>\n<p>If so, could you please give a more precise description of what you are looking for (change <a href=\"https://lilaq.org/docs/tutorials/marks\" class=\"inline-onebox\">Marks − Lilaq</a> for example) and how we can help?</p>\n<p>Or are you just looking for someone to replicate the whole thing for you instead?</p>\n<p>Also please tag your question with the appropriate tags (such as <a class=\"hashtag-cooked\" href=\"/tag/lilaq\" data-type=\"tag\" data-slug=\"lilaq\" data-id=\"160\"><span class=\"hashtag-icon-placeholder\"><svg class=\"fa d-icon d-icon-square-full svg-icon svg-node\"><use href=\"#square-full\"></use></svg></span><span>lilaq</span></a>) for traceability.</p>",
      "raw": "Hi there @TlidYou, \n\nNice job getting accustomed to using `Lilaq`. It is worth mentioning that `Lilaq` is now v. 0.3.0 and should be imported using:\n\n```typ \n#import \"@preview/lilaq:0.2.0\" as lq //0.3.0 waiting for PR to be released\n```\nWhat can we help you with exactly? Your question is obviously about reproducing the image, but it seems what you are looking for is some advice on how to use `Lilaq` for that purpose, am I correct? \n\nIf so, could you please give a more precise description of what you are looking for (change https://lilaq.org/docs/tutorials/marks for example) and how we can help? \n\nOr are you just looking for someone to replicate the whole thing for you instead?\n\nAlso please tag your question with the appropriate tags (such as #lilaq) for traceability.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 45,
      "score": 29.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 936
    },
    {
      "id": 12233,
      "post_number": 3,
      "username": "TlidYou",
      "name": "TlidYou",
      "created_at": "2025-05-10T19:36:18.292Z",
      "updated_at": "2025-05-10T19:36:18.292Z",
      "cooked": "<p>Hi <a class=\"mention\" href=\"/u/vmartel08\">@vmartel08</a><br>\nAs a new Typst user, my goal was to draw a line starting at the point (0,34) with a slope defined by a 20° angle.</p>",
      "raw": "Hi @vmartel08 \nAs a new Typst user, my goal was to draw a line starting at the point (0,34) with a slope defined by a 20° angle.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 43,
      "score": 13.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1467
    },
    {
      "id": 12236,
      "post_number": 4,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-10T22:31:14.236Z",
      "updated_at": "2025-05-10T22:31:14.236Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"vmartel08\" data-post=\"2\" data-topic=\"4018\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/vmartel08/48/1586_2.png\" class=\"avatar\"> vmartel08:</div>\n<blockquote>\n<p>It is worth mentioning that <code>Lilaq</code> is now v. 0.3.0 and should be imported using:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/lilaq:0.3.0\" as lq\n</code></pre>\n</blockquote>\n</aside>\n<p>It is version 0.2.0.</p>",
      "raw": "[quote=\"vmartel08, post:2, topic:4018\"]\nIt is worth mentioning that `Lilaq` is now v. 0.3.0 and should be imported using:\n\n```typ\n#import \"@preview/lilaq:0.3.0\" as lq\n```\n[/quote]\n\nIt is version 0.2.0.",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 0,
      "reads": 38,
      "score": 7.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12237,
      "post_number": 5,
      "username": "vmartel08",
      "name": "Vincent Martel",
      "created_at": "2025-05-10T22:38:35.067Z",
      "updated_at": "2025-05-10T22:38:35.067Z",
      "cooked": "<p>Yes, my bad, the <a href=\"https://github.com/typst/packages/pull/2338\" class=\"inline-onebox\">lilaq:0.3.0 by Mc-Zen · Pull Request #2338 · typst/packages · GitHub</a> has not been released on Universe yet.</p>",
      "raw": "Yes, my bad, the https://github.com/typst/packages/pull/2338 has not been released on Universe yet.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 39,
      "score": 7.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 936
    },
    {
      "id": 12238,
      "post_number": 6,
      "username": "vmartel08",
      "name": "Vincent Martel",
      "created_at": "2025-05-10T23:39:27.711Z",
      "updated_at": "2025-05-10T23:39:27.711Z",
      "cooked": "<p>You seem to have a good start for the labels and dimensions. Try:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#lq.diagram(\n  lq.plot(\n    range(640),\n    range(640).map(x =&gt; 1/2.7475 * x + 34),\n    every: 100\n  ),\n  lq.scatter((320,),(138,), mark: \"o\"),\n\n  lq.place(95%, 20%, align: right, box(stroke: 1pt, inset: 2pt, [Some text \\ and more])\n  ),\n)\n</code></pre>",
      "raw": "You seem to have a good start for the labels and dimensions. Try:\n\n```typ\n#lq.diagram(\n  lq.plot(\n    range(640),\n    range(640).map(x => 1/2.7475 * x + 34),\n    every: 100\n  ),\n  lq.scatter((320,),(138,), mark: \"o\"),\n\n  lq.place(95%, 20%, align: right, box(stroke: 1pt, inset: 2pt, [Some text \\ and more])\n  ),\n)\n```",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 42,
      "score": 8.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 936
    },
    {
      "id": 12240,
      "post_number": 7,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-11T00:52:55.006Z",
      "updated_at": "2025-05-13T15:16:54.962Z",
      "cooked": "<p>Hi. I have no idea how to make accurate arcs other than using CeTZ, so this is why I use it here (although I guess you don’t need it anyway):</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/lilaq:0.2.0\" as lq\n#import \"@preview/cetz:0.3.4\"\n\n#let slope = 20deg\n#let f(x) = calc.tan(slope) * x + 34\n\n#show: lq.set-tick(inset: 0pt)\n#show: lq.set-grid(stroke: black, stroke-sub: 0.5pt)\n#show: lq.set-diagram(cycle: (\n  it =&gt; {\n    set lq.style(stroke: 0.5pt + black)\n    it\n  },\n))\n\n// In the future, can be set with set lq.mark(stroke: black, fill: white)\n#let lq-scatter = lq.scatter.with(stroke: black, color: white)\n// In the future, can be set with set lq.style(stroke: black, fill: white)\n#let lq-rect = lq.rect.with(stroke: black, fill: white)\n\n#let point(x, y, size: 3mm, color: black, align: left, offset: 0.6em) = {\n  let body = {\n    set text(top-edge: \"bounds\", bottom-edge: \"bounds\")\n    box(fill: white)[$(#x, #y)$]\n  }\n  (\n    lq.scatter((x,), (y,), size: size, color: color),\n    lq.place(x, y, align: align, pad(offset, body)),\n  )\n}\n\n#let y-max = 400\n#let x-max = 640\n#lq.diagram(\n  width: 15cm,\n  height: 15cm * y-max / x-max,\n  ylim: (0, y-max),\n  xlim: (0, x-max),\n  yaxis: (tick-distance: 80, subticks: 1),\n  xaxis: (tick-distance: 80, subticks: 1),\n  xlabel: [Normal stress, $k N\\/m^2$],\n  ylabel: [Shear stress, $k N\\/m^2$],\n\n  let xs = lq.linspace(0, 590),\n  lq.plot(xs, xs.map(f), mark: none),\n\n  lq.line((520, 223), (555, 223), stroke: 0.5pt),\n  lq.place(520, 223, cetz.canvas({\n    cetz.draw.circle((0, 0), radius: 0.8, stroke: 0pt) // Positioning hack.\n    let arc = cetz.draw.arc.with(anchor: \"origin\")\n    arc((0, 0), start: 0deg, delta: slope, radius: 0.7, stroke: 0.5pt)\n  })),\n\n  let xs = (100, 200, 300, 400),\n  lq-scatter(xs, xs.map(f), size: 6mm),\n  // Coordinate-based size can be achieved with ellipse in the future.\n\n  ..point(320, 138),\n\n  lq-rect(400, 320, width: 160, height: 80),\n  lq.place(400 + 80, 320 + 40)[\n    #set par(leading: 0.4em)\n    $\n      c = 34 med k N\\/m^2 \\\n      phi.alt = 20 degree \\\n    $\n  ],\n)\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/8/897e2a9968acb4d919084bc2bf8294d3663a0d9d.png\" data-download-href=\"https://forum.typst.app/uploads/default/897e2a9968acb4d919084bc2bf8294d3663a0d9d\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/8/897e2a9968acb4d919084bc2bf8294d3663a0d9d_2_690x441.png\" alt=\"image\" data-base62-sha1=\"jCjIRZH4BYX63xOZ6x8XbVnbl0h\" width=\"690\" height=\"441\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/8/897e2a9968acb4d919084bc2bf8294d3663a0d9d_2_690x441.png, https://forum.typst.app/uploads/default/original/2X/8/897e2a9968acb4d919084bc2bf8294d3663a0d9d.png 1.5x, https://forum.typst.app/uploads/default/original/2X/8/897e2a9968acb4d919084bc2bf8294d3663a0d9d.png 2x\" data-dominant-color=\"191919\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">810×518 34.5 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>With the upcoming Lilaq version, some stuff probably can be simplified, or maybe even right now.</p>\n<aside class=\"onebox githubissue\" data-onebox-src=\"https://github.com/lilaq-project/lilaq/issues/16\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/lilaq-project/lilaq/issues/16\" target=\"_blank\" rel=\"noopener\">github.com/lilaq-project/lilaq</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n  <div class=\"github-icon-container\" title=\"Issue\" data-github-private-repo=\"false\">\n\t  <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 14 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"></path></svg>\n  </div>\n\n  <div class=\"github-info-container\">\n    <h4>\n      <a href=\"https://github.com/lilaq-project/lilaq/issues/16\" target=\"_blank\" rel=\"noopener\">Feature Request: add ability to attach labels to points and lines</a>\n    </h4>\n\n    <div class=\"github-info\">\n      <div class=\"date\">\n        opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2025-04-06\" data-time=\"18:53:25\" data-timezone=\"UTC\">06:53PM - 06 Apr 25 UTC</span>\n      </div>\n\n\n      <div class=\"user\">\n        <a href=\"https://github.com/adrfantini\" target=\"_blank\" rel=\"noopener\">\n          <img alt=\"adrfantini\" src=\"https://forum.typst.app/uploads/default/original/2X/4/4159a3cae031dc39c6dcc13ca82ff6ff7324938c.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"675A54\">\n          adrfantini\n        </a>\n      </div>\n    </div>\n\n    <div class=\"labels\">\n        <span style=\"display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;\">\n          enhancement\n        </span>\n    </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">Very often, one needs to label points in a plot so that each is associated with <span class=\"show-more-container\"><a href=\"\" rel=\"noopener\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">a string (or `content` in Typst).\n\nCurrently, I would say that the best way to do this in Lilaq is either:\n- to use `scatter` and pass stylised marks with the label content, with some offset\n- to use `place` and place a label for each mark, with some offset\n\nFor example:\n\n```\n#lq.diagram(\n  lq.plot((-1, 0, 1, 2, 3, 4), (3, 5, 4, 2, 1, 2)),\n  lq.place(0, 5, [Max], align: left),\n  lq.place(3, 1, [Min], align: right),\n)\n```\n\nWhich produces:\n![Image](https://github.com/user-attachments/assets/8b6b17ad-90b3-4ce4-90cc-3df81a4e406f)\n\nIt works... but it's not the best-looking result.\nTo improve it, one must manually fiddle with the position of the labels.\n\nThe primary objective is of course to properly dodge points and axes so that there is no overlap / clipping.\nThis often requires manual handling of each point label, which is time-consuming and error-prone.\n\nI believe this is a common enough usecase that it warrants its specific syntax, or at least a guide on how to do this in a simple way.\n\n---\n\nIn `ggplot`, which is my go-to reference for anything that relates to programmatic plotting, this is handled by `geom_label` with `nudge` and `alignement` parameters: https://ggplot2.tidyverse.org/reference/geom_text.html\nThe `alignement` parameter also as `inward` and `outward` built-ins which I think are pretty cool.\nThere is even an extension that specifically repels label so they do not overlap with other stuff, and it's awesome: https://ggrepel.slowkow.com\n\n---\n\nThe same applies to other kind of shapes, such as `lines` for example.\nIf using `cetz`, it is very easy to [anchor](https://cetz-package.github.io/docs/basics/coordinate-systems#anchor) some text to the middle of a line (even if curved!); that's really useful to label plot elements.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n",
      "raw": "Hi. I have no idea how to make accurate arcs other than using CeTZ, so this is why I use it here (although I guess you don't need it anyway):\n\n```typ\n#import \"@preview/lilaq:0.2.0\" as lq\n#import \"@preview/cetz:0.3.4\"\n\n#let slope = 20deg\n#let f(x) = calc.tan(slope) * x + 34\n\n#show: lq.set-tick(inset: 0pt)\n#show: lq.set-grid(stroke: black, stroke-sub: 0.5pt)\n#show: lq.set-diagram(cycle: (\n  it => {\n    set lq.style(stroke: 0.5pt + black)\n    it\n  },\n))\n\n// In the future, can be set with set lq.mark(stroke: black, fill: white)\n#let lq-scatter = lq.scatter.with(stroke: black, color: white)\n// In the future, can be set with set lq.style(stroke: black, fill: white)\n#let lq-rect = lq.rect.with(stroke: black, fill: white)\n\n#let point(x, y, size: 3mm, color: black, align: left, offset: 0.6em) = {\n  let body = {\n    set text(top-edge: \"bounds\", bottom-edge: \"bounds\")\n    box(fill: white)[$(#x, #y)$]\n  }\n  (\n    lq.scatter((x,), (y,), size: size, color: color),\n    lq.place(x, y, align: align, pad(offset, body)),\n  )\n}\n\n#let y-max = 400\n#let x-max = 640\n#lq.diagram(\n  width: 15cm,\n  height: 15cm * y-max / x-max,\n  ylim: (0, y-max),\n  xlim: (0, x-max),\n  yaxis: (tick-distance: 80, subticks: 1),\n  xaxis: (tick-distance: 80, subticks: 1),\n  xlabel: [Normal stress, $k N\\/m^2$],\n  ylabel: [Shear stress, $k N\\/m^2$],\n\n  let xs = lq.linspace(0, 590),\n  lq.plot(xs, xs.map(f), mark: none),\n\n  lq.line((520, 223), (555, 223), stroke: 0.5pt),\n  lq.place(520, 223, cetz.canvas({\n    cetz.draw.circle((0, 0), radius: 0.8, stroke: 0pt) // Positioning hack.\n    let arc = cetz.draw.arc.with(anchor: \"origin\")\n    arc((0, 0), start: 0deg, delta: slope, radius: 0.7, stroke: 0.5pt)\n  })),\n\n  let xs = (100, 200, 300, 400),\n  lq-scatter(xs, xs.map(f), size: 6mm),\n  // Coordinate-based size can be achieved with ellipse in the future.\n\n  ..point(320, 138),\n\n  lq-rect(400, 320, width: 160, height: 80),\n  lq.place(400 + 80, 320 + 40)[\n    #set par(leading: 0.4em)\n    $\n      c = 34 med k N\\/m^2 \\\n      phi.alt = 20 degree \\\n    $\n  ],\n)\n```\n\n![image|690x441](upload://jCjIRZH4BYX63xOZ6x8XbVnbl0h.png)\n\nWith the upcoming Lilaq version, some stuff probably can be simplified, or maybe even right now.\n\nhttps://github.com/lilaq-project/lilaq/issues/16",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 40,
      "score": 58.0,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12244,
      "post_number": 8,
      "username": "TlidYou",
      "name": "TlidYou",
      "created_at": "2025-05-11T07:49:40.272Z",
      "updated_at": "2025-05-11T07:49:40.272Z",
      "cooked": "<p>Thank you <a class=\"mention\" href=\"/u/andrew\">@Andrew</a>  and <a class=\"mention\" href=\"/u/vmartel08\">@vmartel08</a>  for your time.</p>",
      "raw": "Thank you @Andrew  and @vmartel08  for your time.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 36,
      "score": 37.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1467
    },
    {
      "id": 12290,
      "post_number": 9,
      "username": "vmartel08",
      "name": "Vincent Martel",
      "created_at": "2025-05-11T19:23:23.926Z",
      "updated_at": "2025-05-11T19:23:23.926Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Andrew\" data-post=\"7\" data-topic=\"4018\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/andrew/48/62_2.png\" class=\"avatar\"> Andrew:</div>\n<blockquote>\n<p>Hi. I have no idea how to make accurate arcs other than using CeTZ</p>\n</blockquote>\n</aside>\n<p>Is there a way to achieve this with Lilaq <a class=\"mention\" href=\"/u/mc-zen\">@Mc-Zen</a>? The CeTZ solution is quite easy to implement but I could not reproduce it with Lilaq…</p>",
      "raw": "[quote=\"Andrew, post:7, topic:4018\"]\nHi. I have no idea how to make accurate arcs other than using CeTZ\n[/quote]\n\nIs there a way to achieve this with Lilaq @Mc-Zen? The CeTZ solution is quite easy to implement but I could not reproduce it with Lilaq…",
      "reply_to_post_number": 7,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 0,
      "reads": 29,
      "score": 10.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 936
    },
    {
      "id": 12293,
      "post_number": 10,
      "username": "Mc-Zen",
      "name": "Mc-Zen",
      "created_at": "2025-05-11T19:35:14.947Z",
      "updated_at": "2025-05-11T19:35:14.947Z",
      "cooked": "<p>You could use <code>lq.path</code> to draw the arc manually I guess. I don’t know, would it be worth to add an <code>arc</code> primitive to Lilaq? Maybe. Using <code>tiptoe</code>, this wouldn’t be too hard.</p>",
      "raw": "You could use `lq.path` to draw the arc manually I guess. I don't know, would it be worth to add an `arc` primitive to Lilaq? Maybe. Using `tiptoe`, this wouldn't be too hard.",
      "reply_to_post_number": 9,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 27,
      "score": 10.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 9
    },
    {
      "id": 12295,
      "post_number": 11,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-11T19:47:42.394Z",
      "updated_at": "2025-05-11T19:47:42.394Z",
      "cooked": "<p>I think so. I had to use it <a href=\"https://forum.typst.app/t/help-drawing-a-soil-profile-diagram-with-inclined-backfill-in-typst/3910/3\">here</a> too, though that was fully with CeTZ. I don’t know how common arcs are on diagrams, but I guess sometimes they are used.</p>",
      "raw": "I think so. I had to use it [here](https://forum.typst.app/t/help-drawing-a-soil-profile-diagram-with-inclined-backfill-in-typst/3910/3?u=andrew) too, though that was fully with CeTZ. I don't know how common arcs are on diagrams, but I guess sometimes they are used.",
      "reply_to_post_number": 10,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 27,
      "score": 5.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    }
  ],
  "scraped_at": "2025-06-10T09:48:06.079809"
}