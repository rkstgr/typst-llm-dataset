{
  "topic_metadata": {
    "id": 4028,
    "title": "How to set every stroke to black in Lilaq?",
    "slug": "how-to-set-every-stroke-to-black-in-lilaq",
    "posts_count": 10,
    "created_at": "2025-05-11T13:10:15.851Z",
    "last_posted_at": "2025-05-11T20:14:48.022Z",
    "views": 76,
    "like_count": 4,
    "reply_count": 8,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 7,
    "accepted_answer_username": "Andrew",
    "tags": [
      "lilaq"
    ],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 1152
  },
  "posts": [
    {
      "id": 12256,
      "post_number": 1,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-11T13:10:15.999Z",
      "updated_at": "2025-05-11T13:10:15.999Z",
      "cooked": "<p>In <a href=\"https://forum.typst.app/t/how-to-reproduce-an-image-in-typst/4018/7\" class=\"inline-onebox\">How to Reproduce an Image in Typst? - #7 by Andrew</a>, I had to set <code>stroke</code> to <code>black</code> for grid, plot, scatter, and rect, because default is not black. Is there a magic way to set everything to black or some global-like setting that will do the same? I donâ€™t want to trash the definition of things with such trivial styling that I want to be default anyway. Gotta keep it short and pretty.</p>",
      "raw": "In https://forum.typst.app/t/how-to-reproduce-an-image-in-typst/4018/7?u=andrew, I had to set `stroke` to `black` for grid, plot, scatter, and rect, because default is not black. Is there a magic way to set everything to black or some global-like setting that will do the same? I don't want to trash the definition of things with such trivial styling that I want to be default anyway. Gotta keep it short and pretty.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 35,
      "score": 22.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12269,
      "post_number": 2,
      "username": "Mc-Zen",
      "name": "Mc-Zen",
      "created_at": "2025-05-11T16:18:20.654Z",
      "updated_at": "2025-05-11T16:18:20.654Z",
      "cooked": "<p>Hi, the plot types like plot, scatter (although currently not rect because this is sortof extra âˆ’ this can be discussed though) inherit their default stroke from <code>lq.style</code>. However, this one can currently only be <code>set</code> within style cycles, see <a href=\"https://lilaq.org/docs/tutorials/cycles\" rel=\"noopener nofollow ugc\">Using style cycles âˆ’ Lilaq</a>. This is because of the lack of user-definable types in Typst. In the future, you will be able to write <code>set lq.style(stroke: black)</code>.</p>\n<p>The grid is separate and will always need to be set individually. You can read this tutorial for ideas on separating styling from content: <a href=\"https://lilaq.org/docs/tutorials/styling-and-themes\" rel=\"noopener nofollow ugc\">Styling and themes âˆ’ Lilaq</a>.</p>",
      "raw": "Hi, the plot types like plot, scatter (although currently not rect because this is sortof extra âˆ’ this can be discussed though) inherit their default stroke from `lq.style`. However, this one can currently only be `set` within style cycles, see [Using style cycles âˆ’ Lilaq](https://lilaq.org/docs/tutorials/cycles). This is because of the lack of user-definable types in Typst. In the future, you will be able to write `set lq.style(stroke: black)`. \n\n\nThe grid is separate and will always need to be set individually. You can read this tutorial for ideas on separating styling from content: [Styling and themes âˆ’ Lilaq](https://lilaq.org/docs/tutorials/styling-and-themes).",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 34,
      "score": 41.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 9
    },
    {
      "id": 12275,
      "post_number": 3,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-11T17:11:22.007Z",
      "updated_at": "2025-05-11T19:44:31.581Z",
      "cooked": "<p>Scatter doesnâ€™t inherit it. Also, itâ€™s not only within style cycles.</p>\n<details><summary>Code</summary>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/lilaq:0.2.0\" as lq\n\n#let f(x) = calc.tan(20deg) * x + 34\n\n#show: lq.set-tick(stroke: 0pt)\n#show: lq.set-grid(stroke: black)\n#set lq.style(stroke: black, fill: white)\n#let lq-rect = lq.rect.with(stroke: black, fill: white)\n\n#let y-max = 400\n#let x-max = 640\n#lq.diagram(\n  width: 15cm,\n  height: 15cm * y-max / x-max,\n  ylim: (0, y-max),\n  xlim: (0, x-max),\n  yaxis: (ticks: range(y-max + 1, step: 80), subticks: 1),\n  xaxis: (ticks: range(x-max + 1, step: 80), subticks: 1),\n  grid: (stroke-sub: 0.5pt),\n\n  let xs = lq.linspace(0, 590),\n  lq.plot(xs, xs.map(f), stroke: 0.5pt, mark: none),\n\n  let xs = (100, 200, 300, 400),\n  lq.scatter(xs, xs.map(f), size: 6mm),\n\n  lq.scatter((320,), (138,), size: 3mm),\n\n  lq-rect(400, 320, width: 160, height: 80),\n)\n</code></pre>\n</details>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/b/bccc881c817cd5982878e4120c323b9e8c1b4467.png\" data-download-href=\"https://forum.typst.app/uploads/default/bccc881c817cd5982878e4120c323b9e8c1b4467\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/b/bccc881c817cd5982878e4120c323b9e8c1b4467_2_345x228.png\" alt=\"image\" data-base62-sha1=\"qWbYeFAmR9ByPTDnkI0Lwt24G3B\" width=\"345\" height=\"228\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/b/bccc881c817cd5982878e4120c323b9e8c1b4467_2_345x228.png, https://forum.typst.app/uploads/default/optimized/2X/b/bccc881c817cd5982878e4120c323b9e8c1b4467_2_517x342.png 1.5x, https://forum.typst.app/uploads/default/optimized/2X/b/bccc881c817cd5982878e4120c323b9e8c1b4467_2_690x456.png 2x\" data-dominant-color=\"181818\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">720Ã—477 19.4 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "Scatter doesn't inherit it. Also, it's not only within style cycles.\n\n<details><summary>Code</summary>\n\n```typ\n#import \"@preview/lilaq:0.2.0\" as lq\n\n#let f(x) = calc.tan(20deg) * x + 34\n\n#show: lq.set-tick(stroke: 0pt)\n#show: lq.set-grid(stroke: black)\n#set lq.style(stroke: black, fill: white)\n#let lq-rect = lq.rect.with(stroke: black, fill: white)\n\n#let y-max = 400\n#let x-max = 640\n#lq.diagram(\n  width: 15cm,\n  height: 15cm * y-max / x-max,\n  ylim: (0, y-max),\n  xlim: (0, x-max),\n  yaxis: (ticks: range(y-max + 1, step: 80), subticks: 1),\n  xaxis: (ticks: range(x-max + 1, step: 80), subticks: 1),\n  grid: (stroke-sub: 0.5pt),\n\n  let xs = lq.linspace(0, 590),\n  lq.plot(xs, xs.map(f), stroke: 0.5pt, mark: none),\n\n  let xs = (100, 200, 300, 400),\n  lq.scatter(xs, xs.map(f), size: 6mm),\n\n  lq.scatter((320,), (138,), size: 3mm),\n\n  lq-rect(400, 320, width: 160, height: 80),\n)\n```\n\n</details>\n\n![image|690x457, 50%](upload://qWbYeFAmR9ByPTDnkI0Lwt24G3B.png)",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 31,
      "score": 11.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12276,
      "post_number": 4,
      "username": "Mc-Zen",
      "name": "Mc-Zen",
      "created_at": "2025-05-11T17:27:02.228Z",
      "updated_at": "2025-05-11T17:28:23.412Z",
      "cooked": "<blockquote>\n<p>Scatter doesnâ€™t inherit it.</p>\n</blockquote>\n<p>Oh yeah right, itâ€™s because scatter has no lines/shapes. Marks and their fill/stroke are controlled by <code>lq.mark</code> in that context. This behaviour is the result of a very long process âˆ’ there are a few tradeoffs.</p>\n<blockquote>\n<p>Also, itâ€™s not only within style cycles.</p>\n</blockquote>\n<p>Well, yes but style is just an alias for <code>std.circle</code> <img src=\"https://forum.typst.app/images/emoji/apple/sweat_smile.png?v=12\" title=\":sweat_smile:\" class=\"emoji\" alt=\":sweat_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"> so circles will be affected then for other things outside the diagram if you donâ€™t scope it. But yes, it technically works, I forgot about that.</p>",
      "raw": "> Scatter doesnâ€™t inherit it.\n\nOh yeah right, it's because scatter has no lines/shapes. Marks and their fill/stroke are controlled by `lq.mark` in that context. This behaviour is the result of a very long process âˆ’ there are a few tradeoffs. \n\n> Also, itâ€™s not only within style cycles.\n\nWell, yes but style is just an alias for `std.circle` ðŸ˜… so circles will be affected then for other things outside the diagram if you don't scope it. But yes, it technically works, I forgot about that.",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 29,
      "score": 10.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 9
    },
    {
      "id": 12281,
      "post_number": 5,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-11T18:13:33.032Z",
      "updated_at": "2025-05-11T18:13:33.032Z",
      "cooked": "<p>I donâ€™t understand how to use this mark thing to set <code>stroke</code>/<code>color</code> for scatter. I think itâ€™s broken or something. And how would you style an ellipse?</p>",
      "raw": "I don't understand how to use this mark thing to set `stroke`/`color` for scatter. I think it's broken or something. And how would you style an ellipse?",
      "reply_to_post_number": 4,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 27,
      "score": 10.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12289,
      "post_number": 6,
      "username": "Mc-Zen",
      "name": "Mc-Zen",
      "created_at": "2025-05-11T19:19:53.490Z",
      "updated_at": "2025-05-11T19:19:53.490Z",
      "cooked": "<p>It is indeed broken for <code>lq.scatter</code> and I just fixed it on main. The ellipse cannot be styled globally as of now. It belongs to the set of <em>primitive drawing functions</em> and they donâ€™t obey the style cycle (yet).</p>\n<p>We can however change this behaviour. I feel like ellipse, rect etc should still not take part in the style cycle but they could respond to changes in <code>lq.style</code>.</p>",
      "raw": "It is indeed broken for `lq.scatter` and I just fixed it on main. The ellipse cannot be styled globally as of now. It belongs to the set of _primitive drawing functions_ and they don't obey the style cycle (yet). \n\nWe can however change this behaviour. I feel like ellipse, rect etc should still not take part in the style cycle but they could respond to changes in `lq.style`.",
      "reply_to_post_number": 5,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 24,
      "score": 124.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 9
    },
    {
      "id": 12294,
      "post_number": 7,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-11T19:43:20.102Z",
      "updated_at": "2025-05-11T20:22:41.540Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Mc-Zen\" data-post=\"6\" data-topic=\"4028\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/mc-zen/48/234_2.png\" class=\"avatar\"> Mc-Zen:</div>\n<blockquote>\n<p>It is indeed broken for <code>lq.scatter</code> and I just fixed it on main.</p>\n</blockquote>\n</aside>\n<p>Hmm, I still canâ€™t style it with the global set rule, but with <code>cycle</code> it does work.</p>\n<details><summary>Code</summary>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@local/lilaq:0.3.0\" as lq\n// #import \"@preview/lilaq:0.2.0\" as lq\n\n#let f(x) = calc.tan(20deg) * x + 34\n\n#set lq.style(stroke: black, fill: white) // Now it's not needed with cycle.\n#set lq.mark(stroke: black, fill: white) // Doesn't work.\n#show: lq.set-tick(stroke: 0pt)\n#show: lq.set-grid(stroke: black)\n#show: lq.set-diagram(cycle: (\n  it =&gt; {\n    set lq.mark(stroke: black, fill: white)\n    it\n  },\n))\n#let lq-rect = lq.rect.with(stroke: black, fill: white)\n\n#let y-max = 400\n#let x-max = 640\n#lq.diagram(\n  width: 15cm,\n  height: 15cm * y-max / x-max,\n  ylim: (0, y-max),\n  xlim: (0, x-max),\n  yaxis: (ticks: range(y-max + 1, step: 80), subticks: 1),\n  xaxis: (ticks: range(x-max + 1, step: 80), subticks: 1),\n  grid: (stroke-sub: 0.5pt),\n\n  let xs = lq.linspace(0, 590),\n  lq.plot(xs, xs.map(f), stroke: 0.5pt, mark: none),\n\n  let xs = (100, 200, 300, 400),\n  lq.scatter(xs, xs.map(f), size: 6mm),\n\n  lq.scatter((320,), (138,), size: 3mm),\n\n  lq-rect(400, 320, width: 160, height: 80),\n)\n</code></pre>\n</details>\n<p>For some reason, adding empty cycle closure sets plot line color to black. Is this a backup style? Though if I use <code>set lq.style(stroke: green)</code>, then it does still change the plot line color. Soâ€¦ is this a bug that <code>lq.style</code> works globally, but <code>lq.mark</code> doesnâ€™t?</p>\n<details><summary>Solution (for now)</summary>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@local/lilaq:0.3.0\" as lq // @preview/lilaq:0.3.1/0.4.0\n// #import \"@preview/lilaq:0.2.0\" as lq\n\n#let f(x) = calc.tan(20deg) * x + 34\n\n#let lq-rect = lq.rect.with(stroke: black, fill: white) // Separately, but might work with lq.style in future.\n#set lq.style(stroke: black) // With cycle defaults to black, but can be set to other color.\n#show: lq.set-grid(stroke: black)\n#show: lq.set-diagram(cycle: (\n  it =&gt; {\n    set lq.mark(stroke: black, fill: white) // For scatter. In future can be used globally.\n    it\n  },\n))\n\n#let y-max = 400\n#let x-max = 640\n#lq.diagram(\n  width: 15cm,\n  height: 15cm * y-max / x-max,\n  ylim: (0, y-max),\n  xlim: (0, x-max),\n  yaxis: (tick-distance: 80, subticks: 1),\n  xaxis: (tick-distance: 80, subticks: 1),\n  grid: (stroke-sub: 0.5pt),\n\n  let xs = lq.linspace(0, 590),\n  lq.plot(xs, xs.map(f), stroke: 0.5pt, mark: none),\n\n  let xs = (100, 200, 300, 400),\n  lq.scatter(xs, xs.map(f), size: 6mm),\n\n  lq.scatter((320,), (138,), size: 3mm),\n\n  lq-rect(400, 320, width: 160, height: 80),\n)\n</code></pre>\n</details>",
      "raw": "[quote=\"Mc-Zen, post:6, topic:4028\"]\nIt is indeed broken for `lq.scatter` and I just fixed it on main.\n[/quote]\n\nHmm, I still can't style it with the global set rule, but with `cycle` it does work.\n\n<details><summary>Code</summary>\n\n```typ\n#import \"@local/lilaq:0.3.0\" as lq\n// #import \"@preview/lilaq:0.2.0\" as lq\n\n#let f(x) = calc.tan(20deg) * x + 34\n\n#set lq.style(stroke: black, fill: white) // Now it's not needed with cycle.\n#set lq.mark(stroke: black, fill: white) // Doesn't work.\n#show: lq.set-tick(stroke: 0pt)\n#show: lq.set-grid(stroke: black)\n#show: lq.set-diagram(cycle: (\n  it => {\n    set lq.mark(stroke: black, fill: white)\n    it\n  },\n))\n#let lq-rect = lq.rect.with(stroke: black, fill: white)\n\n#let y-max = 400\n#let x-max = 640\n#lq.diagram(\n  width: 15cm,\n  height: 15cm * y-max / x-max,\n  ylim: (0, y-max),\n  xlim: (0, x-max),\n  yaxis: (ticks: range(y-max + 1, step: 80), subticks: 1),\n  xaxis: (ticks: range(x-max + 1, step: 80), subticks: 1),\n  grid: (stroke-sub: 0.5pt),\n\n  let xs = lq.linspace(0, 590),\n  lq.plot(xs, xs.map(f), stroke: 0.5pt, mark: none),\n\n  let xs = (100, 200, 300, 400),\n  lq.scatter(xs, xs.map(f), size: 6mm),\n\n  lq.scatter((320,), (138,), size: 3mm),\n\n  lq-rect(400, 320, width: 160, height: 80),\n)\n```\n\n</details>\n\nFor some reason, adding empty cycle closure sets plot line color to black. Is this a backup style? Though if I use `set lq.style(stroke: green)`, then it does still change the plot line color. So... is this a bug that `lq.style` works globally, but `lq.mark` doesn't?\n\n\n<details><summary>Solution (for now)</summary>\n\n```typ\n#import \"@local/lilaq:0.3.0\" as lq // @preview/lilaq:0.3.1/0.4.0\n// #import \"@preview/lilaq:0.2.0\" as lq\n\n#let f(x) = calc.tan(20deg) * x + 34\n\n#let lq-rect = lq.rect.with(stroke: black, fill: white) // Separately, but might work with lq.style in future.\n#set lq.style(stroke: black) // With cycle defaults to black, but can be set to other color.\n#show: lq.set-grid(stroke: black)\n#show: lq.set-diagram(cycle: (\n  it => {\n    set lq.mark(stroke: black, fill: white) // For scatter. In future can be used globally.\n    it\n  },\n))\n\n#let y-max = 400\n#let x-max = 640\n#lq.diagram(\n  width: 15cm,\n  height: 15cm * y-max / x-max,\n  ylim: (0, y-max),\n  xlim: (0, x-max),\n  yaxis: (tick-distance: 80, subticks: 1),\n  xaxis: (tick-distance: 80, subticks: 1),\n  grid: (stroke-sub: 0.5pt),\n\n  let xs = lq.linspace(0, 590),\n  lq.plot(xs, xs.map(f), stroke: 0.5pt, mark: none),\n\n  let xs = (100, 200, 300, 400),\n  lq.scatter(xs, xs.map(f), size: 6mm),\n\n  lq.scatter((320,), (138,), size: 3mm),\n\n  lq-rect(400, 320, width: 160, height: 80),\n)\n```\n\n</details>",
      "reply_to_post_number": 6,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 0,
      "reads": 26,
      "score": 10.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12299,
      "post_number": 8,
      "username": "Mc-Zen",
      "name": "Mc-Zen",
      "created_at": "2025-05-11T20:02:29.338Z",
      "updated_at": "2025-05-11T20:02:29.338Z",
      "cooked": "<p>yes, that was what I was referring to earlier âˆ’ they donâ€™t really work globally because they are just aliases for built-in types and I cheated a little to make it work. I was a little suprised that <code>lq.style</code> actually works but it makes sense because I donâ€™t touch that one.</p>\n<p>This is also why it default to black. The default ellipse stroke is black, I think.</p>",
      "raw": "yes, that was what I was referring to earlier âˆ’ they don't really work globally because they are just aliases for built-in types and I cheated a little to make it work. I was a little suprised that `lq.style` actually works but it makes sense because I don't touch that one. \n\nThis is also why it default to black. The default ellipse stroke is black, I think.",
      "reply_to_post_number": 7,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 22,
      "score": 9.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 9
    },
    {
      "id": 12307,
      "post_number": 9,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-11T20:13:01.472Z",
      "updated_at": "2025-05-11T20:13:13.525Z",
      "cooked": "<p>Soâ€¦ Should the docs say that you shouldnâ€™t use global mark/style set rule? For mark, it just doesnâ€™t work, so to avoid confusion both shouldnâ€™t be used globally.</p>",
      "raw": "So... Should the docs say that you shouldn't use global mark/style set rule? For mark, it just doesn't work, so to avoid confusion both shouldn't be used globally.",
      "reply_to_post_number": 8,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 22,
      "score": 9.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12309,
      "post_number": 10,
      "username": "Mc-Zen",
      "name": "Mc-Zen",
      "created_at": "2025-05-11T20:14:48.022Z",
      "updated_at": "2025-05-11T20:14:48.022Z",
      "cooked": "<p>I want them to be used globally eventually. Itâ€™s just a limitation of the current implementation (due to the sad fact that user-defined types still donâ€™t exist).</p>",
      "raw": "I want them to be used globally eventually. It's just a limitation of the current implementation (due to the sad fact that user-defined types still don't exist).",
      "reply_to_post_number": 9,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 21,
      "score": 19.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 9
    }
  ],
  "scraped_at": "2025-06-10T09:48:00.906330"
}