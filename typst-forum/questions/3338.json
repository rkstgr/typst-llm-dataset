{
  "topic_metadata": {
    "id": 3338,
    "title": "How to properly set heading numbering to include supplement?",
    "slug": "how-to-properly-set-heading-numbering-to-include-supplement",
    "posts_count": 7,
    "created_at": "2025-03-19T20:50:56.961Z",
    "last_posted_at": "2025-04-22T09:19:27.641Z",
    "views": 218,
    "like_count": 9,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 5,
    "accepted_answer_username": "Andrew",
    "tags": [
      "outline",
      "numbering"
    ],
    "category_id": 5,
    "participant_count": 5,
    "word_count": 931
  },
  "posts": [
    {
      "id": 10016,
      "post_number": 1,
      "username": "Gaweringo",
      "name": "Gaweringo",
      "created_at": "2025-03-19T20:50:57.093Z",
      "updated_at": "2025-03-26T13:21:44.104Z",
      "cooked": "<p>I am trying to create a system/layout/numbering like this:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/7/7bc55513b212eb2dd8c86369ff6f73d8cc278153.png\" data-download-href=\"https://forum.typst.app/uploads/default/7bc55513b212eb2dd8c86369ff6f73d8cc278153\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/7/7bc55513b212eb2dd8c86369ff6f73d8cc278153_2_517x335.png\" alt=\"image\" data-base62-sha1=\"hEVvHXzsuOBUgSGn0vlUfg7mZZp\" width=\"517\" height=\"335\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/7/7bc55513b212eb2dd8c86369ff6f73d8cc278153_2_517x335.png, https://forum.typst.app/uploads/default/original/2X/7/7bc55513b212eb2dd8c86369ff6f73d8cc278153.png 1.5x, https://forum.typst.app/uploads/default/original/2X/7/7bc55513b212eb2dd8c86369ff6f73d8cc278153.png 2x\" data-dominant-color=\"F1F1F1\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">772×501 48.3 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>And I have now ended up at this:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#show heading.where(level: 1): set heading(\n  numbering: \"1:\",\n  supplement: [Example]\n)\n#show heading.where(level: 1): it =&gt; {\n  it.supplement + \" \" + context { numbering(it.numbering, counter(heading).get().first()) } + \" \" + it.body\n}\n\n= First one &lt;one&gt;\n== Level two\nSee things @two\n\n= Second One &lt;two&gt;\n== Level two\n</code></pre>\n<p>Which works, but I am wondering if there is a better/simpler method to have this behavior.</p>\n<p>With the behaviour being, that the heading numbering has some text before it, like<br>\n<code>Text [numbering]:</code> and that references to a heading show up as<br>\n<code>[supplement] [numbering]</code>, like shown in the picture.</p>\n<p>Is there a better way to do this?<br>\nAlso, how would I make the supplement be shown in the outline as well?</p>",
      "raw": "I am trying to create a system/layout/numbering like this:\n\n![image|690x447, 75%](upload://hEVvHXzsuOBUgSGn0vlUfg7mZZp.png)\n\nAnd I have now ended up at this:\n\n```typst\n#show heading.where(level: 1): set heading(\n  numbering: \"1:\",\n  supplement: [Example]\n)\n#show heading.where(level: 1): it => {\n  it.supplement + \" \" + context { numbering(it.numbering, counter(heading).get().first()) } + \" \" + it.body\n}\n\n= First one <one>\n== Level two\nSee things @two\n\n= Second One <two>\n== Level two\n```\n\nWhich works, but I am wondering if there is a better/simpler method to have this behavior.\n\nWith the behaviour being, that the heading numbering has some text before it, like\n`Text [numbering]:` and that references to a heading show up as \n`[supplement] [numbering]`, like shown in the picture.\n\nIs there a better way to do this?\nAlso, how would I make the supplement be shown in the outline as well?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 45,
      "score": 534.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 770
    },
    {
      "id": 10025,
      "post_number": 2,
      "username": "Adrian_Weitkemper",
      "name": "Adron",
      "created_at": "2025-03-20T08:26:06.654Z",
      "updated_at": "2025-03-21T08:43:00.851Z",
      "cooked": "<p>Hi there!<br>\nYes, I do have a solution that might be a bit better:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#show heading.where(level: 1): set heading(\n  numbering: (.., last) =&gt; {\n    if last != 1 {\n      \"Example \" + str(last - 1) + \":\"\n    }\n    else {\n      h(-0.4em)\n    }\n  }\n)\n#outline()\n= First one\n== Level two\nSee things \n\n= Second One\n== Level two\n\n</code></pre>\n<p>So you can actually create a custom function for the numbering (see <a href=\"https://typst.app/docs/reference/model/numbering/#numbering-patterns-and-numbering-functions\">documentation</a>). The parameter last is the number, which is converted into a string, so it can be added to the other strings.<br>\nRegarding the outline the “supplement” “Example 1:” etc. they now show up in the outline just like the numbering would, although the indent is pretty large. I think that’s because it’s dependent on the length of the numbering. Apparently the title of the outline is a heading as well, so I had to exclude it and lower the number by one. Because there was still an indent in front of the outline’s heading, I added the else clause. Here’s the result:<br>\n<img src=\"https://forum.typst.app/uploads/default/original/2X/b/b02a8fbb7cf9aa904df19c49db8aa5905ca9f88f.png\" alt=\"grafik\" data-base62-sha1=\"p8rdMv6Oi1H1W1d2yvaR6EwyHoz\" width=\"237\" height=\"279\"><br>\nIf there are any questions or wishes left, feel free to ask again <img src=\"https://forum.typst.app/images/emoji/apple/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Hi there!\nYes, I do have a solution that might be a bit better: \n```typst\n#show heading.where(level: 1): set heading(\n  numbering: (.., last) => {\n    if last != 1 {\n      \"Example \" + str(last - 1) + \":\"\n    }\n    else {\n      h(-0.4em)\n    }\n  }\n)\n#outline()\n= First one\n== Level two\nSee things \n\n= Second One\n== Level two\n\n```\nSo you can actually create a custom function for the numbering (see [documentation](https://typst.app/docs/reference/model/numbering/#numbering-patterns-and-numbering-functions)). The parameter last is the number, which is converted into a string, so it can be added to the other strings. \nRegarding the outline the \"supplement\" \"Example 1:\" etc. they now show up in the outline just like the numbering would, although the indent is pretty large. I think that's because it's dependent on the length of the numbering. Apparently the title of the outline is a heading as well, so I had to exclude it and lower the number by one. Because there was still an indent in front of the outline's heading, I added the else clause. Here's the result:\n![grafik|237x279](upload://p8rdMv6Oi1H1W1d2yvaR6EwyHoz.png)\nIf there are any questions or wishes left, feel free to ask again :slight_smile:",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 41,
      "score": 28.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 277
    },
    {
      "id": 10039,
      "post_number": 3,
      "username": "Gaweringo",
      "name": "Gaweringo",
      "created_at": "2025-03-20T14:30:21.593Z",
      "updated_at": "2025-03-20T14:30:21.593Z",
      "cooked": "<p>Thanks, but the problem with using numbering to add <code>Example 1:</code>, is, that the <code>:</code> is included when using <code>@label</code> to reference a heading, which is not really desired.</p>\n<p>The upside is, that it shows up in the outline. And the outline indenting can be set easily:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#set outline(indent: 2em)\n</code></pre>\n<p>But this gave me the idea to try to remove the <code>:</code> from the reference. And the  <a href=\"https://typst.app/docs/reference/model/ref/#customization\">customization section of <code>ref</code></a> had everything I needed.<br>\nNow I can use:</p>\n<details>\n<summary>\nUpdated Code</summary>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set outline(indent: 2em)\n#outline()\n\n#set heading(numbering: \"1.a\")\n#show heading.where(level: 1): set heading(\n  numbering: (num) =&gt; {\"Example \" + numbering(\"1:\", num)},\n  supplement: [Example]\n)\n#show ref: it =&gt; {\n  let el = it.element\n  if el != none and el.func() == heading  and el.level == 1{\n    link(el.location(),\n      numbering(\n        (num) =&gt; el.supplement + \" \" + str(num),\n        ..counter(heading).at(el.location())\n    ))\n  } else {\n    it\n  }\n}\n#show ref: it =&gt; {\n  emph(it)\n}\n\n= First one &lt;one&gt;\n== Level two\nSee things @four and @sub_four\n\n= Second One &lt;two&gt;\n== Level two\n\n= Third one\n== Level two\nSee things at @two\n\n= Fourth Heading &lt;four&gt;\n== Sub fourth heading &lt;sub_four&gt;\n</code></pre>\n</details>\n<p>And that gives me exactly the layout/behaviour I want:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/c/ce3fc8228f767cf23e31460211cf3633c4de2607.png\" data-download-href=\"https://forum.typst.app/uploads/default/ce3fc8228f767cf23e31460211cf3633c4de2607\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/c/ce3fc8228f767cf23e31460211cf3633c4de2607_2_594x500.png\" alt=\"image\" data-base62-sha1=\"tqz0FhHtyXrc6DTOUqNehf1wE87\" width=\"594\" height=\"500\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/c/ce3fc8228f767cf23e31460211cf3633c4de2607_2_594x500.png, https://forum.typst.app/uploads/default/original/2X/c/ce3fc8228f767cf23e31460211cf3633c4de2607.png 1.5x, https://forum.typst.app/uploads/default/original/2X/c/ce3fc8228f767cf23e31460211cf3633c4de2607.png 2x\" data-dominant-color=\"F8F8F8\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">711×598 75.8 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "Thanks, but the problem with using numbering to add `Example 1:`, is, that the `:` is included when using `@label` to reference a heading, which is not really desired.\n\nThe upside is, that it shows up in the outline. And the outline indenting can be set easily:\n```typst\n#set outline(indent: 2em)\n```\n\nBut this gave me the idea to try to remove the `:` from the reference. And the  [customization section of `ref`](https://typst.app/docs/reference/model/ref/#customization) had everything I needed.\nNow I can use:\n\n[details=\"Updated Code\"]\n```typ\n#set outline(indent: 2em)\n#outline()\n\n#set heading(numbering: \"1.a\")\n#show heading.where(level: 1): set heading(\n  numbering: (num) => {\"Example \" + numbering(\"1:\", num)},\n  supplement: [Example]\n)\n#show ref: it => {\n  let el = it.element\n  if el != none and el.func() == heading  and el.level == 1{\n    link(el.location(),\n      numbering(\n        (num) => el.supplement + \" \" + str(num),\n        ..counter(heading).at(el.location())\n    ))\n  } else {\n    it\n  }\n}\n#show ref: it => {\n  emph(it)\n}\n\n= First one <one>\n== Level two\nSee things @four and @sub_four\n\n= Second One <two>\n== Level two\n\n= Third one\n== Level two\nSee things at @two\n\n= Fourth Heading <four>\n== Sub fourth heading <sub_four>\n```\n[/details]\n\nAnd that gives me exactly the layout/behaviour I want:\n![image|594x500](upload://tqz0FhHtyXrc6DTOUqNehf1wE87.png)",
      "reply_to_post_number": 2,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 2,
      "reads": 33,
      "score": 51.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 770
    },
    {
      "id": 10041,
      "post_number": 4,
      "username": "Adrian_Weitkemper",
      "name": "Adron",
      "created_at": "2025-03-20T14:58:37.082Z",
      "updated_at": "2025-03-20T14:58:37.082Z",
      "cooked": "<p>Great! So maybe mark your own answer as the solution, so it’s easier for others to find it <img src=\"https://forum.typst.app/images/emoji/apple/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Great! So maybe mark your own answer as the solution, so it's easier for others to find it :slight_smile:",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 32,
      "score": 46.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 277
    },
    {
      "id": 10139,
      "post_number": 5,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-03-23T20:55:41.268Z",
      "updated_at": "2025-03-23T20:55:41.268Z",
      "cooked": "<p>I simplified your solution slightly, so it’s easier to read:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set heading(numbering: \"1.a\")\n#show heading.where(level: 1): set heading(\n  numbering: num =&gt; \"Example \" + numbering(\"1:\", num),\n  supplement: \"Example\",\n)\n#show ref: it =&gt; {\n  let el = it.element\n  if el == none or el.func() != heading or el.level != 1 { return it }\n  let heading-levels = counter(heading).at(el.location())\n  let body = numbering(n =&gt; [#el.supplement #n], ..heading-levels)\n  link(el.location(), body)\n}\n#show ref: emph\n</code></pre>\n<p>Also note that you can use <code>-</code> in label/function/variable names, which is also a conventional way to name things. So the <code>&lt;sub_four&gt;</code> would be <code>&lt;sub-four&gt;</code> and the reference would be <code>@sub-four</code>.</p>",
      "raw": "I simplified your solution slightly, so it's easier to read:\n\n```typ\n#set heading(numbering: \"1.a\")\n#show heading.where(level: 1): set heading(\n  numbering: num => \"Example \" + numbering(\"1:\", num),\n  supplement: \"Example\",\n)\n#show ref: it => {\n  let el = it.element\n  if el == none or el.func() != heading or el.level != 1 { return it }\n  let heading-levels = counter(heading).at(el.location())\n  let body = numbering(n => [#el.supplement #n], ..heading-levels)\n  link(el.location(), body)\n}\n#show ref: emph\n```\n\nAlso note that you can use `-` in label/function/variable names, which is also a conventional way to name things. So the `<sub_four>` would be `<sub-four>` and the reference would be `@sub-four`.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 3,
      "reads": 32,
      "score": 86.4,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 10279,
      "post_number": 6,
      "username": "PgBiel",
      "name": "",
      "created_at": "2025-03-26T13:22:13.875Z",
      "updated_at": "2025-03-26T13:22:13.875Z",
      "cooked": "<p>Hey <a class=\"mention\" href=\"/u/gaweringo\">@Gaweringo</a>, welcome to the forum! I’ve changed your question post’s title to better fit our guidelines: <a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11\" class=\"inline-onebox\">How to post in the Questions category</a></p>\n<p>Make sure your title is a question you’d ask to a friend about Typst. <img src=\"https://forum.typst.app/images/emoji/apple/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Hey @Gaweringo, welcome to the forum! I’ve changed your question post’s title to better fit our guidelines: https://forum.typst.app/t/how-to-post-in-the-questions-category/11\n\nMake sure your title is a question you’d ask to a friend about Typst. :wink:",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 30,
      "score": 26.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 11426,
      "post_number": 7,
      "username": "Seube",
      "name": "Seube",
      "created_at": "2025-04-22T09:19:27.641Z",
      "updated_at": "2025-04-22T09:19:27.641Z",
      "cooked": "<p>Thank you everyone for the helpful discussion and solutions. I’m currently writing a PhD thesis and encountered a closely related issue. My level-1 headings are labeled as “Chapters” with numeric numbering, but in the appendix, I need them to switch to “Appendix” with letter-based numbering. I wanted a clean and flexible way to implement this.</p>\n<p>I ended up using <a class=\"mention\" href=\"/u/andrew\">@Andrew</a>’s approach with a small adaptation to make it work for my structure:</p>\n<pre><code>\n#set heading(numbering: \"1.1\")\n#show heading.where(level: 1): set heading(\n  numbering: num =&gt; \"Chapter \" + numbering(\"1:\", num),\n  supplement: \"Chapter\",\n)\n#show ref: it =&gt; {\n  let el = it.element\n  if el == none or el.func() != heading or el.level != 1 { return it }\n  let heading-levels = counter(heading).at(el.location())\n  if el.supplement == [Chapter] {\n    let body = el.supplement + \" \" + numbering(\"1\", ..heading-levels)\n    link(el.location(), body)\n  }\n  else if el.supplement == [Appendix] {\n    let body = el.supplement + \" \" + numbering(\"A\", ..heading-levels)\n    link(el.location(), body)\n  }\n  else {\n    it\n  }\n}\n\n= First Chapter\ncontents\n\n#set heading(numbering: \"A.1\")\n#show heading.where(level: 1): set heading(\n  numbering: num =&gt; \"Appendix \" + numbering(\"A:\", num),\n  supplement: \"Appendix\",\n)\n#counter(heading).update(0)\n\n= First Appendix\nAppendix contents\n</code></pre>\n<p>I am quite new to typst, so this might not be optimal, but I thought it might be useful to share this anyway.</p>",
      "raw": "Thank you everyone for the helpful discussion and solutions. I'm currently writing a PhD thesis and encountered a closely related issue. My level-1 headings are labeled as \"Chapters\" with numeric numbering, but in the appendix, I need them to switch to \"Appendix\" with letter-based numbering. I wanted a clean and flexible way to implement this.\n\nI ended up using @Andrew’s approach with a small adaptation to make it work for my structure:\n\n<pre><code>\n#set heading(numbering: \"1.1\")\n#show heading.where(level: 1): set heading(\n  numbering: num => \"Chapter \" + numbering(\"1:\", num),\n  supplement: \"Chapter\",\n)\n#show ref: it => {\n  let el = it.element\n  if el == none or el.func() != heading or el.level != 1 { return it }\n  let heading-levels = counter(heading).at(el.location())\n  if el.supplement == [Chapter] {\n    let body = el.supplement + \" \" + numbering(\"1\", ..heading-levels)\n    link(el.location(), body)\n  }\n  else if el.supplement == [Appendix] {\n    let body = el.supplement + \" \" + numbering(\"A\", ..heading-levels)\n    link(el.location(), body)\n  }\n  else {\n    it\n  }\n}\n\n= First Chapter\ncontents\n\n#set heading(numbering: \"A.1\")\n#show heading.where(level: 1): set heading(\n  numbering: num => \"Appendix \" + numbering(\"A:\", num),\n  supplement: \"Appendix\",\n)\n#counter(heading).update(0)\n\n= First Appendix\nAppendix contents\n</code></pre>\n\nI am quite new to typst, so this might not be optimal, but I thought it might be useful to share this anyway.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 23,
      "score": 9.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1396
    }
  ],
  "scraped_at": "2025-06-10T09:50:11.737964"
}