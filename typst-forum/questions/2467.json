{
  "topic_metadata": {
    "id": 2467,
    "title": "Is there a way to do hatched in-filling like this in Typst/CeTz?",
    "slug": "is-there-a-way-to-do-hatched-in-filling-like-this-in-typst-cetz",
    "posts_count": 7,
    "created_at": "2025-01-19T09:42:25.575Z",
    "last_posted_at": "2025-01-19T22:01:52.351Z",
    "views": 262,
    "like_count": 3,
    "reply_count": 4,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 6,
    "accepted_answer_username": "Eric",
    "tags": [
      "graphics",
      "cetz"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 587
  },
  "posts": [
    {
      "id": 7654,
      "post_number": 1,
      "username": "AhmedSalih",
      "name": "",
      "created_at": "2025-01-19T09:42:25.748Z",
      "updated_at": "2025-01-19T11:01:56.336Z",
      "cooked": "<p>Hi!</p>\n<p>Would anyone know how to replicate something like this?</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/1/1693767000be3b5f71cc698f191a61fc1c6b4489.jpeg\" data-download-href=\"https://forum.typst.app/uploads/default/1693767000be3b5f71cc698f191a61fc1c6b4489\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/1/1693767000be3b5f71cc698f191a61fc1c6b4489_2_690x338.jpeg\" alt=\"image\" data-base62-sha1=\"3dIrnyJLQeuZnNZHhJTQotDVUaR\" width=\"690\" height=\"338\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/1/1693767000be3b5f71cc698f191a61fc1c6b4489_2_690x338.jpeg, https://forum.typst.app/uploads/default/original/2X/1/1693767000be3b5f71cc698f191a61fc1c6b4489.jpeg 1.5x, https://forum.typst.app/uploads/default/original/2X/1/1693767000be3b5f71cc698f191a61fc1c6b4489.jpeg 2x\" data-dominant-color=\"D1D1D1\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">734×360 115 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\nSource: <a href=\"https://etc.usf.edu/clipart/76600/76648/76648_materialsym.htm\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Mechanical Drawing Cross Hatching of Material Symbols | ClipArt ETC</a></p>\n<p>Specifically, the cast iron (top left)</p>\n<p>Kind regards</p>",
      "raw": "Hi!\n\nWould anyone know how to replicate something like this?\n\n![image|690x338](upload://3dIrnyJLQeuZnNZHhJTQotDVUaR.jpeg)\nSource: https://etc.usf.edu/clipart/76600/76648/76648_materialsym.htm\n\nSpecifically, the cast iron (top left)\n\nKind regards",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 54,
      "score": 955.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 786
    },
    {
      "id": 7658,
      "post_number": 2,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-01-19T11:08:41.184Z",
      "updated_at": "2025-01-19T11:08:41.184Z",
      "cooked": "<p>There is a pattern type for repeated fillings: <a href=\"https://typst.app/docs/reference/visualize/pattern/\" class=\"inline-onebox\">Pattern Type – Typst Documentation</a></p>\n<p>I’m not sure it would help with all of these, but the repeating ones (those except for face hardened steal, leather, glass) should be possible by creating a pattern. Since I assume the others will/are allowed to eventually repeat as well, you could probably also do those. Face hardened steel and glass may require separate patterns for “edge” and “bulk area” since they’re not uniform.</p>",
      "raw": "There is a pattern type for repeated fillings: https://typst.app/docs/reference/visualize/pattern/\n\nI'm not sure it would help with all of these, but the repeating ones (those except for face hardened steal, leather, glass) should be possible by creating a pattern. Since I assume the others will/are allowed to eventually repeat as well, you could probably also do those. Face hardened steel and glass may require separate patterns for \"edge\" and \"bulk area\" since they're not uniform.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 49,
      "score": 19.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 7682,
      "post_number": 3,
      "username": "AhmedSalih",
      "name": "",
      "created_at": "2025-01-19T12:03:23.746Z",
      "updated_at": "2025-01-19T12:03:23.746Z",
      "cooked": "<p>Thanks!</p>\n<p>I got this now:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let pat = pattern(size: (20pt, 20pt))[\n  #place(line(start: (0%, 100%), end: (100%, 0%)))\n]\n\n#rect(fill: pat, width: 8cm, height: 5cm, stroke: 1pt)\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/8/8f2fe7a735218bfdc26dce1837df0c42bec9012a.png\" alt=\"image\" data-base62-sha1=\"kqGUFz0N70ks91maGK2cgOX7u1Y\" width=\"598\" height=\"397\"></p>\n<p>So now I want to do two things:</p>\n<ol>\n<li>I want to make the lines “overlap” so that it is a continous line with no gaps</li>\n<li>If possible, I want to flip the “diagonal direction”, notice how there is more white in top left corner compared to right bottom corner. I want to have that flipped like the original image</li>\n</ol>\n<p>I hope someone knows how :)</p>",
      "raw": "Thanks!\n\nI got this now:\n\n```typst\n#let pat = pattern(size: (20pt, 20pt))[\n  #place(line(start: (0%, 100%), end: (100%, 0%)))\n]\n\n#rect(fill: pat, width: 8cm, height: 5cm, stroke: 1pt)\n```\n\n![image|598x397](upload://kqGUFz0N70ks91maGK2cgOX7u1Y.png)\n\nSo now I want to do two things:\n\n1. I want to make the lines \"overlap\" so that it is a continous line with no gaps\n2. If possible, I want to flip the \"diagonal direction\", notice how there is more white in top left corner compared to right bottom corner. I want to have that flipped like the original image\n\nI hope someone knows how :)",
      "reply_to_post_number": 2,
      "reply_count": 3,
      "quote_count": 0,
      "like_count": 0,
      "reads": 48,
      "score": 24.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 786
    },
    {
      "id": 7684,
      "post_number": 4,
      "username": "Florian",
      "name": "Florian",
      "created_at": "2025-01-19T12:14:57.111Z",
      "updated_at": "2025-01-19T12:17:06.551Z",
      "cooked": "<p>Hi <a class=\"mention\" href=\"/u/ahmedsalih\">@AhmedSalih</a>,</p>\n<p>one way to do achieve individual renderings for a block could be the <code>layout()</code>-function:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">// given you'd want to fill this block\n#rect(width: 8cm, height: 5cm)[\n  #context layout(size =&gt; {\n    size\n    // Individual line calculations and\n    // drawings here, using size\n  })\n]\n</code></pre>\n<p>I haven’t done this (drawing patterns) yet and i don’t know how performant such an approach is.</p>",
      "raw": "Hi @AhmedSalih,\n\none way to do achieve individual renderings for a block could be the `layout()`-function:\n\n```typ\n// given you'd want to fill this block\n#rect(width: 8cm, height: 5cm)[\n  #context layout(size => {\n    size\n    // Individual line calculations and\n    // drawings here, using size\n  })\n]\n```\n\nI haven't done this (drawing patterns) yet and i don't know how performant such an approach is.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 47,
      "score": 34.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 251
    },
    {
      "id": 7685,
      "post_number": 5,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-01-19T12:43:35.171Z",
      "updated_at": "2025-01-19T12:43:35.171Z",
      "cooked": "<p>problem 1: the locations where the line is “interrupted” is where four tiles come together. your pattern has black at the top right and bottom left corners, but not at the top left and bottom right corners. You can fix that by adding some lines that fill these few pixels:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let pat = pattern(size: (20pt, 20pt), {\n  place(line(start: (0%, 100%), end: (100%, 0%)))\n  place(line(start: (50%, 150%), end: (150%, 50%)))\n  place(line(start: (-50%, 50%), end: (50%, -50%)))\n})\n\n#rect(fill: pat, width: 8cm, height: 5cm, stroke: 1pt)\n</code></pre>\n<p>It doesn’t matter here, but another source of “too short” lines could be the <a href=\"https://typst.app/docs/reference/visualize/stroke/#constructor-cap\">stroke’s cap</a>: <code>square</code> and <code>round</code> caps will extend beyond the end according to the thickness, filling some parts of the pattern that may otherwise be missing.</p>\n<hr>\n<p>I don’t know about problem 2; there’s <a href=\"https://typst.app/docs/reference/visualize/pattern/#constructor-relative\"><code>pattern.relative</code></a> but it doesn’t support what you need. I think <code>pattern</code> could sensibly get an “alignment” that defines where the pattern fill is originating from. You could <a href=\"https://github.com/typst/typst/issues\">open an issue</a> about it.</p>",
      "raw": "problem 1: the locations where the line is \"interrupted\" is where four tiles come together. your pattern has black at the top right and bottom left corners, but not at the top left and bottom right corners. You can fix that by adding some lines that fill these few pixels:\n\n```typ\n#let pat = pattern(size: (20pt, 20pt), {\n  place(line(start: (0%, 100%), end: (100%, 0%)))\n  place(line(start: (50%, 150%), end: (150%, 50%)))\n  place(line(start: (-50%, 50%), end: (50%, -50%)))\n})\n\n#rect(fill: pat, width: 8cm, height: 5cm, stroke: 1pt)\n```\n\nIt doesn't matter here, but another source of \"too short\" lines could be the [stroke's cap](https://typst.app/docs/reference/visualize/stroke/#constructor-cap): `square` and `round` caps will extend beyond the end according to the thickness, filling some parts of the pattern that may otherwise be missing.\n\n---\n\nI don't know about problem 2; there's [`pattern.relative`](https://typst.app/docs/reference/visualize/pattern/#constructor-relative) but it doesn't support what you need. I think `pattern` could sensibly get an \"alignment\" that defines where the pattern fill is originating from. You could [open an issue](https://github.com/typst/typst/issues) about it.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 46,
      "score": 84.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 7687,
      "post_number": 6,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2025-01-19T14:04:36.113Z",
      "updated_at": "2025-01-19T14:04:36.113Z",
      "cooked": "<p>For your first problem, I would recommend using the <a href=\"https://typst.app/universe/package/modpattern/\"><code>modpattern</code></a> package, which gets rid of the gaps automatically. To then move the lines, you could use the <a href=\"https://typst.app/docs/reference/layout/move/\"><code>move</code></a> function. This doesn’t flip the diagonal direction, but it still allows you to adjust the positioning of the lines.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/modpattern:0.1.0\": modpattern\n\n#let pat = modpattern((20pt, 20pt))[\n  #move(dx: 50%, line(start: (0%, 100%), end: (100%, 0%)))\n]\n\n#rect(fill: pat, width: 8cm, height: 5cm, stroke: 1pt)\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/e/eecf41531ac592f5e39e0d6d0f3d1e0aa44095ad.png\" alt=\"image\" data-base62-sha1=\"y4BGaq0TLmpdSyBXhphlz7MV0kZ\" width=\"290\" height=\"186\"></p>",
      "raw": "For your first problem, I would recommend using the [`modpattern`](https://typst.app/universe/package/modpattern/) package, which gets rid of the gaps automatically. To then move the lines, you could use the [`move`](https://typst.app/docs/reference/layout/move/) function. This doesn't flip the diagonal direction, but it still allows you to adjust the positioning of the lines.\n\n```typ\n#import \"@preview/modpattern:0.1.0\": modpattern\n\n#let pat = modpattern((20pt, 20pt))[\n  #move(dx: 50%, line(start: (0%, 100%), end: (100%, 0%)))\n]\n\n#rect(fill: pat, width: 8cm, height: 5cm, stroke: 1pt)\n```\n\n![image|581x372, 50%](upload://y4BGaq0TLmpdSyBXhphlz7MV0kZ.png)",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 43,
      "score": 68.6,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 7693,
      "post_number": 7,
      "username": "AhmedSalih",
      "name": "",
      "created_at": "2025-01-19T22:01:52.351Z",
      "updated_at": "2025-01-19T22:01:52.351Z",
      "cooked": "<p>Thank you all!</p>\n<p>This was exactly what I needed.</p>\n<p>Kind regards</p>",
      "raw": "Thank you all!\n\nThis was exactly what I needed.\n\nKind regards",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 36,
      "score": 12.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 786
    }
  ],
  "scraped_at": "2025-06-10T09:52:40.999652"
}