{
  "topic_metadata": {
    "id": 1675,
    "title": "How can I draw strictly diagonally dominant matrices with ellipses?",
    "slug": "how-can-i-draw-strictly-diagonally-dominant-matrices-with-ellipses",
    "posts_count": 7,
    "created_at": "2024-11-11T17:08:57.699Z",
    "last_posted_at": "2024-11-14T04:01:51.523Z",
    "views": 261,
    "like_count": 0,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 6,
    "accepted_answer_username": "ian",
    "tags": [
      "math"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 1436
  },
  "posts": [
    {
      "id": 5497,
      "post_number": 1,
      "username": "infinitymdm",
      "name": "Marcus Mellor",
      "created_at": "2024-11-11T17:08:57.876Z",
      "updated_at": "2024-11-11T17:08:57.876Z",
      "cooked": "<p>Hi folks! I’m trying to more or less replicate this matrix from a textbook (with slightly different expressions):<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/3/3356066ff9735d0520e75f7984b3c57ddc59853f.png\" data-download-href=\"https://forum.typst.app/uploads/default/3356066ff9735d0520e75f7984b3c57ddc59853f\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/3/3356066ff9735d0520e75f7984b3c57ddc59853f_2_690x259.png\" alt=\"image\" data-base62-sha1=\"7k8ERgx8GXus2an0KbWANvQ7FtJ\" width=\"690\" height=\"259\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/3/3356066ff9735d0520e75f7984b3c57ddc59853f_2_690x259.png, https://forum.typst.app/uploads/default/original/2X/3/3356066ff9735d0520e75f7984b3c57ddc59853f.png 1.5x, https://forum.typst.app/uploads/default/original/2X/3/3356066ff9735d0520e75f7984b3c57ddc59853f.png 2x\" data-dominant-color=\"F9F9F9\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">940×354 37.1 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>The expressions are easy, but I’m having some difficulty with the upper and lower triangular regions. I’d like to find a way to replicate the way this text shows it, with ellipses indicating where the zeros are, but I’m not (yet) experienced enough with typst to figure it out.</p>\n<p>Here’s the source I’m using for my not-yet-complete poor man’s version of this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">$\n  bold(A) = mat(delim: #(\"[\", \"]\"),\n    1/(3 h_0), 1/3 (1/h_1 - 1/h_0), 1/(3 h_1),    0,   dots.h,    dots.h,   dots.h, dots.h, 0     ;\n    h_0,       2 (h_1 - h_0),       h_1,          0,   dots.down, ,         ,       ,       dots.v;\n    0,         h_1,                 2(h_2 - h_1), h_2, 0,         dots.down,,       ,       dots.v;\n  )                                                                                                                                                                            $ \n</code></pre>\n<p>And here’s how that looks (again, don’t worry about the expressions, just the triangular portion with the zeros):<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/1/133dd1a7f4a717c64b50b85c69dcbe9ddca5a4da.png\" data-download-href=\"https://forum.typst.app/uploads/default/133dd1a7f4a717c64b50b85c69dcbe9ddca5a4da\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/1/133dd1a7f4a717c64b50b85c69dcbe9ddca5a4da_2_517x108.png\" alt=\"image\" data-base62-sha1=\"2Kdw8ZEs8y3rM3VZGYhM27xHJIC\" width=\"517\" height=\"108\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/1/133dd1a7f4a717c64b50b85c69dcbe9ddca5a4da_2_517x108.png, https://forum.typst.app/uploads/default/optimized/2X/1/133dd1a7f4a717c64b50b85c69dcbe9ddca5a4da_2_775x162.png 1.5x, https://forum.typst.app/uploads/default/original/2X/1/133dd1a7f4a717c64b50b85c69dcbe9ddca5a4da.png 2x\" data-dominant-color=\"F7F7F7\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1018×214 26.1 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>The separated groups of dots are obviously not ideal. I can’t help but feel there’s a better way to do this. Any advice for me?</p>",
      "raw": "Hi folks! I'm trying to more or less replicate this matrix from a textbook (with slightly different expressions): \n![image|690x259](upload://7k8ERgx8GXus2an0KbWANvQ7FtJ.png)\n\nThe expressions are easy, but I'm having some difficulty with the upper and lower triangular regions. I'd like to find a way to replicate the way this text shows it, with ellipses indicating where the zeros are, but I'm not (yet) experienced enough with typst to figure it out.\n\nHere's the source I'm using for my not-yet-complete poor man's version of this: \n```typ\n$\n  bold(A) = mat(delim: #(\"[\", \"]\"),\n    1/(3 h_0), 1/3 (1/h_1 - 1/h_0), 1/(3 h_1),    0,   dots.h,    dots.h,   dots.h, dots.h, 0     ;\n    h_0,       2 (h_1 - h_0),       h_1,          0,   dots.down, ,         ,       ,       dots.v;\n    0,         h_1,                 2(h_2 - h_1), h_2, 0,         dots.down,,       ,       dots.v;\n  )                                                                                                                                                                            $ \n```\n\nAnd here's how that looks (again, don't worry about the expressions, just the triangular portion with the zeros):\n![image|690x145, 75%](upload://2Kdw8ZEs8y3rM3VZGYhM27xHJIC.png)\n\nThe separated groups of dots are obviously not ideal. I can't help but feel there's a better way to do this. Any advice for me?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 39,
      "score": 1052.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 408
    },
    {
      "id": 5502,
      "post_number": 2,
      "username": "Sinthoras",
      "name": "",
      "created_at": "2024-11-11T19:01:58.502Z",
      "updated_at": "2024-11-11T19:01:58.502Z",
      "cooked": "<p>A bad solution which abuses the line and space commands is</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#[\n#set line(stroke: (dash: \"dotted\"))\n#let horizontal = { \n  line(start: (-0.25em, 0.3em), end: (1.0em, 0.3em)) \n  h(-0.17em)\n}\n$\n  bold(A) = mat(delim: #(\"[\", \"]\"),\n    1/(3 h_0), 1/3 (1/h_1 - 1/h_0), 1/(3 h_1),    0,   #horizontal,    #horizontal,   #horizontal, #horizontal, 0     ;\n    h_0,       2 (h_1 - h_0),       h_1,          0,   #line(start: (-0.4em, -0.9em), end: (0.7em, 0.2em)), ,         ,       ,       dots.v;\n    0,         h_1,                 2(h_2 - h_1), h_2, 0,         #line(start: (-0.5em, -0.5em), end: (1em, 1em)),,       ,       dots.v;\n  )                                                                                                          $\n]\n</code></pre>\n<p>which results in<br>\n<img src=\"https://forum.typst.app/uploads/default/original/2X/9/977e692ff8fadc22436b12bbe55cdae077d8b6f3.png\" alt=\"image\" data-base62-sha1=\"lCaVN3xgXV3BsKnMEOU3rOqXAYj\" width=\"687\" height=\"169\"></p>",
      "raw": "A bad solution which abuses the line and space commands is \n\n```typst\n#[\n#set line(stroke: (dash: \"dotted\"))\n#let horizontal = { \n  line(start: (-0.25em, 0.3em), end: (1.0em, 0.3em)) \n  h(-0.17em)\n}\n$\n  bold(A) = mat(delim: #(\"[\", \"]\"),\n    1/(3 h_0), 1/3 (1/h_1 - 1/h_0), 1/(3 h_1),    0,   #horizontal,    #horizontal,   #horizontal, #horizontal, 0     ;\n    h_0,       2 (h_1 - h_0),       h_1,          0,   #line(start: (-0.4em, -0.9em), end: (0.7em, 0.2em)), ,         ,       ,       dots.v;\n    0,         h_1,                 2(h_2 - h_1), h_2, 0,         #line(start: (-0.5em, -0.5em), end: (1em, 1em)),,       ,       dots.v;\n  )                                                                                                          $\n]\n```\nwhich results in \n![image|687x169](upload://lCaVN3xgXV3BsKnMEOU3rOqXAYj.png)",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 0,
      "reads": 33,
      "score": 16.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 511
    },
    {
      "id": 5504,
      "post_number": 3,
      "username": "infinitymdm",
      "name": "Marcus Mellor",
      "created_at": "2024-11-11T19:11:10.451Z",
      "updated_at": "2024-11-11T19:11:10.451Z",
      "cooked": "<p>Unfortunately, I don’t think that will work well for the completed matrix. I have several columns that are a tad wider than the rest along the diagonal. Here’s the complete matrix:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">$                                                                                                                                                                                                                                            \n    bold(A) = mat(delim: #(\"[\", \"]\"),                                                                                                                                                                                                        \n        1/(3 h_0), 1/3 (1/h_1 - 1/h_0), 1/(3 h_1),    0,         dots.h,               dots.h,                      0            ;                                                                                                           \n        h_0,       2 (h_1 + h_0),       h_1,          0,         dots.h,               dots.h,                      0            ;                                                                                                           \n        0,         h_1,                 2(h_2 + h_1), h_2,       dots.down,            ,                            dots.v       ;                                                                                                           \n        dots.v,    dots.down,           dots.down,    dots.down, dots.down,            dots.down,                   dots.v       ;                                                                                                           \n        dots.v,    ,                    dots.down,    h_(n-3),   2(h_(n-3) + h_(n-2)), h_(n-2),                     0            ;                                                                                                           \n        0,         dots.h,              dots.h,       0,         h_(n-2),              2(h_(n-2) + h_(n-1)),        h_(n-1)      ;                                                                                                           \n        0,         dots.h,              dots.h,       0,         1/(3 h_(n-2)),        1/3 (1/h_(n-1) - 1/h_(n-2)), 1/(3 h_(n-1));                                                                                                           \n                                                                                                                                                                                                                                             \n    )                                                                                                                                                                                                                                        \n$ \n</code></pre>\n<p>That ^ looks like this:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/9/968d76953ac84230530556bde290d25fa9ad2308.png\" data-download-href=\"https://forum.typst.app/uploads/default/968d76953ac84230530556bde290d25fa9ad2308\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/9/968d76953ac84230530556bde290d25fa9ad2308_2_690x204.png\" alt=\"image\" data-base62-sha1=\"ltQHEAlY3TbpLaYHTERDMT2Gh1m\" width=\"690\" height=\"204\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/9/968d76953ac84230530556bde290d25fa9ad2308_2_690x204.png, https://forum.typst.app/uploads/default/original/2X/9/968d76953ac84230530556bde290d25fa9ad2308.png 1.5x, https://forum.typst.app/uploads/default/original/2X/9/968d76953ac84230530556bde290d25fa9ad2308.png 2x\" data-dominant-color=\"FAFAFA\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">761×225 22.7 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>I’ll give your solution a go as a quick fix. I may be able to fiddle with it until it looks ok this time, but ideally there’s a more flexible solution.</p>",
      "raw": "Unfortunately, I don't think that will work well for the completed matrix. I have several columns that are a tad wider than the rest along the diagonal. Here's the complete matrix:\n\n```typ\n$                                                                                                                                                                                                                                            \n    bold(A) = mat(delim: #(\"[\", \"]\"),                                                                                                                                                                                                        \n        1/(3 h_0), 1/3 (1/h_1 - 1/h_0), 1/(3 h_1),    0,         dots.h,               dots.h,                      0            ;                                                                                                           \n        h_0,       2 (h_1 + h_0),       h_1,          0,         dots.h,               dots.h,                      0            ;                                                                                                           \n        0,         h_1,                 2(h_2 + h_1), h_2,       dots.down,            ,                            dots.v       ;                                                                                                           \n        dots.v,    dots.down,           dots.down,    dots.down, dots.down,            dots.down,                   dots.v       ;                                                                                                           \n        dots.v,    ,                    dots.down,    h_(n-3),   2(h_(n-3) + h_(n-2)), h_(n-2),                     0            ;                                                                                                           \n        0,         dots.h,              dots.h,       0,         h_(n-2),              2(h_(n-2) + h_(n-1)),        h_(n-1)      ;                                                                                                           \n        0,         dots.h,              dots.h,       0,         1/(3 h_(n-2)),        1/3 (1/h_(n-1) - 1/h_(n-2)), 1/(3 h_(n-1));                                                                                                           \n                                                                                                                                                                                                                                             \n    )                                                                                                                                                                                                                                        \n$ \n```\n\nThat ^ looks like this:\n![image|690x204](upload://ltQHEAlY3TbpLaYHTERDMT2Gh1m.png)\n\nI'll give your solution a go as a quick fix. I may be able to fiddle with it until it looks ok this time, but ideally there's a more flexible solution.",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 34,
      "score": 11.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 408
    },
    {
      "id": 5508,
      "post_number": 4,
      "username": "infinitymdm",
      "name": "Marcus Mellor",
      "created_at": "2024-11-11T20:13:04.455Z",
      "updated_at": "2024-11-11T20:13:04.455Z",
      "cooked": "<p>Using your solution I was able to get a semi-acceptable result, but it’s pretty ugly:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/9/9e48ca35179ae13a600e3e2e160db598c956e21b.png\" data-download-href=\"https://forum.typst.app/uploads/default/9e48ca35179ae13a600e3e2e160db598c956e21b\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/9/9e48ca35179ae13a600e3e2e160db598c956e21b_2_690x177.png\" alt=\"image\" data-base62-sha1=\"mAfoiw22SpSMRtv9XTfwl2f4Hnd\" width=\"690\" height=\"177\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/9/9e48ca35179ae13a600e3e2e160db598c956e21b_2_690x177.png, https://forum.typst.app/uploads/default/original/2X/9/9e48ca35179ae13a600e3e2e160db598c956e21b.png 1.5x, https://forum.typst.app/uploads/default/original/2X/9/9e48ca35179ae13a600e3e2e160db598c956e21b.png 2x\" data-dominant-color=\"F9F9F9\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">902×232 31.5 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>Here’s the code:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let (x0, x1, y0, y1) = (-0.5em, 6.6em, -0.2em, 1em)\n#let v_line = line(stroke: (dash: \"dotted\"), start: (0em, y0), end: (0em, y1))\n#let h_line = line(stroke: (dash: \"dotted\"), start: (x0, 0.5em), end: (x1, 0.5em))\n#let d_line = line(stroke: (dash: \"dotted\"), start: (x0, y0), end: (x1, 1em))\n$\n    bold(A) = mat(delim: #(\"[\", \"]\"),\n        1/(3 h_0), 1/3 (1/h_1 - 1/h_0), 1/(3 h_1),    0,         #h_line,              #h_line,                     0            ;\n        h_0,       2 (h_1 + h_0),       h_1,          0,         #h_line,              #h_line,                     0            ;\n        0,         h_1,                 2(h_2 + h_1), h_2,       #d_line,              ,                            #v_line      ;\n        #v_line,   #d_line,             #d_line,      #d_line,   #d_line,              #d_line,                     #v_line      ;\n        #v_line,   ,                    #d_line,      h_(n-3),   2(h_(n-3) + h_(n-2)), h_(n-2),                     0            ;\n        0,         #h_line,             #h_line,      0,         h_(n-2),              2(h_(n-2) + h_(n-1)),        h_(n-1)      ;\n        0,         #h_line,             #h_line,      0,         1/(3 h_(n-2)),        1/3 (1/h_(n-1) - 1/h_(n-2)), 1/(3 h_(n-1));\n    )\n$ \n</code></pre>\n<p>This also has the undesirable side effect of making the matrix very wide, since the lines are now the widest elements in most columns. I understand that some additional width is inevitable in order to make sure all the diagonal lines end up parallel, but the way things are spaced here makes the matrix hard to visually parse. I’m not sure how to solve this.</p>",
      "raw": "Using your solution I was able to get a semi-acceptable result, but it's pretty ugly:\n\n![image|690x177](upload://mAfoiw22SpSMRtv9XTfwl2f4Hnd.png)\n\nHere's the code:\n```typ\n#let (x0, x1, y0, y1) = (-0.5em, 6.6em, -0.2em, 1em)\n#let v_line = line(stroke: (dash: \"dotted\"), start: (0em, y0), end: (0em, y1))\n#let h_line = line(stroke: (dash: \"dotted\"), start: (x0, 0.5em), end: (x1, 0.5em))\n#let d_line = line(stroke: (dash: \"dotted\"), start: (x0, y0), end: (x1, 1em))\n$\n    bold(A) = mat(delim: #(\"[\", \"]\"),\n        1/(3 h_0), 1/3 (1/h_1 - 1/h_0), 1/(3 h_1),    0,         #h_line,              #h_line,                     0            ;\n        h_0,       2 (h_1 + h_0),       h_1,          0,         #h_line,              #h_line,                     0            ;\n        0,         h_1,                 2(h_2 + h_1), h_2,       #d_line,              ,                            #v_line      ;\n        #v_line,   #d_line,             #d_line,      #d_line,   #d_line,              #d_line,                     #v_line      ;\n        #v_line,   ,                    #d_line,      h_(n-3),   2(h_(n-3) + h_(n-2)), h_(n-2),                     0            ;\n        0,         #h_line,             #h_line,      0,         h_(n-2),              2(h_(n-2) + h_(n-1)),        h_(n-1)      ;\n        0,         #h_line,             #h_line,      0,         1/(3 h_(n-2)),        1/3 (1/h_(n-1) - 1/h_(n-2)), 1/(3 h_(n-1));\n    )\n$ \n```\n\nThis also has the undesirable side effect of making the matrix very wide, since the lines are now the widest elements in most columns. I understand that some additional width is inevitable in order to make sure all the diagonal lines end up parallel, but the way things are spaced here makes the matrix hard to visually parse. I'm not sure how to solve this.",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 32,
      "score": 11.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 408
    },
    {
      "id": 5524,
      "post_number": 5,
      "username": "infinitymdm",
      "name": "Marcus Mellor",
      "created_at": "2024-11-11T21:27:23.510Z",
      "updated_at": "2024-11-11T21:27:23.510Z",
      "cooked": "<p>Well, I solved some problems (and created several new ones) using a really nasty hack: I’m using almost entirely negative starting positions for each line, as that doesn’t seem to affect the column width. Look if you dare.</p>\n<details>\n<summary>\nawful hacky code</summary>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">// This is perhpas the most horrific typst code I've written                                                                               \n#let v_line_1 = line(stroke: (dash: \"dotted\"), start: (0.3em, -2.6em), end: (0.3em, 1em))                                                  \n#let v_line_2 = line(stroke: (dash: \"dotted\"), start: (0.5em, -2.6em), end: (0.5em, 1em))                                                  \n#let h_line_1 = line(stroke: (dash: \"dotted\"), start: (-12em, 0em), end: (0em, 0em))                                                       \n#let d_line_1 = line(stroke: (dash: \"dotted\"), start: (-11.6em, -4.6em), end: (0.2em, -0.3em))                                             \n#let h_line_2 = line(stroke: (dash: \"dotted\"), start: (-16em, 0em), end: (0em, 0em))                                                       \n#let d_line_2 = line(stroke: (dash: \"dotted\"), start: (-16em, -4.6em), end: (0em, 0em))                                                    \n#let d_line_3 = line(stroke: (dash: \"dotted\"), start: (-8em, -1.2em), end: (-0.7em, 1.2em))                                                \n#let d_line_4 = line(stroke: (dash: \"dotted\"), start: (-9em, -1.2em), end: (-1em, 1.2em))                                                  \n#let d_line_5 = line(stroke: (dash: \"dotted\"), start: (-11em, -1.2em), end: (-2.5em, 1.2em))                                               \n$                                                                                                                                          \n    A = mat(delim: #(\"[\", \"]\"),                                                                                                            \n        1/(3 h_0), 1/3 (1/h_1 - 1/h_0), 1/(3 h_1),            &amp;0,         ,                     ,                  #h_line_2 0            ;\n        h_0,       2 (h_1 + h_0),       h_1,                  &amp;0,         ,                     ,                  #h_line_2 0            ;\n        0,         h_1,                 2(h_2 + h_1),         &amp;h_2,       ,                     ,                                         ;\n        ,          ,                    ,                     &amp;,          ,                     ,                                         ;\n        ,          ,                    ,           #d_line_3 &amp;,#d_line_4 ,           #d_line_5 ,                            #v_line_2    ;\n        #v_line_1, ,                    ,                     &amp;h_(n-3),   2(h_(n-3) + h_(n-2)), h_(n-2),           #d_line_2 0            ;\n        0,         ,                    , #d_line_1 #h_line_1 &amp;0,         h_(n-2),              2(h_(n-2) + h_(n-1)),        h_(n-1)      ;\n        0,         ,                    ,           #h_line_1 &amp;0,         1/(3 h_(n-2)),        1/3 (1/h_(n-1) - 1/h_(n-2)), 1/(3 h_(n-1));\n                                                                                                                                           \n    )                                                                                                                                      \n$ \n</code></pre>\n</details>\n<p>That renders like this:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/f/f1bfd80f4a975eab9e86312e952472e9219719e1.png\" data-download-href=\"https://forum.typst.app/uploads/default/f1bfd80f4a975eab9e86312e952472e9219719e1\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/f/f1bfd80f4a975eab9e86312e952472e9219719e1_2_690x211.png\" alt=\"image\" data-base62-sha1=\"yuC5Qawh5Z6SdTYozQNx76VyXoB\" width=\"690\" height=\"211\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/f/f1bfd80f4a975eab9e86312e952472e9219719e1_2_690x211.png, https://forum.typst.app/uploads/default/original/2X/f/f1bfd80f4a975eab9e86312e952472e9219719e1.png 1.5x, https://forum.typst.app/uploads/default/original/2X/f/f1bfd80f4a975eab9e86312e952472e9219719e1.png 2x\" data-dominant-color=\"F9F9F9\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">805×247 31.8 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>Of course, now I have the following new problems:</p>\n<ul>\n<li>columns with lines in front of them get extra spacing for some reason (thus the alignment in col 4)</li>\n<li>the diagonal lines aren’t parallel at all</li>\n</ul>\n<p>I really hope there’s a better way to do this.</p>",
      "raw": "Well, I solved some problems (and created several new ones) using a really nasty hack: I'm using almost entirely negative starting positions for each line, as that doesn't seem to affect the column width. Look if you dare.\n\n[details=\"awful hacky code\"]\n```typ\n// This is perhpas the most horrific typst code I've written                                                                               \n#let v_line_1 = line(stroke: (dash: \"dotted\"), start: (0.3em, -2.6em), end: (0.3em, 1em))                                                  \n#let v_line_2 = line(stroke: (dash: \"dotted\"), start: (0.5em, -2.6em), end: (0.5em, 1em))                                                  \n#let h_line_1 = line(stroke: (dash: \"dotted\"), start: (-12em, 0em), end: (0em, 0em))                                                       \n#let d_line_1 = line(stroke: (dash: \"dotted\"), start: (-11.6em, -4.6em), end: (0.2em, -0.3em))                                             \n#let h_line_2 = line(stroke: (dash: \"dotted\"), start: (-16em, 0em), end: (0em, 0em))                                                       \n#let d_line_2 = line(stroke: (dash: \"dotted\"), start: (-16em, -4.6em), end: (0em, 0em))                                                    \n#let d_line_3 = line(stroke: (dash: \"dotted\"), start: (-8em, -1.2em), end: (-0.7em, 1.2em))                                                \n#let d_line_4 = line(stroke: (dash: \"dotted\"), start: (-9em, -1.2em), end: (-1em, 1.2em))                                                  \n#let d_line_5 = line(stroke: (dash: \"dotted\"), start: (-11em, -1.2em), end: (-2.5em, 1.2em))                                               \n$                                                                                                                                          \n    A = mat(delim: #(\"[\", \"]\"),                                                                                                            \n        1/(3 h_0), 1/3 (1/h_1 - 1/h_0), 1/(3 h_1),            &0,         ,                     ,                  #h_line_2 0            ;\n        h_0,       2 (h_1 + h_0),       h_1,                  &0,         ,                     ,                  #h_line_2 0            ;\n        0,         h_1,                 2(h_2 + h_1),         &h_2,       ,                     ,                                         ;\n        ,          ,                    ,                     &,          ,                     ,                                         ;\n        ,          ,                    ,           #d_line_3 &,#d_line_4 ,           #d_line_5 ,                            #v_line_2    ;\n        #v_line_1, ,                    ,                     &h_(n-3),   2(h_(n-3) + h_(n-2)), h_(n-2),           #d_line_2 0            ;\n        0,         ,                    , #d_line_1 #h_line_1 &0,         h_(n-2),              2(h_(n-2) + h_(n-1)),        h_(n-1)      ;\n        0,         ,                    ,           #h_line_1 &0,         1/(3 h_(n-2)),        1/3 (1/h_(n-1) - 1/h_(n-2)), 1/(3 h_(n-1));\n                                                                                                                                           \n    )                                                                                                                                      \n$ \n```\n[/details]\n\nThat renders like this: \n![image|690x211](upload://yuC5Qawh5Z6SdTYozQNx76VyXoB.png)\n\nOf course, now I have the following new problems:\n- columns with lines in front of them get extra spacing for some reason (thus the alignment in col 4)\n- the diagonal lines aren't parallel at all\n\nI really hope there's a better way to do this.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 30,
      "score": 56.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 408
    },
    {
      "id": 5594,
      "post_number": 6,
      "username": "ian",
      "name": "Ian",
      "created_at": "2024-11-13T17:29:38.207Z",
      "updated_at": "2024-11-13T17:29:38.207Z",
      "cooked": "<p>This looks like a perfect job for fletcher: <a href=\"https://typst.app/universe/package/fletcher/\" class=\"inline-onebox\">fletcher – Typst Universe</a></p>\n<p>I’m not fully sure how you would use it to integrate with the matrix itself. You may need to redefine the mat command, or potentially include the matrix <em>inside</em> the diagram. But if you want fancy lines connecting things, fletcher is the place to start.</p>",
      "raw": "This looks like a perfect job for fletcher: https://typst.app/universe/package/fletcher/\n\nI'm not fully sure how you would use it to integrate with the matrix itself. You may need to redefine the mat command, or potentially include the matrix *inside* the diagram. But if you want fancy lines connecting things, fletcher is the place to start.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 20,
      "score": 24.0,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 25
    },
    {
      "id": 5618,
      "post_number": 7,
      "username": "infinitymdm",
      "name": "Marcus Mellor",
      "created_at": "2024-11-14T04:01:51.523Z",
      "updated_at": "2024-11-14T04:01:51.523Z",
      "cooked": "<p>I gave fletcher a try. It definitely produces a much better result, but still not quite perfect. Here’s what I ended up with:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">$\n    A = mat(delim: #(\"[\",\"]\"),\n        #diagram(\n            spacing: 0pt,\n            node((0,0), $1/(3 h_0)$),     node((1,0), $-1/3 (1/h_1 + 1/h_0)$), node((2,0), $1/(3 h_1)$),                 node((3,0), $0$),             edge((3,0), (6,0), \"dotted\"),                                                     node((6,0), $0$),\n            node((0,1), $h_0$),           node((1,1), $2 (h_1 + h_0)$),        node((2,1), $h_1$),                       node((3,1), $0$),             edge((3,1), (6,1), \"dotted\"),                                                     node((6,1), $0$),\n            node((0,2), $0$),             node((1,2), $h_1$),                  node((2,2), $2(h_2 + h_1)$, defocus: -1), node((3,2), $h_2$),           edge((3,1), (6,4), \"dotted\"),                                                     edge((6,1), (6,4), \"dotted\"),\n            edge((0,2), (0,5), \"dotted\"), edge((0,2), (3,5), \"dotted\"),        edge((1,2), (3,4), \"dotted\"),             edge((2,2), (4,4), \"dotted\"), edge((3,2), (5,4), \"dotted\"),                     node((5,3), height: 2em),\n                                                                                                                         node((3,4), $h_(n-3)$),       node((4,4), $2(h_(n-3) + h_(n-2))$, defocus: -1), node((5,4), $h_(n-2)$),                      node((6,4), $0$),\n            node((0,5), $0$),             edge((0,5), (3,5), \"dotted\"),                                                  node((3,5), $0$),             node((4,5), $h_(n-2)$),                           node((5,5), $2(h_(n-2) + h_(n-1))$),         node((6,5), $h_(n-1)$),\n            node((0,6), $0$),             edge((0,6), (3,6), \"dotted\"),                                                  node((3,6), $0$),             node((4,6), $1/(3 h_(n-2))$),                     node((5,6), $-1/3 (1/h_(n-1) + 1/h_(n-2))$), node((6,6), $1/(3 h_(n-1))$)\n        )\n    )\n$\n</code></pre>\n<p>which looks like this:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/2/2a804ecc66741fbd38de72011942a7539b66b9c7.png\" data-download-href=\"https://forum.typst.app/uploads/default/2a804ecc66741fbd38de72011942a7539b66b9c7\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/2/2a804ecc66741fbd38de72011942a7539b66b9c7_2_690x239.png\" alt=\"image\" data-base62-sha1=\"63YX1mdeNIutrUFn1QRRVjLMD1t\" width=\"690\" height=\"239\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/2/2a804ecc66741fbd38de72011942a7539b66b9c7_2_690x239.png, https://forum.typst.app/uploads/default/original/2X/2/2a804ecc66741fbd38de72011942a7539b66b9c7.png 1.5x, https://forum.typst.app/uploads/default/original/2X/2/2a804ecc66741fbd38de72011942a7539b66b9c7.png 2x\" data-dominant-color=\"FAFAFA\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">756×262 31.7 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>I still feel that there ought to be a better way to do this sort of thing, but this is admittedly a pretty niche use case. For now this is good enough.</p>",
      "raw": "I gave fletcher a try. It definitely produces a much better result, but still not quite perfect. Here's what I ended up with:\n\n```typ\n$\n    A = mat(delim: #(\"[\",\"]\"),\n        #diagram(\n            spacing: 0pt,\n            node((0,0), $1/(3 h_0)$),     node((1,0), $-1/3 (1/h_1 + 1/h_0)$), node((2,0), $1/(3 h_1)$),                 node((3,0), $0$),             edge((3,0), (6,0), \"dotted\"),                                                     node((6,0), $0$),\n            node((0,1), $h_0$),           node((1,1), $2 (h_1 + h_0)$),        node((2,1), $h_1$),                       node((3,1), $0$),             edge((3,1), (6,1), \"dotted\"),                                                     node((6,1), $0$),\n            node((0,2), $0$),             node((1,2), $h_1$),                  node((2,2), $2(h_2 + h_1)$, defocus: -1), node((3,2), $h_2$),           edge((3,1), (6,4), \"dotted\"),                                                     edge((6,1), (6,4), \"dotted\"),\n            edge((0,2), (0,5), \"dotted\"), edge((0,2), (3,5), \"dotted\"),        edge((1,2), (3,4), \"dotted\"),             edge((2,2), (4,4), \"dotted\"), edge((3,2), (5,4), \"dotted\"),                     node((5,3), height: 2em),\n                                                                                                                         node((3,4), $h_(n-3)$),       node((4,4), $2(h_(n-3) + h_(n-2))$, defocus: -1), node((5,4), $h_(n-2)$),                      node((6,4), $0$),\n            node((0,5), $0$),             edge((0,5), (3,5), \"dotted\"),                                                  node((3,5), $0$),             node((4,5), $h_(n-2)$),                           node((5,5), $2(h_(n-2) + h_(n-1))$),         node((6,5), $h_(n-1)$),\n            node((0,6), $0$),             edge((0,6), (3,6), \"dotted\"),                                                  node((3,6), $0$),             node((4,6), $1/(3 h_(n-2))$),                     node((5,6), $-1/3 (1/h_(n-1) + 1/h_(n-2))$), node((6,6), $1/(3 h_(n-1))$)\n        )\n    )\n$\n```\nwhich looks like this: \n![image|690x239](upload://63YX1mdeNIutrUFn1QRRVjLMD1t.png)\n\nI still feel that there ought to be a better way to do this sort of thing, but this is admittedly a pretty niche use case. For now this is good enough.",
      "reply_to_post_number": 6,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 19,
      "score": 8.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 408
    }
  ],
  "scraped_at": "2025-06-10T09:55:07.991856"
}