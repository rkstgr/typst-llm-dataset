{
  "topic_metadata": {
    "id": 2321,
    "title": "How do I display code and math side-by-side?",
    "slug": "how-do-i-display-code-and-math-side-by-side",
    "posts_count": 6,
    "created_at": "2025-01-06T15:47:04.233Z",
    "last_posted_at": "2025-01-22T16:14:40.137Z",
    "views": 311,
    "like_count": 17,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 5,
    "accepted_answer_username": "Hannes",
    "tags": [
      "layout"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 651
  },
  "posts": [
    {
      "id": 7253,
      "post_number": 1,
      "username": "Manor_Askenazi",
      "name": "Manor Askenazi",
      "created_at": "2025-01-06T15:47:04.373Z",
      "updated_at": "2025-01-06T15:59:11.744Z",
      "cooked": "<p>What is the typst-way to achieve this (R-code annotated with math line by line). Is there a way to escape raw-mode, or do I use a table, but then if I use a table to ensure code and math are aligned how do I indent to code snippets etc…?</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/0/0b93dba68365c064b41fa59060a6b5a45ed2e026.png\" alt=\"mixed\" data-base62-sha1=\"1Eq2giPd3hEeYOO372nb5NeCxX8\" width=\"676\" height=\"465\"></p>",
      "raw": "What is the typst-way to achieve this (R-code annotated with math line by line). Is there a way to escape raw-mode, or do I use a table, but then if I use a table to ensure code and math are aligned how do I indent to code snippets etc...?\n\n![mixed|676x465](upload://1Eq2giPd3hEeYOO372nb5NeCxX8.png)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 48,
      "score": 649.6,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1015
    },
    {
      "id": 7254,
      "post_number": 2,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-01-06T15:55:54.278Z",
      "updated_at": "2025-01-06T15:55:54.278Z",
      "cooked": "<p>Hi <a class=\"mention\" href=\"/u/manor_askenazi\">@Manor_Askenazi</a>, could you maybe try to revise your post’s title to be a complete question as per the <a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11\">question guidelines</a>:</p>\n<blockquote>\n<p><strong>Good titles are questions you would ask your friend about Typst.</strong></p>\n</blockquote>\n<p>Adding tags like <a class=\"hashtag-cooked\" href=\"/tag/layout\" data-type=\"tag\" data-slug=\"layout\" data-id=\"65\"><span class=\"hashtag-icon-placeholder\"><svg class=\"fa d-icon d-icon-square-full svg-icon svg-node\"><use href=\"#square-full\"></use></svg></span><span>layout</span></a> would be useful too! We hope by adhering to this, we make the information in this forum easy to find in the future. Thanks!</p>",
      "raw": "Hi @Manor_Askenazi, could you maybe try to revise your post’s title to be a complete question as per the [question guidelines](https://forum.typst.app/t/how-to-post-in-the-questions-category/11):\n\n> **Good titles are questions you would ask your friend about Typst.**\n\nAdding tags like #layout would be useful too! We hope by adhering to this, we make the information in this forum easy to find in the future. Thanks!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 48,
      "score": 29.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 7255,
      "post_number": 3,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-01-06T15:59:56.047Z",
      "updated_at": "2025-01-06T16:02:04.243Z",
      "cooked": "<p>as for your question, yes a table or grid would be the solution here. You can simply use raw and math content as the table cells:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#grid(\n  columns: (1fr, auto),\n  align: horizon,\n  ```r\n  x &lt;- 0\n  ```,\n  $ x = 0\\ a $,\n)\n</code></pre>\n<p>and indent like you’re used to.</p>\n<p>Edit: a downside is that the width of the code and equations can’t “overlap” if it fits for a particular row. I don’t think there should be any problems if you simply do one grid per row, then that isn’t an issue.</p>",
      "raw": "as for your question, yes a table or grid would be the solution here. You can simply use raw and math content as the table cells:\n```typ\n#grid(\n  columns: (1fr, auto),\n  align: horizon,\n  ```r\n  x <- 0\n  ```,\n  $ x = 0\\ a $,\n)\n```\nand indent like you're used to.\n\nEdit: a downside is that the width of the code and equations can't \"overlap\" if it fits for a particular row. I don't think there should be any problems if you simply do one grid per row, then that isn't an issue.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 47,
      "score": 44.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 7265,
      "post_number": 4,
      "username": "sjfhsjfh",
      "name": "sjfhsjfh",
      "created_at": "2025-01-07T05:35:18.772Z",
      "updated_at": "2025-01-07T05:35:18.772Z",
      "cooked": "<p>Simply make a function</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let aline(..docs) = {\n  grid(\n    columns: (1fr, auto),\n    align: (left, right),\n    ..docs\n  )\n}\n</code></pre>\n<p>Then the following code should look like this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#aline[``` t_multiplier = 5; min_rate = 0.1 ; prior = 0.2```][$lambda_i^T = 5 lambda_i^F quad pi_r = 0.2$]\n#aline[``` no equaion ok```]\n#aline[``` bigger equation also ok```][$max((sum_(i = 1)^oo 1 / i^2) / (product_(i = 1)^oo (1 + 1 / i^2)))$]\n``` hybrid of aline and bare raw block```\n#aline[```\n  might not be satisfing for\n  multiple\n  lines```]\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/d/d26f9a2d7dde40a49070ae796a742211e6ee3baf.png\" data-download-href=\"https://forum.typst.app/uploads/default/d26f9a2d7dde40a49070ae796a742211e6ee3baf\" title=\"Result\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/d/d26f9a2d7dde40a49070ae796a742211e6ee3baf_2_690x210.png\" alt=\"Result\" data-base62-sha1=\"u1BnhwszgjEV1BS1xx6uVku7KmX\" width=\"690\" height=\"210\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/d/d26f9a2d7dde40a49070ae796a742211e6ee3baf_2_690x210.png, https://forum.typst.app/uploads/default/optimized/2X/d/d26f9a2d7dde40a49070ae796a742211e6ee3baf_2_1035x315.png 1.5x, https://forum.typst.app/uploads/default/original/2X/d/d26f9a2d7dde40a49070ae796a742211e6ee3baf.png 2x\" data-dominant-color=\"FAFAFA\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Result</span><span class=\"informations\">1068×326 26.2 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "Simply make a function\n\n```typ\n#let aline(..docs) = {\n  grid(\n    columns: (1fr, auto),\n    align: (left, right),\n    ..docs\n  )\n}\n```\n\nThen the following code should look like this:\n\n```typ\n#aline[``` t_multiplier = 5; min_rate = 0.1 ; prior = 0.2```][$lambda_i^T = 5 lambda_i^F quad pi_r = 0.2$]\n#aline[``` no equaion ok```]\n#aline[``` bigger equation also ok```][$max((sum_(i = 1)^oo 1 / i^2) / (product_(i = 1)^oo (1 + 1 / i^2)))$]\n``` hybrid of aline and bare raw block```\n#aline[```\n  might not be satisfing for\n  multiple\n  lines```]\n```\n\n![Result|690x210](upload://u1BnhwszgjEV1BS1xx6uVku7KmX.png)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 41,
      "score": 53.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 120
    },
    {
      "id": 7268,
      "post_number": 5,
      "username": "Hannes",
      "name": "Hannes",
      "created_at": "2025-01-07T10:55:06.833Z",
      "updated_at": "2025-01-07T10:56:19.516Z",
      "cooked": "<p>Here is another, slightly more complex function to keep the code in one raw block (Please excuse any typos in the example):</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let annotate-code(code, annotations) = {\n  // Map the annotations to a dictionary for easy access\n  let dict = annotations.map(((row, a)) =&gt; (str(row), a)).to-dict()\n  let numbering = numbering.with(\"1\")\n  show raw.line: it =&gt; context {\n    let num-width = measure(numbering(it.count)).width // Numbering shenanigens (not really necessary)\n    set block(spacing: 0em)\n    grid(\n      columns: (auto, 1fr, auto),\n      align: (right + horizon, left + horizon, right + horizon),\n      box(\n        width: num-width + 1em,\n        inset: (right: 1em),\n        text(fill: gray, numbering(it.number)),\n      ),\n      it.body,\n      if str(it.number) in dict {\n        dict.at(str(it.number))\n      } else {\n        []\n      },\n    )\n  }\n  code\n}\n</code></pre>\n<p>You can then use the function as follows:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#annotate-code(\n  ```R\n  t_multiplier = 5; min_rate = 0.1; prior = 0.2\n\n  replicate_psms &lt;- c(19, 28, 25) # BIRC example from\n  control_psms   &lt;- c( 0,  0,  0) # KRAS4A Pull-Down\n  lambda &lt;- max(mean(control_psms), min_rate)\n  rep_scores &lt;- c()\n  for (x in replicate_psms) {\n    p_t_x &lt;- prior * dpois(x, t_multiplier * lambda)\n    p_f_x &lt;- (1 - prior) * dpois(x, lambda)\n    p_x &lt;- p_t_x + p_f_x\n    if (p_x &gt; 0 ) {\n      rep_score &lt;- p_t_x / p_x\n    } else {\n      stopifnot(x &gt; t_multiplier * lambda)\n      rep_score &lt;- 1\n    }\n    rep_scores &lt;- c(rep_scores, rep_score)\n  }\n  score &lt;- mean(rep_scores)\n  ```,\n  (\n    (1, $ lambda_i^tau = 5 lambda_i^F quad pi_tau = 0.2 $),\n    (\n      5,\n      $\n        hat(lambda_i^F) = max((sum_(c = 1)^(N_italic(\"controls\")) x_c) / N_italic(\"controls\"), 0.1)\n      $,\n    ),\n    (8, $ pi_tau P(x; lambda_i^tau) $),\n    (9, $ (1 - pi_tau) P(x; lambda_i^F) $),\n    (10, $ pi_tau P(x; lambda_i^tau) + (1 - pi_tau) P(x; lambda_i^F) $),\n    (\n      12,\n      $\n        P(Z_i = 1 | X_i = x) = (pi_tau P(x; lambda_i^tau)) / (pi_tau P(x; lambda_i^tau) + (1 - pi_tau) P(x; lambda_i^F))\n      $,\n    ),\n    (\n      17,\n      $\n        italic(\"Score\")_i = (sum_(r = 1)^(N_italic(\"replicates\") P(Z_i = 1 | X_i = x_r))) / N_italic(\"replicates\")\n      $,\n    ),\n  ),\n)\n</code></pre>\n<details>\n<summary>\nOutput</summary>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/1/1649c3870da125bf3b5ba2646cfd7a4e1b36e6ba.png\" data-download-href=\"https://forum.typst.app/uploads/default/1649c3870da125bf3b5ba2646cfd7a4e1b36e6ba\" title=\"main\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/1/1649c3870da125bf3b5ba2646cfd7a4e1b36e6ba_2_686x499.png\" alt=\"main\" data-base62-sha1=\"3baxDrmZvvZNw9CDLYgDIjPVZ58\" width=\"686\" height=\"499\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/1/1649c3870da125bf3b5ba2646cfd7a4e1b36e6ba_2_686x499.png, https://forum.typst.app/uploads/default/original/2X/1/1649c3870da125bf3b5ba2646cfd7a4e1b36e6ba.png 1.5x, https://forum.typst.app/uploads/default/original/2X/1/1649c3870da125bf3b5ba2646cfd7a4e1b36e6ba.png 2x\" data-dominant-color=\"FAF9FA\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">main</span><span class=\"informations\">1020×743 191 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n</details>",
      "raw": "Here is another, slightly more complex function to keep the code in one raw block (Please excuse any typos in the example):\n```typ\n#let annotate-code(code, annotations) = {\n  // Map the annotations to a dictionary for easy access\n  let dict = annotations.map(((row, a)) => (str(row), a)).to-dict()\n  let numbering = numbering.with(\"1\")\n  show raw.line: it => context {\n    let num-width = measure(numbering(it.count)).width // Numbering shenanigens (not really necessary)\n    set block(spacing: 0em)\n    grid(\n      columns: (auto, 1fr, auto),\n      align: (right + horizon, left + horizon, right + horizon),\n      box(\n        width: num-width + 1em,\n        inset: (right: 1em),\n        text(fill: gray, numbering(it.number)),\n      ),\n      it.body,\n      if str(it.number) in dict {\n        dict.at(str(it.number))\n      } else {\n        []\n      },\n    )\n  }\n  code\n}\n```\nYou can then use the function as follows:\n```typ\n#annotate-code(\n  ```R\n  t_multiplier = 5; min_rate = 0.1; prior = 0.2\n\n  replicate_psms <- c(19, 28, 25) # BIRC example from\n  control_psms   <- c( 0,  0,  0) # KRAS4A Pull-Down\n  lambda <- max(mean(control_psms), min_rate)\n  rep_scores <- c()\n  for (x in replicate_psms) {\n    p_t_x <- prior * dpois(x, t_multiplier * lambda)\n    p_f_x <- (1 - prior) * dpois(x, lambda)\n    p_x <- p_t_x + p_f_x\n    if (p_x > 0 ) {\n      rep_score <- p_t_x / p_x\n    } else {\n      stopifnot(x > t_multiplier * lambda)\n      rep_score <- 1\n    }\n    rep_scores <- c(rep_scores, rep_score)\n  }\n  score <- mean(rep_scores)\n  ```,\n  (\n    (1, $ lambda_i^tau = 5 lambda_i^F quad pi_tau = 0.2 $),\n    (\n      5,\n      $\n        hat(lambda_i^F) = max((sum_(c = 1)^(N_italic(\"controls\")) x_c) / N_italic(\"controls\"), 0.1)\n      $,\n    ),\n    (8, $ pi_tau P(x; lambda_i^tau) $),\n    (9, $ (1 - pi_tau) P(x; lambda_i^F) $),\n    (10, $ pi_tau P(x; lambda_i^tau) + (1 - pi_tau) P(x; lambda_i^F) $),\n    (\n      12,\n      $\n        P(Z_i = 1 | X_i = x) = (pi_tau P(x; lambda_i^tau)) / (pi_tau P(x; lambda_i^tau) + (1 - pi_tau) P(x; lambda_i^F))\n      $,\n    ),\n    (\n      17,\n      $\n        italic(\"Score\")_i = (sum_(r = 1)^(N_italic(\"replicates\") P(Z_i = 1 | X_i = x_r))) / N_italic(\"replicates\")\n      $,\n    ),\n  ),\n)\n```\n[details=\"Output\"]\n![main|686x499](upload://3baxDrmZvvZNw9CDLYgDIjPVZ58.png)\n[/details]",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 8,
      "reads": 37,
      "score": 227.4,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 922
    },
    {
      "id": 7769,
      "post_number": 6,
      "username": "Manor_Askenazi",
      "name": "Manor Askenazi",
      "created_at": "2025-01-22T16:14:40.137Z",
      "updated_at": "2025-01-22T16:14:40.137Z",
      "cooked": "<p>This is surreal! I post a stupid manually-generated png made in PowerPoint (yes, I am ashamed) using <strong>screenshot</strong> <em>just as an example</em> and you respond with a general solution along with its application to my screenshot…  And it is essentially pixel-perfect / identical! Thank you, sir!!!</p>",
      "raw": "This is surreal! I post a stupid manually-generated png made in PowerPoint (yes, I am ashamed) using **screenshot** *just as an example* and you respond with a general solution along with its application to my screenshot...  And it is essentially pixel-perfect / identical! Thank you, sir!!!",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 4,
      "reads": 25,
      "score": 95.0,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1015
    }
  ],
  "scraped_at": "2025-06-10T09:53:05.101189"
}