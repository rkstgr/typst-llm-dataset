{
  "topic_metadata": {
    "id": 977,
    "title": "How to conditionally enable equation numbering for labeled equations?",
    "slug": "how-to-conditionally-enable-equation-numbering-for-labeled-equations",
    "posts_count": 17,
    "created_at": "2024-10-08T08:56:54.402Z",
    "last_posted_at": "2025-02-18T08:55:54.980Z",
    "views": 1236,
    "like_count": 13,
    "reply_count": 8,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 3,
    "accepted_answer_username": "Aegon",
    "tags": [
      "math"
    ],
    "category_id": 5,
    "participant_count": 8,
    "word_count": 1080
  },
  "posts": [
    {
      "id": 3546,
      "post_number": 1,
      "username": "Christopher_Marcotte",
      "name": "Christopher Marcotte",
      "created_at": "2024-10-08T08:56:54.519Z",
      "updated_at": "2024-10-09T04:52:50.873Z",
      "cooked": "<p>In articles it is sometimes helpful to have unnumbered equations appear interlaced with numbered ones, the latter being referenced in the document.</p>\n<p>How might I write the <code>#set math.equation(numbering: (params) =&gt; output)</code> rule so that <em>only</em> equations with reference tags are numbered? Is this something that would need language support to implement?</p>",
      "raw": "In articles it is sometimes helpful to have unnumbered equations appear interlaced with numbered ones, the latter being referenced in the document.\n\nHow might I write the `#set math.equation(numbering: (params) => output)` rule so that _only_ equations with reference tags are numbered? Is this something that would need language support to implement?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 122,
      "score": 4729.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 270
    },
    {
      "id": 3551,
      "post_number": 2,
      "username": "Aegon",
      "name": "Aegon Huke",
      "created_at": "2024-10-08T10:30:41.042Z",
      "updated_at": "2024-10-08T10:33:03.510Z",
      "cooked": "<p>I figured out a solution. Create the following function</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let equ(eq, id: none) = {\n  let body = if type(id) == none {eq} else if type(id) == label [#eq #id] else [#eq &lt;#id&gt;]\n  let numbering = if type(id) != none { \"(1)\" } else { none }\n  set math.equation(numbering: numbering)\n  body\n}\n</code></pre>\n<p>Then you can control the showing of labels by setting the argument <code>id</code>. For example,</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#lorem(50) As shown in @eq:eq1,\n#equ($\ny = a x + b\n$, id: &lt;eq:eq1&gt;)\n#lorem(100)\n#equ($\nE = m c^2\n$)\n#lorem(50)\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/cb9530cbcf757ea2bafdc43d55e7bad78de1fc9f.png\" alt=\"image\" data-base62-sha1=\"t2Yz5lTc7TyTgVyOj381QyOxRTx\" width=\"542\" height=\"240\"></p>\n<p>Later I will try to figure out how to achieve this without using a custom function. But such a function is helpful. You can avoid the math equation breaking paragraphs with this</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let equ(eq, id: none) = {\n  let body = if id == none {eq} else if type(id) == label [#eq #id] else [#eq #label(id)]\n  let numbering = if id != none { \"(1)\" } else { none }\n  set math.equation(numbering: numbering)\n  linebreak()\n  box(body, width: 1fr)\n  linebreak()\n}\n</code></pre>\n<p>In this case, display equations are really “in” the paragraph, not “between” two paragraphs.</p>",
      "raw": "I figured out a solution. Create the following function\n\n```typ\n#let equ(eq, id: none) = {\n  let body = if type(id) == none {eq} else if type(id) == label [#eq #id] else [#eq <#id>]\n  let numbering = if type(id) != none { \"(1)\" } else { none }\n  set math.equation(numbering: numbering)\n  body\n}\n```\n\nThen you can control the showing of labels by setting the argument `id`. For example,\n\n```typ\n#lorem(50) As shown in @eq:eq1,\n#equ($\ny = a x + b\n$, id: <eq:eq1>)\n#lorem(100)\n#equ($\nE = m c^2\n$)\n#lorem(50)\n```\n\n![image|542x240, 100%](upload://t2Yz5lTc7TyTgVyOj381QyOxRTx.png)\n\nLater I will try to figure out how to achieve this without using a custom function. But such a function is helpful. You can avoid the math equation breaking paragraphs with this\n\n```typ\n#let equ(eq, id: none) = {\n  let body = if id == none {eq} else if type(id) == label [#eq #id] else [#eq #label(id)]\n  let numbering = if id != none { \"(1)\" } else { none }\n  set math.equation(numbering: numbering)\n  linebreak()\n  box(body, width: 1fr)\n  linebreak()\n}\n```\n\nIn this case, display equations are really \"in\" the paragraph, not \"between\" two paragraphs.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 120,
      "score": 219.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 269
    },
    {
      "id": 3552,
      "post_number": 3,
      "username": "Aegon",
      "name": "Aegon Huke",
      "created_at": "2024-10-08T10:58:25.620Z",
      "updated_at": "2024-10-08T10:58:25.620Z",
      "cooked": "<p>And here is another solution without the help of a <code>equ</code> function. Put the following code before your document’s main body.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show: body =&gt; {\n  for elem in body.children {\n    if elem.func() == math.equation and elem.block {\n      let numbering = if \"label\" in elem.fields().keys() { \"(1)\" } else { none }\n      set math.equation(numbering: numbering)\n      elem\n    } else {\n      elem\n    }\n  }\n}\n</code></pre>\n<p>And you can also append some other settings like <a href=\"https://github.com/typst/typst/issues/311#issuecomment-2104447655\" rel=\"noopener nofollow ugc\">this comment</a>.</p>\n<p>In this case, the following script</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#lorem(30)\n$ y = a x + b $ &lt;eq:eq2&gt;\n#lorem(19)\n@eq:eq2 #lorem(20)\n$ E = m c^2 $\n#lorem(10)\n</code></pre>\n<p>will result in</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/1d82b786ed57f942098b6d2f0979c5f4f6b6908b.png\" alt=\"image\" data-base62-sha1=\"4d3UbShqI9pBPmQGttnRAjcFOWv\" width=\"542\" height=\"203\"></p>",
      "raw": "And here is another solution without the help of a `equ` function. Put the following code before your document's main body.\n\n```typ\n#show: body => {\n  for elem in body.children {\n    if elem.func() == math.equation and elem.block {\n      let numbering = if \"label\" in elem.fields().keys() { \"(1)\" } else { none }\n      set math.equation(numbering: numbering)\n      elem\n    } else {\n      elem\n    }\n  }\n}\n```\n\nAnd you can also append some other settings like [this comment](https://github.com/typst/typst/issues/311#issuecomment-2104447655).\n\nIn this case, the following script\n\n```typ\n#lorem(30)\n$ y = a x + b $ <eq:eq2>\n#lorem(19)\n@eq:eq2 #lorem(20)\n$ E = m c^2 $\n#lorem(10)\n```\n\nwill result in\n\n![image|542x203](upload://4d3UbShqI9pBPmQGttnRAjcFOWv.png)",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 3,
      "reads": 103,
      "score": 230.6,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 269
    },
    {
      "id": 3553,
      "post_number": 4,
      "username": "Christopher_Marcotte",
      "name": "Christopher Marcotte",
      "created_at": "2024-10-08T11:14:33.020Z",
      "updated_at": "2024-10-08T11:14:33.020Z",
      "cooked": "<p>Thank you very much for the extensive options. I particularly like avoiding the custom function.</p>",
      "raw": "Thank you very much for the extensive options. I particularly like avoiding the custom function.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 91,
      "score": 23.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 270
    },
    {
      "id": 3584,
      "post_number": 5,
      "username": "PgBiel",
      "name": "",
      "created_at": "2024-10-09T04:53:46.579Z",
      "updated_at": "2024-10-09T04:53:46.579Z",
      "cooked": "<p>Hey <a class=\"mention\" href=\"/u/christopher_marcotte\">@Christopher_Marcotte</a> ! I’ve updated your post title to be in accordance with our question title guidelines: <a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11\" class=\"inline-onebox\">How to post in the Questions category</a></p>\n<p>Remember that your title should be a question you’d ask to a friend about Typst. <img src=\"https://forum.typst.app/images/emoji/apple/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Hey @Christopher_Marcotte ! I've updated your post title to be in accordance with our question title guidelines: https://forum.typst.app/t/how-to-post-in-the-questions-category/11\n\nRemember that your title should be a question you'd ask to a friend about Typst. :wink:",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 90,
      "score": 48.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 3585,
      "post_number": 6,
      "username": "PgBiel",
      "name": "",
      "created_at": "2024-10-09T04:55:09.821Z",
      "updated_at": "2024-10-09T04:55:09.821Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Aegon\" data-post=\"2\" data-topic=\"977\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/aegon/48/232_2.png\" class=\"avatar\"> Aegon:</div>\n<blockquote>\n<p>I figured out a solution. Create the following function</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let equ(eq, id: none) = {\n  let body = if type(id) == none {eq} else if type(id) == label [#eq #id] else [#eq &lt;#id&gt;]\n  let numbering = if type(id) != none { \"(1)\" } else { none }\n  set math.equation(numbering: numbering)\n  body\n}\n</code></pre>\n</blockquote>\n</aside>\n<p>Hey <a class=\"mention\" href=\"/u/aegon\">@Aegon</a>, quick tip! The syntax <code>&lt;#id&gt;</code> produces a label literally containing <code>#id</code> (that is, a hash, the letter “i”, and the letter “d”), <em>not</em> a label with the contents of the variable named <code>id</code>. Rather, you should write <code>label(id)</code> (use the label constructor) if you’d like to construct a label from a dynamic string. Hope this helps in the future!</p>",
      "raw": "[quote=\"Aegon, post:2, topic:977\"]\nI figured out a solution. Create the following function\n\n```typ\n#let equ(eq, id: none) = {\n  let body = if type(id) == none {eq} else if type(id) == label [#eq #id] else [#eq <#id>]\n  let numbering = if type(id) != none { \"(1)\" } else { none }\n  set math.equation(numbering: numbering)\n  body\n}\n```\n[/quote]\n\nHey @Aegon, quick tip! The syntax `<#id>` produces a label literally containing `#id` (that is, a hash, the letter \"i\", and the letter \"d\"), _not_ a label with the contents of the variable named `id`. Rather, you should write `label(id)` (use the label constructor) if you'd like to construct a label from a dynamic string. Hope this helps in the future!",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 0,
      "reads": 94,
      "score": 33.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 3604,
      "post_number": 7,
      "username": "Aegon",
      "name": "Aegon Huke",
      "created_at": "2024-10-09T10:22:18.365Z",
      "updated_at": "2024-10-09T10:22:18.365Z",
      "cooked": "<p>Thanks! So the corrected version should be</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let equ(eq, id: none) = {\n  let body = if id == none {eq} else if type(id) == label [#eq #id] else [#eq #label(id)]\n  let numbering = if id != none { \"(1)\" } else { none }\n  set math.equation(numbering: numbering)\n  linebreak()\n  box(body, width: 1fr)\n  linebreak()\n}\n</code></pre>\n<p>Right?</p>",
      "raw": "Thanks! So the corrected version should be \n\n```typ\n#let equ(eq, id: none) = {\n  let body = if id == none {eq} else if type(id) == label [#eq #id] else [#eq #label(id)]\n  let numbering = if id != none { \"(1)\" } else { none }\n  set math.equation(numbering: numbering)\n  linebreak()\n  box(body, width: 1fr)\n  linebreak()\n}\n```\n\nRight?",
      "reply_to_post_number": 6,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 89,
      "score": 32.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 269
    },
    {
      "id": 3611,
      "post_number": 8,
      "username": "PgBiel",
      "name": "",
      "created_at": "2024-10-09T12:23:57.798Z",
      "updated_at": "2024-10-09T12:23:57.798Z",
      "cooked": "<p>Yes (assuming <code>id</code> would always be a string in the last case).</p>",
      "raw": "Yes (assuming `id` would always be a string in the last case).",
      "reply_to_post_number": 7,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 87,
      "score": 17.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 3623,
      "post_number": 9,
      "username": "Aegon",
      "name": "Aegon Huke",
      "created_at": "2024-10-09T16:43:02.567Z",
      "updated_at": "2024-10-09T16:44:32.249Z",
      "cooked": "<p><a class=\"mention\" href=\"/u/christopher_marcotte\">@Christopher_Marcotte</a> Unfortunately, this solution cannot work on equations in lists, enums, etc. To solve this, it is still necessary to define a function which applies the for-loop to its body argument.</p>",
      "raw": "@Christopher_Marcotte Unfortunately, this solution cannot work on equations in lists, enums, etc. To solve this, it is still necessary to define a function which applies the for-loop to its body argument.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 83,
      "score": 21.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 269
    },
    {
      "id": 3624,
      "post_number": 10,
      "username": "Aegon",
      "name": "Aegon Huke",
      "created_at": "2024-10-09T16:46:42.062Z",
      "updated_at": "2024-10-09T16:46:42.062Z",
      "cooked": "<p>Perhaps we can achieve this by using show once the non-recursive show-set is ready.</p>",
      "raw": "Perhaps we can achieve this by using show once the non-recursive show-set is ready.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 82,
      "score": 96.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 269
    },
    {
      "id": 3626,
      "post_number": 11,
      "username": "Enivex",
      "name": "Enivex",
      "created_at": "2024-10-09T21:37:19.914Z",
      "updated_at": "2024-10-09T21:37:19.914Z",
      "cooked": "<p>You may be interested in this package</p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://typst.app/universe/package/equate/\">\n  <header class=\"source\">\n      <img src=\"https://forum.typst.app/uploads/default/original/1X/098187a593d51c4db99324614e2baeeb1bb355cc.png\" class=\"site-icon\" data-dominant-color=\"3CA8B6\" width=\"32\" height=\"32\">\n\n      <a href=\"https://typst.app/universe/package/equate/\" target=\"_blank\" rel=\"noopener\">Typst</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/361;\"><img src=\"https://forum.typst.app/uploads/default/optimized/1X/db1c18ed802fe6841bee62606931f352da10ed09_2_690x362.png\" class=\"thumbnail\" data-dominant-color=\"7CC2C5\" width=\"690\" height=\"362\"></div>\n\n<h3><a href=\"https://typst.app/universe/package/equate/\" target=\"_blank\" rel=\"noopener\">equate – Typst Universe</a></h3>\n\n  <p>Breakable equations with improved numbering.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n",
      "raw": "You may be interested in this package \n\nhttps://typst.app/universe/package/equate/",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 80,
      "score": 61.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 5
    },
    {
      "id": 3651,
      "post_number": 12,
      "username": "Christopher_Marcotte",
      "name": "Christopher Marcotte",
      "created_at": "2024-10-10T10:37:01.748Z",
      "updated_at": "2024-10-10T10:37:01.748Z",
      "cooked": "<p>This appears to precisely solve the issue, very elegantly. Amazing, thank you!</p>",
      "raw": "This appears to precisely solve the issue, very elegantly. Amazing, thank you!",
      "reply_to_post_number": 11,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 79,
      "score": 50.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 270
    },
    {
      "id": 3845,
      "post_number": 13,
      "username": "OrangeX4",
      "name": "OrangeX4",
      "created_at": "2024-10-14T03:11:26.194Z",
      "updated_at": "2024-10-14T03:11:26.194Z",
      "cooked": "<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set math.equation(numbering: \"(1)\")\n#show math.equation: it =&gt; {\n  if not it.has(\"label\") {\n    let fields = it.fields()\n    fields.remove(\"body\")\n    fields.numbering = none\n    return [#counter(math.equation).update(v =&gt; v - 1)#math.equation(..fields, it.body)&lt;math-equation-without-label&gt;]\n  }\n  return it\n}\n\n$ x + y $\n\n$ x + y + z $ &lt;with-label&gt;\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/cb9937781172c905e3407cbd6e37bf7bc82e4954.png\" alt=\"82ae3879ab4cb384318bc01a3e883fc6\" data-base62-sha1=\"t37bSX6oaebPjGRHCoEsdEP7pE8\" width=\"381\" height=\"198\"></p>",
      "raw": "```typ\n#set math.equation(numbering: \"(1)\")\n#show math.equation: it => {\n  if not it.has(\"label\") {\n    let fields = it.fields()\n    fields.remove(\"body\")\n    fields.numbering = none\n    return [#counter(math.equation).update(v => v - 1)#math.equation(..fields, it.body)<math-equation-without-label>]\n  }\n  return it\n}\n\n$ x + y $\n\n$ x + y + z $ <with-label>\n```\n\n![82ae3879ab4cb384318bc01a3e883fc6|381x198](upload://t37bSX6oaebPjGRHCoEsdEP7pE8.png)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 3,
      "reads": 80,
      "score": 116.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 18
    },
    {
      "id": 6289,
      "post_number": 14,
      "username": "Philipp",
      "name": "Philipp",
      "created_at": "2024-12-03T18:54:15.381Z",
      "updated_at": "2024-12-03T19:14:43.694Z",
      "cooked": "<p>Slightly shorter variant which also ensures correct numbering in presence of inline equations:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#set math.equation(numbering: \"(1)\")\n#show math.equation: it =&gt; {\n  if it.block and not it.has(\"label\") [\n    #counter(math.equation).update(v =&gt; v - 1)\n    #math.equation(it.body, block: true, numbering: none)#label(\"\")\n  ] else {\n    it\n  }  \n}\n</code></pre>\n<h1><a name=\"p-6289-explanation-1\" class=\"anchor\" href=\"#p-6289-explanation-1\"></a>Explanation</h1>\n<p>The set rule enables numbering for all equations.<br>\nThe show rule handles block equations without label specially by displaying a copy of the equation without numbering. To ensure that these equations are not counted, the counter is decremented. To avoid recursion, an empty label is added.</p>\n<h1><a name=\"p-6289-example-2\" class=\"anchor\" href=\"#p-6289-example-2\"></a>Example</h1>\n<details><summary>Full code</summary>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#set page(width: 100pt, height: auto)\n\n\n#set math.equation(numbering: \"(1)\")\n#show math.equation: it =&gt; {\n  if it.block and not it.has(\"label\") [\n    #counter(math.equation).update(v =&gt; v - 1)\n    #math.equation(it.body, block: true, numbering: none)#label(\"\")\n  ] else {\n    it\n  }  \n}\n\n\n$a$ to the one:\n$ a^1 $\n$b$ to the two:\n$ b^2 $ &lt;b&gt;\n$c$ to the three:\n$ c^3 $\n$d$&lt;x&gt; to the four:\n$ d^4 $ &lt;d&gt;\n\n</code></pre>\n</details>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/c/c46f774a7c25ed69f9e3e0bee699fccf8fe99952.png\" data-download-href=\"https://forum.typst.app/uploads/default/c46f774a7c25ed69f9e3e0bee699fccf8fe99952\" title=\"example\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/c/c46f774a7c25ed69f9e3e0bee699fccf8fe99952_2_272x500.png\" alt=\"example\" data-base62-sha1=\"s1KoJDzZv4ksAiu5i99bFa5IEds\" width=\"272\" height=\"500\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/c/c46f774a7c25ed69f9e3e0bee699fccf8fe99952_2_272x500.png, https://forum.typst.app/uploads/default/original/2X/c/c46f774a7c25ed69f9e3e0bee699fccf8fe99952.png 1.5x, https://forum.typst.app/uploads/default/original/2X/c/c46f774a7c25ed69f9e3e0bee699fccf8fe99952.png 2x\" data-dominant-color=\"F8F8F8\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">example</span><span class=\"informations\">361×662 31.4 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "Slightly shorter variant which also ensures correct numbering in presence of inline equations:\n\n```typst\n#set math.equation(numbering: \"(1)\")\n#show math.equation: it => {\n  if it.block and not it.has(\"label\") [\n    #counter(math.equation).update(v => v - 1)\n    #math.equation(it.body, block: true, numbering: none)#label(\"\")\n  ] else {\n    it\n  }  \n}\n```\n\n\n# Explanation\nThe set rule enables numbering for all equations.\nThe show rule handles block equations without label specially by displaying a copy of the equation without numbering. To ensure that these equations are not counted, the counter is decremented. To avoid recursion, an empty label is added.\n\n# Example\n\n<details><summary>Full code</summary>\n\n```typst\n#set page(width: 100pt, height: auto)\n\n\n#set math.equation(numbering: \"(1)\")\n#show math.equation: it => {\n  if it.block and not it.has(\"label\") [\n    #counter(math.equation).update(v => v - 1)\n    #math.equation(it.body, block: true, numbering: none)#label(\"\")\n  ] else {\n    it\n  }  \n}\n\n\n$a$ to the one:\n$ a^1 $\n$b$ to the two:\n$ b^2 $ <b>\n$c$ to the three:\n$ c^3 $\n$d$<x> to the four:\n$ d^4 $ <d>\n\n```\n</details>\n\n![example|272x500](upload://s1KoJDzZv4ksAiu5i99bFa5IEds.png)",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 0,
      "reads": 57,
      "score": 241.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 798
    },
    {
      "id": 6338,
      "post_number": 15,
      "username": "Jollywatt",
      "name": "Joseph Wilson",
      "created_at": "2024-12-04T17:28:52.024Z",
      "updated_at": "2024-12-04T17:33:56.788Z",
      "cooked": "<p>Edit: the solution in this post doesn’t work — equation numbers are shown automatically, but equation references don’t work.</p>\n<details>\n<summary>Original post</summary>\n<aside class=\"quote no-group\" data-username=\"Philipp\" data-post=\"14\" data-topic=\"977\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/p/441A5E/48.png\" class=\"avatar\"> Philipp:</div>\n<blockquote>\n<p>Slightly shorter variant which also ensures correct numbering in presence of inline equations:</p>\n</blockquote>\n</aside>\n<p>Even shorter still, you can do it with a single show rule:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show math.equation: it =&gt; {\n\tif it.numbering == none and it.has(\"label\") {\n\t\tmath.equation(it.body, numbering: \"(1)\", block: true)\n\t} else { it }\n}\n</code></pre>\n<p>Fortunately, the show rule preserves the label by default.</p>\n</details>",
      "raw": "Edit: the solution in this post doesn't work — equation numbers are shown automatically, but equation references don't work.\n\n<details>\n<summary>Original post</summary>\n\n[quote=\"Philipp, post:14, topic:977\"]\nSlightly shorter variant which also ensures correct numbering in presence of inline equations:\n[/quote]\n\nEven shorter still, you can do it with a single show rule:\n\n```typ\n#show math.equation: it => {\n\tif it.numbering == none and it.has(\"label\") {\n\t\tmath.equation(it.body, numbering: \"(1)\", block: true)\n\t} else { it }\n}\n```\n\nFortunately, the show rule preserves the label by default.\n</details>",
      "reply_to_post_number": 14,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 0,
      "reads": 51,
      "score": 30.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 713
    },
    {
      "id": 8762,
      "post_number": 16,
      "username": "Evon_Vootlo",
      "name": "Evon Vootlo",
      "created_at": "2025-02-18T08:06:59.310Z",
      "updated_at": "2025-02-18T08:07:23.566Z",
      "cooked": "<p>Shouldn’t the counter update line be this?</p>\n<pre><code>#counter(math.equation).update(v =&gt; calc.max(v - 1, 0))\n</code></pre>\n<p>Otherwise if the document starts with an unlabeled equation, then the counter goes negative and Typst throws an error.</p>",
      "raw": "Shouldn't the counter update line be this?\n\n    #counter(math.equation).update(v => calc.max(v - 1, 0))\n\nOtherwise if the document starts with an unlabeled equation, then the counter goes negative and Typst throws an error.",
      "reply_to_post_number": 14,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 37,
      "score": 17.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1151
    },
    {
      "id": 8765,
      "post_number": 17,
      "username": "Philipp",
      "name": "Philipp",
      "created_at": "2025-02-18T08:55:54.980Z",
      "updated_at": "2025-02-18T08:56:06.565Z",
      "cooked": "<blockquote>\n<p>Otherwise if the document starts with an unlabeled equation, then the counter goes negative and Typst throws an error.</p>\n</blockquote>\n<p>The solution works in either case. At the line in question, the counter is already incremented, i.e. always ≥1. If the document starts with an unlabeled equation, it is 1, and the counter update code sets it back to zero.</p>",
      "raw": "> Otherwise if the document starts with an unlabeled equation, then the counter goes negative and Typst throws an error.\n\nThe solution works in either case. At the line in question, the counter is already incremented, i.e. always ≥1. If the document starts with an unlabeled equation, it is 1, and the counter update code sets it back to zero.",
      "reply_to_post_number": 16,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 36,
      "score": 7.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 798
    }
  ],
  "scraped_at": "2025-06-10T09:57:12.454550"
}