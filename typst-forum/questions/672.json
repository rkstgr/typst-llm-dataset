{
  "topic_metadata": {
    "id": 672,
    "title": "How to mutate variables in a show rule?",
    "slug": "how-to-mutate-variables-in-a-show-rule",
    "posts_count": 8,
    "created_at": "2024-09-25T13:29:55.516Z",
    "last_posted_at": "2024-09-25T15:02:19.369Z",
    "views": 478,
    "like_count": 9,
    "reply_count": 6,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "Andrew",
    "tags": [
      "scripting",
      "layout",
      "counter",
      "context"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 596
  },
  "posts": [
    {
      "id": 2574,
      "post_number": 1,
      "username": "Jacobdabozze",
      "name": "",
      "created_at": "2024-09-25T13:29:55.639Z",
      "updated_at": "2024-09-25T13:49:22.243Z",
      "cooked": "<p>Let’s take a look at the following example:<br>\nEvery second level 1 heading is supposed to appear bold in the outline.<br>\n<br>\nEasy, right? Just use an integer variable, calculate variable mod 2, and set the style accordingly.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let i = 1\n#show outline.entry.where(level: 1): it =&gt; context {\n  if calc.rem(i, 2) == 1 {\n    strong(it)\n  } else {\n    it\n  }\n  i += 1\n}\n\n#outline(depth: 3, indent: auto)\n</code></pre>\n<p>Well… Not so easy. I am not allowed to mutate integers within a show rule.<br>\n<br>\nThat’s why I came up with the following hack using a counter.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let i = counter(\"i-counter\")\n#i.update(0)\n#show outline.entry.where(level: 1): it =&gt; context {\n  if calc.rem(i.get().at(0), 2) == 1 {\n    strong(it)\n  } else {\n    it\n  }\n  i.step()\n}\n    \n#outline(depth: 3, indent: auto)\n</code></pre>\n<p>But I have to admit that it just doesn’t feel right. I am pretty sure this isn’t how I am supposed to use a counter.</p>\n<p><br>\nThat’s why I wonder:<br>\nWhat is the Typst-way to approach a problem like this?</p>",
      "raw": "Let's take a look at the following example:\nEvery second level 1 heading is supposed to appear bold in the outline.\n\\\nEasy, right? Just use an integer variable, calculate variable mod 2, and set the style accordingly.\n```typ\n#let i = 1\n#show outline.entry.where(level: 1): it => context {\n  if calc.rem(i, 2) == 1 {\n    strong(it)\n  } else {\n    it\n  }\n  i += 1\n}\n\n#outline(depth: 3, indent: auto)\n```\nWell... Not so easy. I am not allowed to mutate integers within a show rule. \n\\\nThat's why I came up with the following hack using a counter.\n```typ\n#let i = counter(\"i-counter\")\n#i.update(0)\n#show outline.entry.where(level: 1): it => context {\n  if calc.rem(i.get().at(0), 2) == 1 {\n    strong(it)\n  } else {\n    it\n  }\n  i.step()\n}\n    \n#outline(depth: 3, indent: auto)\n```\n \nBut I have to admit that it just doesn't feel right. I am pretty sure this isn't how I am supposed to use a counter.\n\n\\\nThat's why I wonder:\nWhat is the Typst-way to approach a problem like this?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 52,
      "score": 2075.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 424
    },
    {
      "id": 2577,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-09-25T13:43:03.164Z",
      "updated_at": "2024-09-25T13:47:12.974Z",
      "cooked": "<p>No, you are pretty much spot on. Here is a slightly modified version:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set page(paper: \"a5\")\n\n#show outline.entry.where(level: 1): it =&gt; {\n  let i = counter(\"i-counter\")\n  i.step()\n  context if calc.even(i.get().first()) {\n    strong(it)\n  } else {\n    it\n  }\n}\n\n#outline(depth: 3, indent: auto)\n\n= First\n= Second\n= Third\n= Fourth\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/9b3cb73114e729450ee439d3dfeaed79a3f8d1f0.png\" alt=\"image\" data-base62-sha1=\"m9i5BNceuFLlWeV41nuXszhY1aM\" width=\"687\" height=\"423\"></p>\n<p>If you don’t use the counter anywhere else, then it’s a good idea to put it where it is used. You can also use functions like <a href=\"https://typst.app/docs/reference/foundations/calc#functions-even\"><code>even</code></a> which will improve readability.</p>\n<p>From <a href=\"https://typst.app/docs/reference/introspection/counter/:herb:\">https://typst.app/docs/reference/introspection/counter/:herb:</a></p>\n<blockquote>\n<p>Counts through pages, elements, and more.</p>\n<p>With the counter function, you can access and modify counters for pages, headings, figures, and more. Moreover, you can define custom counters for other things you want to count.</p>\n<p>Since counters change throughout the course of the document, their current value is <em>contextual.</em> It is recommended to read the chapter on <a href=\"https://typst.app/docs/reference/context/\">context</a> before continuing here.</p>\n</blockquote>",
      "raw": "No, you are pretty much spot on. Here is a slightly modified version:\n\n```typ\n#set page(paper: \"a5\")\n\n#show outline.entry.where(level: 1): it => {\n  let i = counter(\"i-counter\")\n  i.step()\n  context if calc.even(i.get().first()) {\n    strong(it)\n  } else {\n    it\n  }\n}\n\n#outline(depth: 3, indent: auto)\n\n= First\n= Second\n= Third\n= Fourth\n```\n\n![image|687x423](upload://m9i5BNceuFLlWeV41nuXszhY1aM.png)\n\nIf you don't use the counter anywhere else, then it's a good idea to put it where it is used. You can also use functions like [`even`](https://typst.app/docs/reference/foundations/calc#functions-even) which will improve readability.\n\nFrom https://typst.app/docs/reference/introspection/counter/:herb: \n\n> Counts through pages, elements, and more.\n> \n> With the counter function, you can access and modify counters for pages, headings, figures, and more. Moreover, you can define custom counters for other things you want to count.\n> \n> Since counters change throughout the course of the document, their current value is *contextual.* It is recommended to read the chapter on [context](https://typst.app/docs/reference/context/) before continuing here.",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 2,
      "reads": 48,
      "score": 99.4,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 2578,
      "post_number": 3,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-09-25T13:46:28.910Z",
      "updated_at": "2024-09-25T13:46:38.603Z",
      "cooked": "<p>There are many Typst ways… Here is below an approach without a counter, but I think much more expensive, because you query headings in the document.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show outline.entry.where(level: 1): it =&gt; context {\n  let i = query(heading.where(level: 1).before(it.element.location())).len()\n  if calc.rem(i, 2) == 1 {\n    str(i) + \"-\" + strong(it)\n  } else {\n    str(i) + \"-\" + it\n  }\n}\n\n= A\n= B\n= C\n= D\n= E\n#outline(depth: 3, indent: auto)\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/1X/a6be1fc4b32d9b1ebde93f57a9942b46aad35f2a.png\" data-download-href=\"https://forum.typst.app/uploads/default/a6be1fc4b32d9b1ebde93f57a9942b46aad35f2a\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/original/1X/a6be1fc4b32d9b1ebde93f57a9942b46aad35f2a.png\" alt=\"image\" data-base62-sha1=\"nN4B8TRSwRAY7Ko5nBR3XOSKt7k\" width=\"690\" height=\"367\" data-dominant-color=\"FBFBFB\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">756×403 10.8 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "There are many Typst ways... Here is below an approach without a counter, but I think much more expensive, because you query headings in the document.\n\n```typ\n#show outline.entry.where(level: 1): it => context {\n  let i = query(heading.where(level: 1).before(it.element.location())).len()\n  if calc.rem(i, 2) == 1 {\n    str(i) + \"-\" + strong(it)\n  } else {\n    str(i) + \"-\" + it\n  }\n}\n\n= A\n= B\n= C\n= D\n= E\n#outline(depth: 3, indent: auto)\n```\n![image|690x367](upload://nN4B8TRSwRAY7Ko5nBR3XOSKt7k.png)",
      "reply_to_post_number": 2,
      "reply_count": 3,
      "quote_count": 0,
      "like_count": 2,
      "reads": 40,
      "score": 62.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 2579,
      "post_number": 4,
      "username": "Jacobdabozze",
      "name": "",
      "created_at": "2024-09-25T13:46:59.678Z",
      "updated_at": "2024-09-25T13:46:59.678Z",
      "cooked": "<p>Thank you! That makes it more readable :)</p>",
      "raw": "Thank you! That makes it more readable :)",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 31,
      "score": 11.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 424
    },
    {
      "id": 2580,
      "post_number": 5,
      "username": "Jacobdabozze",
      "name": "",
      "created_at": "2024-09-25T13:48:18.910Z",
      "updated_at": "2024-09-25T13:48:18.910Z",
      "cooked": "<p>I never would have thought of this. Really good to know! Thank you :)</p>",
      "raw": "I never would have thought of this. Really good to know! Thank you :)",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 31,
      "score": 21.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 424
    },
    {
      "id": 2583,
      "post_number": 6,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-09-25T13:59:13.252Z",
      "updated_at": "2024-09-25T14:02:43.908Z",
      "cooked": "<p>Yeah, that’s great too (more verbose, but doesn’t use a custom counter). I was only thinking by looking at the initial example. But you can slightly improve it:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set page(paper: \"a5\")\n\n#show outline.entry.where(level: 1): it =&gt; context {\n  let selector = heading.where(level: 1).before(it.element.location())\n  let count = query(selector).len() + 1\n  if calc.even(count) {\n    strong(it)\n  } else {\n    it\n  }\n}\n\n#outline(depth: 3, indent: auto)\n\n= #lorem(6)\n= #lorem(6)\n= #lorem(6)\n= #lorem(6)\n= #lorem(6)\n= #lorem(6)\n</code></pre>\n<details>\n<summary>\nOutput</summary>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/1X/1b4c17e5ea5940c718d99e3f591cb5e81e33ed59.png\" data-download-href=\"https://forum.typst.app/uploads/default/1b4c17e5ea5940c718d99e3f591cb5e81e33ed59\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/1X/1b4c17e5ea5940c718d99e3f591cb5e81e33ed59_2_564x500.png\" alt=\"image\" data-base62-sha1=\"3TtV69O11nX1Gl1ozu94yCIYSIV\" width=\"564\" height=\"500\" srcset=\"https://forum.typst.app/uploads/default/optimized/1X/1b4c17e5ea5940c718d99e3f591cb5e81e33ed59_2_564x500.png, https://forum.typst.app/uploads/default/original/1X/1b4c17e5ea5940c718d99e3f591cb5e81e33ed59.png 1.5x, https://forum.typst.app/uploads/default/original/1X/1b4c17e5ea5940c718d99e3f591cb5e81e33ed59.png 2x\" data-dominant-color=\"232323\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">826×732 97.2 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n</details>\n<p>One small mistake I noticed is that your code makes odd entries bold, not even.</p>",
      "raw": "Yeah, that's great too (more verbose, but doesn't use a custom counter). I was only thinking by looking at the initial example. But you can slightly improve it:\n\n```typ\n#set page(paper: \"a5\")\n\n#show outline.entry.where(level: 1): it => context {\n  let selector = heading.where(level: 1).before(it.element.location())\n  let count = query(selector).len() + 1\n  if calc.even(count) {\n    strong(it)\n  } else {\n    it\n  }\n}\n\n#outline(depth: 3, indent: auto)\n\n= #lorem(6)\n= #lorem(6)\n= #lorem(6)\n= #lorem(6)\n= #lorem(6)\n= #lorem(6)\n```\n\n[details=\"Output\"]\n![image|564x500](upload://3TtV69O11nX1Gl1ozu94yCIYSIV.png)\n[/details]\n\nOne small mistake I noticed is that your code makes odd entries bold, not even.",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 30,
      "score": 30.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 2586,
      "post_number": 7,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-09-25T14:03:29.157Z",
      "updated_at": "2024-09-25T14:03:29.157Z",
      "cooked": "<p>Thanks for clearing it up! I did not notice the bug <img src=\"https://forum.typst.app/images/emoji/apple/smiley.png?v=12\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\" loading=\"lazy\" width=\"20\" height=\"20\">. Although, I still think the counter solution is easier to think of, and might be more performant…</p>",
      "raw": "Thanks for clearing it up! I did not notice the bug :smiley:. Although, I still think the counter solution is easier to think of, and might be more performant...",
      "reply_to_post_number": 6,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 26,
      "score": 25.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 2591,
      "post_number": 8,
      "username": "laurmaedje",
      "name": "Laurenz Mädje",
      "created_at": "2024-09-25T15:02:19.369Z",
      "updated_at": "2024-09-25T15:02:19.369Z",
      "cooked": "<p>Shouldn’t be much more expensive, if at all. This one seems most idiomatic.</p>",
      "raw": "Shouldn't be much more expensive, if at all. This one seems most idiomatic.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 24,
      "score": 44.6,
      "accepted_answer": false,
      "trust_level": 4,
      "user_id": 2
    }
  ],
  "scraped_at": "2025-06-10T09:58:05.275054"
}