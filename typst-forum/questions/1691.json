{
  "topic_metadata": {
    "id": 1691,
    "title": "How to pagebreak before an heading, only if a certain condition is achieved?",
    "slug": "how-to-pagebreak-before-an-heading-only-if-a-certain-condition-is-achieved",
    "posts_count": 18,
    "created_at": "2024-11-12T16:48:45.233Z",
    "last_posted_at": "2025-04-14T08:29:50.013Z",
    "views": 918,
    "like_count": 35,
    "reply_count": 7,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 7,
    "accepted_answer_username": "Xodarap",
    "tags": [
      "scripting",
      "layout"
    ],
    "category_id": 5,
    "participant_count": 7,
    "word_count": 1910
  },
  "posts": [
    {
      "id": 5549,
      "post_number": 1,
      "username": "Nasmevka",
      "name": "Thomas Teixeira",
      "created_at": "2024-11-12T16:48:45.467Z",
      "updated_at": "2025-04-26T20:21:09.702Z",
      "cooked": "<p>Hi !<br>\nNew user of Typst, so far it’s sooo good. I really wish it was a thing when I was going through uni ahah.</p>\n<hr>\n<p>I’m trying to add a <code>pagebreak</code> before every <code>heading(level: 1)</code>, but only if they are below half the page.</p>\n<p>Adding a pagebreak is easy with :</p>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">show heading.where(level: 1, outlined: true): it =&gt; {\n\tpagebreak()\n\tit\n}\n</code></pre>\n<p>But when trying to add a little logic, I keep getting redundancy errors.</p>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">show heading.where(level: 1, outlined: true): it =&gt; {\n\tif it.location().position().y &gt; page.height * .5 {\n\t\tpagebreak()\n\t}\n\tit\n}\n</code></pre>\n<p>And I think I understand why (feel free to explain either way :)) ), but what I don’t understand is :</p>\n<ul>\n<li>Why adding the line <code>v(0pt)</code> above the <code>pagebreak</code> fixes the redundancy error ? (afterward, the outline is garbage, containing the wrong page number)</li>\n<li>How can I fix this issue without a hacky trick, if it’s even possible.</li>\n</ul>\n<hr>\n<p><em>About the solution I chose</em><br>\nI choose another question as the solution (<a href=\"https://forum.typst.app/t/why-do-i-need-state-for-some-here-some-specific-show-rules/1784\">this one</a> from <a class=\"mention\" href=\"/u/xodarap\">@Xodarap</a>), since they are both extremely related and <a class=\"mention\" href=\"/u/xodarap\">@Xodarap</a> received answers are interesting and a good way to learn more how Typst work.</p>",
      "raw": "Hi !\nNew user of Typst, so far it's sooo good. I really wish it was a thing when I was going through uni ahah.\n\n___\n\nI'm trying to add a `pagebreak` before every `heading(level: 1)`, but only if they are below half the page.\n\nAdding a pagebreak is easy with : \n```typc\nshow heading.where(level: 1, outlined: true): it => {\n\tpagebreak()\n\tit\n}\n```\n\nBut when trying to add a little logic, I keep getting redundancy errors.\n```typc\nshow heading.where(level: 1, outlined: true): it => {\n\tif it.location().position().y > page.height * .5 {\n\t\tpagebreak()\n\t}\n\tit\n}\n```\nAnd I think I understand why (feel free to explain either way :)) ), but what I don't understand is : \n- Why adding the line `v(0pt)` above the `pagebreak` fixes the redundancy error ? (afterward, the outline is garbage, containing the wrong page number)\n- How can I fix this issue without a hacky trick, if it's even possible.\n\n---\n*About the solution I chose*\nI choose another question as the solution ([this one](https://forum.typst.app/t/why-do-i-need-state-for-some-here-some-specific-show-rules/1784) from @Xodarap), since they are both extremely related and @Xodarap received answers are interesting and a good way to learn more how Typst work.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 3,
      "reads": 106,
      "score": 2436.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 796
    },
    {
      "id": 5574,
      "post_number": 2,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-11-13T09:05:56.942Z",
      "updated_at": "2024-11-13T09:08:27.407Z",
      "cooked": "<p>Hello and welcome!</p>\n<p>If your error is</p>\n<pre data-code-wrap=\"shell\"><code class=\"lang-shell\">warning: layout did not converge within 5 attempts\n = hint: check if any states or queries are updating themselves\n</code></pre>\n<p>This is normal, do not panic.</p>\n<p>Let’s start with a simple question: if your heading was to be before the pagebreak, do you think you would get the same error? The answer is <em>no</em>.</p>\n<p>What you wrote diverges in an infinite loop:</p>\n<ul>\n<li>You add a pagebreak if the heading is halfway through the page by comparing to the heading element’s y position</li>\n<li>You add the heading itself.</li>\n<li>Backtracking, the heading’s position has … changed!</li>\n<li>Typst tries to resolve this layout, but cannot do it within 5 attempts, hence the error, and you probably don’t have the result you hoped for.</li>\n</ul>\n<p>Now, how do you actually write this condition? You have to use an element that does not move with your pagebreak. The simplest way is to add a <a href=\"https://typst.app/docs/reference/introspection/metadata/\"><code>metadata</code></a> element. By querying that element’s position instead, you make sure you don’t have any “loops” <img src=\"https://forum.typst.app/images/emoji/apple/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show heading.where(level: 1, outlined: true): it =&gt; {\n  let h1 = query(metadata.where(value: \"foo\").before(here()))  \n  if h1.len() != 0 and h1.first().location().position().y &gt; page.height * .5 {\n    pagebreak()\n  }\n  it\n}\n\n= A\n\n#lorem(500)\n\n#metadata(\"foo\")\n= B\n</code></pre>\n<p>For additional reading, you might want to take a look at the following threads:</p>\n<ul>\n<li><a href=\"https://forum.typst.app/t/how-to-create-a-pagebreak-before-every-depth-1-heading-except-for-the-outline/904\" class=\"inline-onebox\">How to create a pagebreak before every depth 1 heading except for the outline?</a></li>\n<li><a href=\"https://forum.typst.app/t/how-to-put-first-order-headings-start-on-odd-numbered-pages/1564/2\" class=\"inline-onebox\">How to put first-order headings start on odd-numbered pages? - #2 by Eric</a></li>\n</ul>",
      "raw": "Hello and welcome!\n\nIf your error is \n```shell\nwarning: layout did not converge within 5 attempts\n = hint: check if any states or queries are updating themselves\n```\nThis is normal, do not panic.\n\nLet's start with a simple question: if your heading was to be before the pagebreak, do you think you would get the same error? The answer is _no_. \n\nWhat you wrote diverges in an infinite loop:\n- You add a pagebreak if the heading is halfway through the page by comparing to the heading element's y position\n- You add the heading itself.\n- Backtracking, the heading's position has ... changed!\n- Typst tries to resolve this layout, but cannot do it within 5 attempts, hence the error, and you probably don't have the result you hoped for.\n\nNow, how do you actually write this condition? You have to use an element that does not move with your pagebreak. The simplest way is to add a [`metadata`](https://typst.app/docs/reference/introspection/metadata/) element. By querying that element's position instead, you make sure you don't have any \"loops\" :slight_smile: \n\n```typ\n#show heading.where(level: 1, outlined: true): it => {\n  let h1 = query(metadata.where(value: \"foo\").before(here()))  \n  if h1.len() != 0 and h1.first().location().position().y > page.height * .5 {\n    pagebreak()\n  }\n  it\n}\n\n= A\n\n#lorem(500)\n\n#metadata(\"foo\")\n= B\n```\n\nFor additional reading, you might want to take a look at the following threads:\n- https://forum.typst.app/t/how-to-create-a-pagebreak-before-every-depth-1-heading-except-for-the-outline/904\n- https://forum.typst.app/t/how-to-put-first-order-headings-start-on-odd-numbered-pages/1564/2",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 93,
      "score": 68.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 5581,
      "post_number": 3,
      "username": "Nasmevka",
      "name": "Thomas Teixeira",
      "created_at": "2024-11-13T10:24:55.721Z",
      "updated_at": "2024-11-13T10:24:55.721Z",
      "cooked": "<p>Thank you so much for your answer.<br>\nSo I did understand correctly why the warning was shown.</p>\n<p>Sadly, that mean I cannot achieve what I want without a manual intervention ?<br>\nIf the only way to <code>pagebreak</code> after mid-page is to use a metadata tag before every heading, I do think the best solution is to just write the whole document and manually add <code>pagebreak</code> at the end.</p>",
      "raw": "Thank you so much for your answer.\nSo I did understand correctly why the warning was shown.\n\nSadly, that mean I cannot achieve what I want without a manual intervention ? \nIf the only way to `pagebreak` after mid-page is to use a metadata tag before every heading, I do think the best solution is to just write the whole document and manually add `pagebreak` at the end.",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 88,
      "score": 47.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 796
    },
    {
      "id": 5587,
      "post_number": 4,
      "username": "sjfhsjfh",
      "name": "sjfhsjfh",
      "created_at": "2024-11-13T15:44:12.468Z",
      "updated_at": "2024-11-13T15:44:12.468Z",
      "cooked": "<p>I think the point in this case is that where is <code>here()</code> exactly calculated. I’m not sure since I did not read the source code, but I made an alternative <code>my-location</code> to make it work:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let my-location = state(\"my-location\", (:))\n\n#let smartbreak(percentage) = (\n  context {\n    if my-location.get().y &gt; page.height * (100% - percentage) {\n      pagebreak()\n    }\n  }\n)\n\n#show heading.where(level: 1, outlined: true): it =&gt; {\n  context my-location.update(here().position())\n  smartbreak(50%)\n  it\n}\n</code></pre>\n<p>And the outline should be working properly using this impl.</p>\n<p>However the compiler (Tinymist) is still telling me the layout does not converge in 5 attempts on may laptop, but not on another device. This is kinda weird and I’m not sure is this an issue about Tinymist or Typst. <img src=\"https://forum.typst.app/images/emoji/apple/grin.png?v=12\" title=\":grin:\" class=\"emoji\" alt=\":grin:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "I think the point in this case is that where is `here()` exactly calculated. I'm not sure since I did not read the source code, but I made an alternative `my-location` to make it work:\n\n```typ\n#let my-location = state(\"my-location\", (:))\n\n#let smartbreak(percentage) = (\n  context {\n    if my-location.get().y > page.height * (100% - percentage) {\n      pagebreak()\n    }\n  }\n)\n\n#show heading.where(level: 1, outlined: true): it => {\n  context my-location.update(here().position())\n  smartbreak(50%)\n  it\n}\n```\n\nAnd the outline should be working properly using this impl.\n\nHowever the compiler (Tinymist) is still telling me the layout does not converge in 5 attempts on may laptop, but not on another device. This is kinda weird and I'm not sure is this an issue about Tinymist or Typst. :grin:",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 3,
      "reads": 87,
      "score": 107.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 120
    },
    {
      "id": 5680,
      "post_number": 5,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-15T19:13:23.739Z",
      "updated_at": "2024-11-16T18:03:56.970Z",
      "cooked": "<p>I am very interested why this solution works and the original in the question does not.</p>\n<details>\n<summary>\nWhy doesn't this work?</summary>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#show heading.where(level: 1, outlined: true): it =&gt; {\n  context if here().position().y &gt; page.height * 50% {\n    pagebreak()\n  }\n  it\n}\n</code></pre>\n</details>\n<p>They seem very similar. The only difference is that the original uses <code>it.location()</code> and this one uses <code>here()</code> and a state. I think an explanation of this phenomenon would provide valuable insights about typst’s location handling or probably the state machinery.</p>\n<p>EDIT: or maybe I just don’t understand <code>show</code> rules.</p>",
      "raw": "I am very interested why this solution works and the original in the question does not.\n\n[details=\"Why doesn't this work?\"]\n```typst\n#show heading.where(level: 1, outlined: true): it => {\n  context if here().position().y > page.height * 50% {\n    pagebreak()\n  }\n  it\n}\n```\n[/details]\n\n\nThey seem very similar. The only difference is that the original uses `it.location()` and this one uses `here()` and a state. I think an explanation of this phenomenon would provide valuable insights about typst's location handling or probably the state machinery.\n\nEDIT: or maybe I just don't understand `show` rules.",
      "reply_to_post_number": 4,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 77,
      "score": 35.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 5765,
      "post_number": 6,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-11-18T07:50:15.911Z",
      "updated_at": "2024-11-18T07:50:15.911Z",
      "cooked": "<p>I think you have the correct understanding of show rules. <a class=\"mention\" href=\"/u/sjfhsjfh\">@sjfhsjfh</a> (thanks!) is using an independent state variable and updating it outside the context expression, which is probably why it works. It “forces” the hand of the compiler to get the correct location in between the steps of getting the page height.</p>",
      "raw": "I think you have the correct understanding of show rules. @sjfhsjfh (thanks!) is using an independent state variable and updating it outside the context expression, which is probably why it works. It \"forces\" the hand of the compiler to get the correct location in between the steps of getting the page height.",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 71,
      "score": 29.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 5805,
      "post_number": 7,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-18T18:38:21.219Z",
      "updated_at": "2024-11-18T18:38:21.219Z",
      "cooked": "<p>As the original question is actually solved, but I have still open questions about why it works or rather why not, I opened a new question for this: <a href=\"https://forum.typst.app/t/why-do-i-need-state-for-some-here-some-specific-show-rules/1784\" class=\"inline-onebox\">Why do I need state for some (here some specific) show rules?</a></p>",
      "raw": "As the original question is actually solved, but I have still open questions about why it works or rather why not, I opened a new question for this: https://forum.typst.app/t/why-do-i-need-state-for-some-here-some-specific-show-rules/1784",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 69,
      "score": 28.8,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 5830,
      "post_number": 8,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-19T12:58:49.470Z",
      "updated_at": "2024-11-19T12:59:29.550Z",
      "cooked": "<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let my-location = state(\"my-location\", (:))\n\n#let smartbreak(percentage) = (\n  context {\n    if my-location.get().y &gt; page.height * (100% - percentage) {\n      pagebreak()\n    }\n  }\n)\n\n#show heading.where(level: 1, outlined: true): it =&gt; {\n  context my-location.update(here().position())\n  smartbreak(50%)\n  it\n}\n\n= flora\n#lorem(400)\n\n= fauna\n#lorem(400)\n\n= ergo\n#lorem(400)\n</code></pre>\n<p>This example shows that <a class=\"mention\" href=\"/u/sjfhsjfh\">@sjfhsjfh</a> 's solutions actually doesn’t work. It was just coincidence that it is sufficient for the above example. (the online editor gives me the same warning, layout does not converge.)</p>\n<p><a class=\"mention\" href=\"/u/quachpas\">@quachpas</a> No offense, but this indicates that we both don’t really understand what is going on.</p>",
      "raw": "```typst\n#let my-location = state(\"my-location\", (:))\n\n#let smartbreak(percentage) = (\n  context {\n    if my-location.get().y > page.height * (100% - percentage) {\n      pagebreak()\n    }\n  }\n)\n\n#show heading.where(level: 1, outlined: true): it => {\n  context my-location.update(here().position())\n  smartbreak(50%)\n  it\n}\n\n= flora\n#lorem(400)\n\n= fauna\n#lorem(400)\n\n= ergo\n#lorem(400)\n```\n\nThis example shows that @sjfhsjfh 's solutions actually doesn't work. It was just coincidence that it is sufficient for the above example. (the online editor gives me the same warning, layout does not converge.)\n\n@quachpas No offense, but this indicates that we both don't really understand what is going on.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 68,
      "score": 178.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 5847,
      "post_number": 9,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-19T19:03:07.052Z",
      "updated_at": "2024-11-19T19:33:50.193Z",
      "cooked": "<p><a class=\"mention\" href=\"/u/nasmevka\">@Nasmevka</a> a solution has finally been found <img src=\"https://forum.typst.app/images/emoji/apple/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>Credits go to <a class=\"mention\" href=\"/u/quachpas\">@quachpas</a> and <a class=\"mention\" href=\"/u/jbirnick\">@jbirnick</a></p>\n<p>I would recommend the following commands in your file:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">// threshold can be adjusted\n#let threshold = 50%\n// unique string so that you don't need to worry that other calls to metadata might interfere with this functionality\n#let abc = \"yfadslfkjlafjkwhtoii\"\n\n#show heading: it =&gt; {\n  metadata(abc)\n  context {\n    let m = query(metadata.where(value: abc).before(here())).last()\n    if m.location().position().y &gt; page.height * threshold {\n      pagebreak()\n    }\n  }\n  it\n}\n</code></pre>\n<p>That was a really nice question. Many lessons learned :)</p>",
      "raw": "@Nasmevka a solution has finally been found :slight_smile: \n\nCredits go to @quachpas and @jbirnick\n\nI would recommend the following commands in your file:\n```typst\n// threshold can be adjusted\n#let threshold = 50%\n// unique string so that you don't need to worry that other calls to metadata might interfere with this functionality\n#let abc = \"yfadslfkjlafjkwhtoii\"\n\n#show heading: it => {\n  metadata(abc)\n  context {\n    let m = query(metadata.where(value: abc).before(here())).last()\n    if m.location().position().y > page.height * threshold {\n      pagebreak()\n    }\n  }\n  it\n}\n```\n\nThat was a really nice question. Many lessons learned :)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 3,
      "reads": 63,
      "score": 57.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 5853,
      "post_number": 10,
      "username": "sjfhsjfh",
      "name": "sjfhsjfh",
      "created_at": "2024-11-20T05:15:29.049Z",
      "updated_at": "2024-11-20T05:15:29.049Z",
      "cooked": "<p>It does work, the layout converges but not in 5 attempts. I guess it’s better to have a compile option to specify the maximum attempts. BTW, your solution generates the same warning as the count of heading increases.</p>",
      "raw": "It does work, the layout converges but not in 5 attempts. I guess it's better to have a compile option to specify the maximum attempts. BTW, your solution generates the same warning as the count of heading increases.",
      "reply_to_post_number": 8,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 2,
      "reads": 57,
      "score": 71.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 120
    },
    {
      "id": 5857,
      "post_number": 11,
      "username": "jbirnick",
      "name": "Johann Birnick",
      "created_at": "2024-11-20T06:05:14.095Z",
      "updated_at": "2024-11-20T16:30:17.026Z",
      "cooked": "<p>Yeah good point, the number of iterations that this needs grows linearly with the number of headings. That’s very bad, making it unusable in practice.</p>\n<p>It’s because say in iteration 2 one heading gets fixed. This moves all the content which comes later. So it introduces new bad headings. But those can only be fixed in iteration 3, and moving them introduces new bad headings, which can only be fixed in iteration 4, and so on.</p>\n<p>Unfortunately, I think this problem is <em>unavoidable</em> with the current layout engine. (Because with <code>context</code> you can only ever look at past iterations, never the current iteration, so you can basically only fix one heading per iteration.)</p>\n<p>You can decrease the number of iterations needed by:</p>\n<ul>\n<li>making the threshold closer to 100% (because then less headings need to be fixed) (EDIT: actually this might not be fully accurate)</li>\n<li>having headings on e.g. the highest level <em>always</em> make a <code>pagebreak</code>, so that fixing the lower level headings basically only moves the subsequent content <em>within the current chapter</em> (and then make the chapters not too long)</li>\n</ul>",
      "raw": "Yeah good point, the number of iterations that this needs grows linearly with the number of headings. That's very bad, making it unusable in practice.\n\nIt's because say in iteration 2 one heading gets fixed. This moves all the content which comes later. So it introduces new bad headings. But those can only be fixed in iteration 3, and moving them introduces new bad headings, which can only be fixed in iteration 4, and so on.\n\nUnfortunately, I think this problem is _unavoidable_ with the current layout engine. (Because with `context` you can only ever look at past iterations, never the current iteration, so you can basically only fix one heading per iteration.)\n\nYou can decrease the number of iterations needed by:\n\n- making the threshold closer to 100% (because then less headings need to be fixed) (EDIT: actually this might not be fully accurate)\n- having headings on e.g. the highest level _always_ make a `pagebreak`, so that fixing the lower level headings basically only moves the subsequent content _within the current chapter_ (and then make the chapters not too long)",
      "reply_to_post_number": 10,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 59,
      "score": 41.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 218
    },
    {
      "id": 5858,
      "post_number": 12,
      "username": "jbirnick",
      "name": "Johann Birnick",
      "created_at": "2024-11-20T06:15:14.067Z",
      "updated_at": "2024-11-20T06:15:14.067Z",
      "cooked": "<p>This is a perfect example where a “linear” layout engine (like I think TeX employs it, maybe) that goes through the document from “start to finish” would be desirable. I think your heading thing is easily implementable in TeX with only a single iteration basically. A similar application are counters, a topic that I thought about a lot.</p>\n<p>But Typst layout engine works differently, and also has advantages, as Laurenz was pointing out to me. I hope to understand it at some point and then I can maybe also see if it’s possible to find a solution to such problems.</p>",
      "raw": "This is a perfect example where a \"linear\" layout engine (like I think TeX employs it, maybe) that goes through the document from \"start to finish\" would be desirable. I think your heading thing is easily implementable in TeX with only a single iteration basically. A similar application are counters, a topic that I thought about a lot.\n\nBut Typst layout engine works differently, and also has advantages, as Laurenz was pointing out to me. I hope to understand it at some point and then I can maybe also see if it's possible to find a solution to such problems.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 3,
      "reads": 58,
      "score": 56.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 218
    },
    {
      "id": 5889,
      "post_number": 13,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-20T10:52:30.225Z",
      "updated_at": "2024-11-20T10:52:30.225Z",
      "cooked": "<p>How do you know that it works, but not in 5 attempts? Have you tried it with more attempts? (How do you do that :))</p>\n<p>I’m sorry if my accusation was wrong and your solution actually does work. My reasoning for that is bsed on <a class=\"mention\" href=\"/u/jbirnick\">@jbirnick</a>’s solution from the other topic: <a href=\"https://forum.typst.app/t/why-do-i-need-state-for-some-here-some-specific-show-rules/1784/2\" class=\"inline-onebox\">Why do I need state for some (here some specific) show rules? - #2 by jbirnick</a></p>\n<p>The way I understood it, it made a lot of sense to me. But maybe your solution actually works and (I understood it wrong or <a class=\"mention\" href=\"/u/jbirnick\">@jbirnick</a> is just wrong).</p>\n<p>Would be nice to have that clarified as well, but as it seems to me we’d need a compilation with more than 5 attempts for that.</p>",
      "raw": "How do you know that it works, but not in 5 attempts? Have you tried it with more attempts? (How do you do that :))\n\nI'm sorry if my accusation was wrong and your solution actually does work. My reasoning for that is bsed on @jbirnick's solution from the other topic: https://forum.typst.app/t/why-do-i-need-state-for-some-here-some-specific-show-rules/1784/2\n\nThe way I understood it, it made a lot of sense to me. But maybe your solution actually works and (I understood it wrong or @jbirnick is just wrong).\n\nWould be nice to have that clarified as well, but as it seems to me we'd need a compilation with more than 5 attempts for that.",
      "reply_to_post_number": 10,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 59,
      "score": 21.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 5891,
      "post_number": 14,
      "username": "sjfhsjfh",
      "name": "sjfhsjfh",
      "created_at": "2024-11-20T11:11:11.646Z",
      "updated_at": "2024-11-20T11:11:11.646Z",
      "cooked": "<p>Typst is open-source so you just simply modify the limit and compile a custom one. I’m pretty sure this problem cannot be avoided since the requirement requires multiple iterations to work. Adding a CLI arg would be convenient for such demand.</p>",
      "raw": "Typst is open-source so you just simply modify the limit and compile a custom one. I'm pretty sure this problem cannot be avoided since the requirement requires multiple iterations to work. Adding a CLI arg would be convenient for such demand.",
      "reply_to_post_number": 13,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 59,
      "score": 41.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 120
    },
    {
      "id": 5915,
      "post_number": 15,
      "username": "jbirnick",
      "name": "Johann Birnick",
      "created_at": "2024-11-20T17:09:13.312Z",
      "updated_at": "2024-11-20T17:09:13.312Z",
      "cooked": "<p>If anyone is interested, here is a “natural” document which doesn’t converge in 5 iterations:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">// threshold can be adjusted\n#let threshold = 50%\n// unique string so that you don't need to worry that other calls to metadata might interfere with this functionality\n#let abc = \"yfadslfkjlafjkwhtoii\"\n\n#show heading: it =&gt; {\n  metadata(abc)\n  context {\n    let m = query(metadata.where(value: abc).before(here())).last()\n    if m.location().position().y &gt; page.height * threshold {\n      pagebreak()\n    }\n  }\n  it\n}\n\n#let parlengths = (597, 557, 560, 464, 676, 622, 241, 621, 627, 487, 234, 616, 536)\n\n#for length in parlengths {\n  heading(\"some heading\")\n  lorem(length)\n}\n</code></pre>",
      "raw": "If anyone is interested, here is a \"natural\" document which doesn't converge in 5 iterations:\n\n```typ\n// threshold can be adjusted\n#let threshold = 50%\n// unique string so that you don't need to worry that other calls to metadata might interfere with this functionality\n#let abc = \"yfadslfkjlafjkwhtoii\"\n\n#show heading: it => {\n  metadata(abc)\n  context {\n    let m = query(metadata.where(value: abc).before(here())).last()\n    if m.location().position().y > page.height * threshold {\n      pagebreak()\n    }\n  }\n  it\n}\n\n#let parlengths = (597, 557, 560, 464, 676, 622, 241, 621, 627, 487, 234, 616, 536)\n\n#for length in parlengths {\n  heading(\"some heading\")\n  lorem(length)\n}\n```",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 58,
      "score": 31.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 218
    },
    {
      "id": 5972,
      "post_number": 16,
      "username": "Nasmevka",
      "name": "Thomas Teixeira",
      "created_at": "2024-11-21T16:23:02.152Z",
      "updated_at": "2024-11-21T16:23:02.152Z",
      "cooked": "<p>Thank you everyone for all those insights !<br>\nI’m sad there isn’t a “final” (and by that I mean working with every document) solution but will mark the metadata trick as the solution for now.</p>\n<p>Thanks again !</p>",
      "raw": "Thank you everyone for all those insights !\nI'm sad there isn't a \"final\" (and by that I mean working with every document) solution but will mark the metadata trick as the solution for now.\n\nThanks again !",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 56,
      "score": 31.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 796
    },
    {
      "id": 6005,
      "post_number": 17,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2024-11-23T11:59:59.475Z",
      "updated_at": "2024-11-23T11:59:59.475Z",
      "cooked": "<p>As it doesn’t seem possible (yet) to do that with a conditional <code>pagebreak</code>, I propose a very different solution, whose idea <a href=\"https://gist.github.com/PgBiel/2976c9d0ed5638ef57633ce7233928ea\" rel=\"noopener nofollow ugc\">originally</a> came from <a class=\"mention\" href=\"/u/pgbiel\">@PgBiel</a> as a workaround for when <code>sticky</code> blocks weren’t a thing yet.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show heading: it =&gt; {\n  let threshold = 50%\n  block(breakable: false, height: threshold, spacing: 0pt)\n  v(-threshold)\n  it\n}\n</code></pre>\n<p>The block basically reserves the space that should be available to place the heading in. If that space isn’t available on the current page, it is moved to the next page. The negative vertical spacing then ensures that the block doesn’t actually take up the reserved space.</p>",
      "raw": "As it doesn't seem possible (yet) to do that with a conditional `pagebreak`, I propose a very different solution, whose idea [originally](https://gist.github.com/PgBiel/2976c9d0ed5638ef57633ce7233928ea) came from @PgBiel as a workaround for when `sticky` blocks weren't a thing yet.\n\n```typ\n#show heading: it => {\n  let threshold = 50%\n  block(breakable: false, height: threshold, spacing: 0pt)\n  v(-threshold)\n  it\n}\n```\n\nThe block basically reserves the space that should be available to place the heading in. If that space isn't available on the current page, it is moved to the next page. The negative vertical spacing then ensures that the block doesn't actually take up the reserved space.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 7,
      "reads": 59,
      "score": 161.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 11060,
      "post_number": 18,
      "username": "bluss",
      "name": "Ulrik",
      "created_at": "2025-04-14T08:29:50.013Z",
      "updated_at": "2025-04-14T08:29:50.013Z",
      "cooked": "<p>I asked Eric on discord and he made this updated version (his work, not mine to be clear), which solved a problem I had with the first version of the negative space solution:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show heading: it =&gt; {\n  let threshold = 50%\n  block(breakable: false, height: threshold)\n  v(-threshold, weak: true)\n  it\n}\n</code></pre>\n<p>This works well in my template now, thank you!</p>\n<p>(The observed problem in the previous one: a heading at the start of the page was pushed down. The new version also has the nice property that it seems to leave my document unchanged if the threshold is <code>0cm</code> which is reassuring.</p>\n<p>I thought it was worth sharing the improvement in the same thread.)</p>",
      "raw": "I asked Eric on discord and he made this updated version (his work, not mine to be clear), which solved a problem I had with the first version of the negative space solution:\n\n```typ\n#show heading: it => {\n  let threshold = 50%\n  block(breakable: false, height: threshold)\n  v(-threshold, weak: true)\n  it\n}\n```\n\nThis works well in my template now, thank you!\n\n(The observed problem in the previous one: a heading at the start of the page was pushed down. The new version also has the nice property that it seems to leave my document unchanged if the threshold is `0cm` which is reassuring.\n\nI thought it was worth sharing the improvement in the same thread.)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 3,
      "reads": 42,
      "score": 118.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 1272
    }
  ],
  "scraped_at": "2025-06-10T09:55:03.402445"
}