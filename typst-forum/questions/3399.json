{
  "topic_metadata": {
    "id": 3399,
    "title": "How to create a function that knows how many times it has been called, without returning content value?",
    "slug": "how-to-create-a-function-that-knows-how-many-times-it-has-been-called-without-returning-content-value",
    "posts_count": 3,
    "created_at": "2025-03-25T18:03:37.355Z",
    "last_posted_at": "2025-03-26T05:15:06.137Z",
    "views": 48,
    "like_count": 4,
    "reply_count": 0,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "Andrew",
    "tags": [],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 216
  },
  "posts": [
    {
      "id": 10242,
      "post_number": 1,
      "username": "Pakorn",
      "name": "Pakorn",
      "created_at": "2025-03-25T18:03:37.456Z",
      "updated_at": "2025-03-25T18:03:37.456Z",
      "cooked": "<p>It is like a <code>get</code> method in counter but does not return content. The use case of this is I want to implement a function use along with cetz package in the environment of <code>canvas</code> function. Since <code>canvas</code> only accepts array type, I cannot use <code>context</code> to get my counter values. I can think of two ways: manually update a local variable and make my function to read the value every times it has been called, or create a function that utilize the <code>ctx</code> of cetz context. Both ways are <em>very</em> complex, the first one is tedious to type every time I call that function, the latter requires update the definition of the function if the internal of <code>cetz</code> changes their syntax. How I can do this?</p>",
      "raw": "It is like a `get` method in counter but does not return content. The use case of this is I want to implement a function use along with cetz package in the environment of `canvas` function. Since `canvas` only accepts array type, I cannot use `context` to get my counter values. I can think of two ways: manually update a local variable and make my function to read the value every times it has been called, or create a function that utilize the `ctx` of cetz context. Both ways are *very* complex, the first one is tedious to type every time I call that function, the latter requires update the definition of the function if the internal of `cetz` changes their syntax. How I can do this?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 27,
      "score": 25.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 819
    },
    {
      "id": 10245,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-03-25T18:21:12.623Z",
      "updated_at": "2025-03-25T18:26:36.818Z",
      "cooked": "<p>Sounds very close to what was asked just a few hours ago: <a href=\"https://forum.typst.app/t/how-can-i-save-a-coordinate-in-cetz/3395\" class=\"inline-onebox\">How can I save a coordinate in Cetz?</a>.</p>\n<p>Something like this?</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/cetz:0.3.4\"\n#cetz.canvas({\n  import cetz.draw: *\n  let func(pos) = {\n    set-ctx(ctx =&gt; ctx + (my-func: ctx.at(\"my-func\", default: 0) + 1))\n    circle(pos)\n    get-ctx(ctx =&gt; content(())[#ctx.my-func])\n  }\n  func((0, 0))\n  func((3, 0))\n})\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/7/781a9a0d620a48183e0e7d92e6c58db13997c816.png\" alt=\"image\" data-base62-sha1=\"h8ui0ABZMOaP7u9kAYK6GZwtQCq\" width=\"215\" height=\"104\"></p>",
      "raw": "Sounds very close to what was asked just a few hours ago: https://forum.typst.app/t/how-can-i-save-a-coordinate-in-cetz/3395.\n\nSomething like this?\n\n```typ\n#import \"@preview/cetz:0.3.4\"\n#cetz.canvas({\n  import cetz.draw: *\n  let func(pos) = {\n    set-ctx(ctx => ctx + (my-func: ctx.at(\"my-func\", default: 0) + 1))\n    circle(pos)\n    get-ctx(ctx => content(())[#ctx.my-func])\n  }\n  func((0, 0))\n  func((3, 0))\n})\n```\n\n![image|215x104](upload://h8ui0ABZMOaP7u9kAYK6GZwtQCq.png)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 3,
      "reads": 26,
      "score": 65.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 10256,
      "post_number": 3,
      "username": "Pakorn",
      "name": "Pakorn",
      "created_at": "2025-03-26T05:15:06.137Z",
      "updated_at": "2025-03-26T05:15:06.137Z",
      "cooked": "<p>Ah I see, thatâ€™s how <code>set-ctx</code> interaction works. Thank You.</p>",
      "raw": "Ah I see, that's how `set-ctx` interaction works. Thank You.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 17,
      "score": 18.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 819
    }
  ],
  "scraped_at": "2025-06-10T09:50:00.878400"
}