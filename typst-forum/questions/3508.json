{
  "topic_metadata": {
    "id": 3508,
    "title": "How to repeat a template multiple times?",
    "slug": "how-to-repeat-a-template-multiple-times",
    "posts_count": 6,
    "created_at": "2025-04-03T12:59:42.132Z",
    "last_posted_at": "2025-04-11T23:53:37.025Z",
    "views": 128,
    "like_count": 2,
    "reply_count": 2,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 4,
    "accepted_answer_username": "RogerBW",
    "tags": [
      "layout"
    ],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 902
  },
  "posts": [
    {
      "id": 10594,
      "post_number": 1,
      "username": "RogerBW",
      "name": "RogerBW",
      "created_at": "2025-04-03T12:59:42.441Z",
      "updated_at": "2025-04-12T17:49:16.885Z",
      "cooked": "<p>I’m trying to put together a document containing articles from multiple authors. On each article’s first page, I want to display title and author in a specific formatting style; I also want them to appear in a table of contents,</p>\n<p>Title1 <em>(Author1)</em>…3<br>\nTitle2 <em>(Author2)</em>…5</p>\n<p>etc.</p>\n<p>I think the answer to this is a custom function for each article, that sets title and author variables in such a way that <code>outline</code> can read them, but I’m very new at this and I’m having trouble finding documentation in between the tutorials (jolly good but don’t cover what I’m after) and the reference (almost certainly does cover what I’m after, but I can’t find it).</p>\n<p>Any suggestions on (a) how to do this but also (b) other documentation sources?</p>\n<p>(I am a coder but I’m just starting with typst code. If it matters I’m using the CLI exclusively.)</p>",
      "raw": "I'm trying to put together a document containing articles from multiple authors. On each article's first page, I want to display title and author in a specific formatting style; I also want them to appear in a table of contents,\n\nTitle1 _(Author1)_.....3\nTitle2 _(Author2)_.....5\n\netc.\n\nI think the answer to this is a custom function for each article, that sets title and author variables in such a way that `outline` can read them, but I'm very new at this and I'm having trouble finding documentation in between the tutorials (jolly good but don't cover what I'm after) and the reference (almost certainly does cover what I'm after, but I can't find it).\n\nAny suggestions on (a) how to do this but also (b) other documentation sources?\n\n(I am a coder but I'm just starting with typst code. If it matters I'm using the CLI exclusively.)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 40,
      "score": 138.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1413
    },
    {
      "id": 10595,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-03T13:29:38.693Z",
      "updated_at": "2025-04-03T13:34:55.801Z",
      "cooked": "<p>Hi there. You can look at <a href=\"https://typst.app/universe/package/ijimai\" class=\"inline-onebox\">ijimai – Typst Universe</a>, which is recently an official template for the journal that accepts articles in Typst. But you can’t just use it for each article, because <a href=\"https://github.com/typst/typst/issues/1097\" rel=\"noopener nofollow ugc\">multiple bibliographies are not supported yet</a>. Do you use <code>bibliography()</code>? If not, then I think you can copy the necessary stuff from that template and that’s it.</p>\n<p>The gist of the template function is:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show: doc =&gt; {\n  [above]\n  doc\n  [below]\n}\n</code></pre>\n<p>Do you know how to <a href=\"https://typst.app/docs/tutorial/making-a-template/\">create templates</a>?</p>\n<p>Then you would include the template in each article’s file and merge them with simple <code>include</code>s:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#include \"ijimai1/paper.typ\"\n#include \"ijimai2/paper.typ\"\n</code></pre>\n<p>Then the <code>above</code> and <code>below</code> (with custom content) will show up above and below the article where the template is used.</p>\n<p>Although one problem still, is that if article will use non-unique custom labels, then the main document won’t compile. I guess you can use a custom <code>label()</code> throughout the article that will internally create unique labels, even though it’s not as convenient as using special syntax.</p>\n<p>But if you don’t reference anything in the articles, then there should be no issues at all.</p>\n<p>You can make a function and wrap the whole article in it, but then you won’t be able to compile the article by itself with all the necessary styling. You don’t normally wrap a whole document in a function explicitly.</p>",
      "raw": "Hi there. You can look at https://typst.app/universe/package/ijimai, which is recently an official template for the journal that accepts articles in Typst. But you can't just use it for each article, because [multiple bibliographies are not supported yet](https://github.com/typst/typst/issues/1097). Do you use `bibliography()`? If not, then I think you can copy the necessary stuff from that template and that's it.\n\nThe gist of the template function is:\n\n```typ\n#show: doc => {\n  [above]\n  doc\n  [below]\n}\n```\n\nDo you know how to [create templates](https://typst.app/docs/tutorial/making-a-template/)?\n\nThen you would include the template in each article's file and merge them with simple `include`s:\n\n```typ\n#include \"ijimai1/paper.typ\"\n#include \"ijimai2/paper.typ\"\n```\n\nThen the `above` and `below` (with custom content) will show up above and below the article where the template is used.\n\nAlthough one problem still, is that if article will use non-unique custom labels, then the main document won't compile. I guess you can use a custom `label()` throughout the article that will internally create unique labels, even though it's not as convenient as using special syntax.\n\nBut if you don't reference anything in the articles, then there should be no issues at all.\n\nYou can make a function and wrap the whole article in it, but then you won't be able to compile the article by itself with all the necessary styling. You don't normally wrap a whole document in a function explicitly.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 39,
      "score": 22.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 10860,
      "post_number": 3,
      "username": "RogerBW",
      "name": "RogerBW",
      "created_at": "2025-04-09T17:29:45.749Z",
      "updated_at": "2025-04-09T17:29:45.749Z",
      "cooked": "<p>Thanks for this, which has got me a lot further. The article-level template is working well. But my original question, which may have got lost in the other things I didn’t understand, was about generating the ToC. The IJIMAI code doesn’t seem to include the material for creating a whole issue of the journal with multiple papers, or I’ve failed to spot it.</p>\n<p>To put it another way, I want to say somewhere in the article file:</p>\n<p>title = “title one”<br>\nauthor = “author one”</p>\n<p>(in whatever format is needed, with a conf file, that’s all flexible), and then build an <code>outline()</code> that will look for all those definitions and produce a ToC that looks like</p>\n<p>title one <em>(author one)</em>…3<br>\ntitle two <em>(author two)</em>…5</p>\n<p>etc.</p>\n<p>In other words, I <em>think</em>, I need to define an element that is locatable so that <code>outline()</code> can find it, but not displayed. Or maybe I’m completely on the wrong track there.</p>",
      "raw": "Thanks for this, which has got me a lot further. The article-level template is working well. But my original question, which may have got lost in the other things I didn't understand, was about generating the ToC. The IJIMAI code doesn't seem to include the material for creating a whole issue of the journal with multiple papers, or I've failed to spot it.\n\nTo put it another way, I want to say somewhere in the article file:\n\ntitle = \"title one\"\nauthor = \"author one\"\n\n(in whatever format is needed, with a conf file, that's all flexible), and then build an `outline()` that will look for all those definitions and produce a ToC that looks like\n\ntitle one _(author one)_.....3\ntitle two _(author two)_.....5\n\netc.\n\nIn other words, I _think_, I need to define an element that is locatable so that `outline()` can find it, but not displayed. Or maybe I'm completely on the wrong track there.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 9.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1413
    },
    {
      "id": 10869,
      "post_number": 4,
      "username": "RogerBW",
      "name": "RogerBW",
      "created_at": "2025-04-10T10:28:28.494Z",
      "updated_at": "2025-04-10T10:28:28.494Z",
      "cooked": "<p>And I’ve now resolved that thanks to the <a href=\"https://sitandr.github.io/typst-examples-book/book/typstonomicon/chapters.html\" rel=\"noopener nofollow ugc\">Typst Examples book</a>.</p>",
      "raw": "And I've now resolved that thanks to the [Typst Examples book](https://sitandr.github.io/typst-examples-book/book/typstonomicon/chapters.html).",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 19,
      "score": 3.8,
      "accepted_answer": true,
      "trust_level": 1,
      "user_id": 1413
    },
    {
      "id": 10916,
      "post_number": 5,
      "username": "RogerBW",
      "name": "RogerBW",
      "created_at": "2025-04-10T20:13:28.130Z",
      "updated_at": "2025-04-10T20:13:28.130Z",
      "cooked": "<p>An alternative approach which makes the PDF “Bookmarks” work too is to sacrifice the level-1 heading to the article title.</p>\n<p>The article template runs something like:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let article(title: \"\", subtitle: \"\", author: \"\", doc) = {\n  set page(columns: 2)\n  show heading: it =&gt; [\n    #block(sticky: true, \n      if it.level == 1 {\n      } else if it.level == 2 {\n        text(16.1pt, weight: \"bold\", font: \"Myriad Pro\")[\n          #it.body\n        ]\n      } // etc. for level 3 and 4\n    )\n  ]\n  heading(\n    level: 1,\n    emph(title) + \" (\" + author + \")\",\n  )\n  place(\n    top + left,\n    scope: \"parent\",\n    float: true,\n    text(18.2pt, weight: \"bold\", font: \"Myriad Pro\")[\n      #title\n    ],\n  )\n  if subtitle.len() &gt; 0 {\n    // place the subtitle similarly, elided boring code\n  }\n  place(\n    top + left,\n    scope: \"parent\",\n    float: true,\n    text()[\n      #author\n    ]\n  )\n  doc\n}\n</code></pre>\n<p>and the top of the article runs:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"article_template.typst\": article\n#show: doc =&gt; article(\n  title: \"Title\",\n  author: \"Author Name\",\n  doc\n)\n</code></pre>\n<p>and headers used <em>within</em> the article must start at level-2. The <code>outline</code> is restricted to <code>depth: 1</code>, though it needn’t be.</p>",
      "raw": "An alternative approach which makes the PDF \"Bookmarks\" work too is to sacrifice the level-1 heading to the article title.\n\nThe article template runs something like:\n\n```typ\n#let article(title: \"\", subtitle: \"\", author: \"\", doc) = {\n  set page(columns: 2)\n  show heading: it => [\n    #block(sticky: true, \n      if it.level == 1 {\n      } else if it.level == 2 {\n        text(16.1pt, weight: \"bold\", font: \"Myriad Pro\")[\n          #it.body\n        ]\n      } // etc. for level 3 and 4\n    )\n  ]\n  heading(\n    level: 1,\n    emph(title) + \" (\" + author + \")\",\n  )\n  place(\n    top + left,\n    scope: \"parent\",\n    float: true,\n    text(18.2pt, weight: \"bold\", font: \"Myriad Pro\")[\n      #title\n    ],\n  )\n  if subtitle.len() > 0 {\n    // place the subtitle similarly, elided boring code\n  }\n  place(\n    top + left,\n    scope: \"parent\",\n    float: true,\n    text()[\n      #author\n    ]\n  )\n  doc\n}\n```\n\nand the top of the article runs:\n\n```typ\n#import \"article_template.typst\": article\n#show: doc => article(\n  title: \"Title\",\n  author: \"Author Name\",\n  doc\n)\n```\n\nand headers used _within_ the article must start at level-2. The `outline` is restricted to `depth: 1`, though it needn't be.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 20,
      "score": 9.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1413
    },
    {
      "id": 10954,
      "post_number": 6,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-11T23:53:37.025Z",
      "updated_at": "2025-04-11T23:53:37.025Z",
      "cooked": "<p>You can make it simpler:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let article(doc, title: \"\", subtitle: \"\", author: \"\") = {\n  set page(columns: 2)\n  set heading(offset: 1)\n  show heading: set text(16.1pt, weight: \"bold\", font: \"Myriad Pro\")\n  show heading.where(level: 1): none\n  let bold = text.with(weight: \"bold\", font: \"Myriad Pro\")\n  let place = place.with(top, scope: \"parent\", float: true)\n  heading(level: 1, emph(title) + \" (\" + author + \")\")\n  place(bold(18.2pt, title))\n  if subtitle.len() &gt; 0 { place(bold(17.15pt, subtitle)) }\n  place(author)\n  doc\n}\n\n#outline(target: heading.where(level: 1), title: \"Articles\")\n\n#[\n  #show: article.with(title: \"title one\", author: \"author one\")\n\n  = Section 1\n  == Subsection 1\n  = Section 2\n]\n\n#[\n  #show: article.with(title: \"title two\", subtitle: \"Subtitle\", author: \"author two\")\n\n  = Section 1\n  == Subsection 1\n  = Section 2\n]\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/8/8c6631bd74087f7c303e572e50b6f66dfb9b3fb2.png\" alt=\"image\" data-base62-sha1=\"k21Nml9S3PwtrPJrsYElMSJkz50\" width=\"589\" height=\"79\"></p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/4/43c419259dc76658a348156bdc6462acdb4f6dc0.png\" alt=\"image\" data-base62-sha1=\"9Fu8020FCvkPiTVLqEuVUar3CGA\" width=\"143\" height=\"201\"> <img src=\"https://forum.typst.app/uploads/default/original/2X/7/7d4bd85e3da4b64632fb15b745e3714b23a3dc6a.png\" alt=\"image\" data-base62-sha1=\"hSqbfc1urqYBsF9NlOLcQlRCrLs\" width=\"141\" height=\"232\"></p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/8/89df16234e996a01a33d62987796e3378baec5fe.png\" alt=\"image\" data-base62-sha1=\"jFFnbK2I9TqBCFHQsIUqB1aHOs6\" width=\"213\" height=\"155\"></p>",
      "raw": "You can make it simpler:\n\n```typ\n#let article(doc, title: \"\", subtitle: \"\", author: \"\") = {\n  set page(columns: 2)\n  set heading(offset: 1)\n  show heading: set text(16.1pt, weight: \"bold\", font: \"Myriad Pro\")\n  show heading.where(level: 1): none\n  let bold = text.with(weight: \"bold\", font: \"Myriad Pro\")\n  let place = place.with(top, scope: \"parent\", float: true)\n  heading(level: 1, emph(title) + \" (\" + author + \")\")\n  place(bold(18.2pt, title))\n  if subtitle.len() > 0 { place(bold(17.15pt, subtitle)) }\n  place(author)\n  doc\n}\n\n#outline(target: heading.where(level: 1), title: \"Articles\")\n\n#[\n  #show: article.with(title: \"title one\", author: \"author one\")\n\n  = Section 1\n  == Subsection 1\n  = Section 2\n]\n\n#[\n  #show: article.with(title: \"title two\", subtitle: \"Subtitle\", author: \"author two\")\n\n  = Section 1\n  == Subsection 1\n  = Section 2\n]\n```\n\n![image|589x79](upload://k21Nml9S3PwtrPJrsYElMSJkz50.png)\n\n![image|143x201](upload://9Fu8020FCvkPiTVLqEuVUar3CGA.png) ![image|141x232](upload://hSqbfc1urqYBsF9NlOLcQlRCrLs.png)\n\n![image|213x155](upload://jFFnbK2I9TqBCFHQsIUqB1aHOs6.png)",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 12,
      "score": 17.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    }
  ],
  "scraped_at": "2025-06-10T09:49:42.701906"
}