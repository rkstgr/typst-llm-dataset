{
  "topic_metadata": {
    "id": 1694,
    "title": "How to fully control visualization of a glossary in glossarium?",
    "slug": "how-to-fully-control-visualization-of-a-glossary-in-glossarium",
    "posts_count": 8,
    "created_at": "2024-11-12T20:19:56.020Z",
    "last_posted_at": "2024-11-19T13:32:43.134Z",
    "views": 269,
    "like_count": 4,
    "reply_count": 6,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "quachpas",
    "tags": [
      "glossarium"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 1023
  },
  "posts": [
    {
      "id": 5555,
      "post_number": 1,
      "username": "AhmedSalih",
      "name": "",
      "created_at": "2024-11-12T20:19:56.180Z",
      "updated_at": "2024-11-22T10:59:46.077Z",
      "cooked": "<p>Hello!</p>\n<p>I am using the package glossarium to define a nomenclature. I need to define other “glossaries” later, such as “acronyms”, but for now what I have is:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#import \"@preview/unify:0.6.0\": unit\n#import \"@preview/glossarium:0.5.1\": make-glossary, register-glossary, print-glossary, gls, glspl\n#show link: set text(fill: rgb(160,20,40))\n#show: make-glossary\n\n#let entry-list = (\n  // Physics Variables (Group A)\n  (\n    key: \"g\",\n    short: $g$,\n    long: \"Gravitational Constant\",\n    description: unit(\"meter per second squared\"),\n    group: \"Physics Variables\",\n  ),\n  (\n    key: \"H\",\n    short: $H$,\n    long: \"Wave height\",\n    description: unit(\"meter\"),\n    group: \"Physics Variables\",\n  ),\n  (\n    key: \"D\",\n    short: $D$,\n    long: \"Water depth\",\n    description: unit(\"meter\"),\n    group: \"Physics Variables\",\n  ),\n  (\n    key: \"lambda\",\n    short: $λ$,\n    long: \"Wave length\",\n    description: unit(\"meter\"),\n    group: \"Physics Variables\",\n  ),\n  (\n    key: \"T\",\n    short: $T$,\n    long: \"Period\",\n    description: unit(\"second\"),\n    group: \"Physics Variables\",\n  ),\n\n  // SPH Variables (Group B)\n  (\n    key: \"delta-p\",\n    short: $Δ p$,\n    long: \"Initial particle distance. Also denoted as Dp or dp\",\n    description: unit(\"meter\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"h\",\n    short: $h$,\n    long: \"Smoothing length\",\n    description: unit(\"meter\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"c\",\n    short: $c$,\n    long: \"Speed of sound\",\n    description: unit(\"meter per second\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"V\",\n    short: $V$,\n    long: \"Volume\",\n    description: unit(\"meter cubed\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"rho\",\n    short: $ρ$,\n    long: \"Density\",\n    description: unit(\"kg/m^3\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"p\",\n    short: $p$,\n    long: \"Pressure\",\n    description: unit(\"Pa\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"m\",\n    short: $m$,\n    long: \"Mass\",\n    description: unit(\"kg\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"u\",\n    short: $bold(u)$,\n    long: \"Velocity\",\n    description: unit(\"m/s\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"x\",\n    short: $bold(x)$,\n    long: \"Position\",\n    description: unit(\"meter\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"gamma\",\n    short: $Γ$,\n    long: \"Dissipation\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"omega\",\n    short: $Ω$,\n    long: \"Domain\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"domega-xi\",\n    short: $d Ω_x_i$,\n    long: \"Volume of particle i at position \" + $bold(x)_i$,\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"omega-V\",\n    short: $∂Ω_V$,\n    long: \"Volume of support domain\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"omega-S\",\n    short: $∂Ω_S$,\n    long: \"Surface of support domain\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"W\",\n    short: $W$,\n    long: \"Smoothing Kernel\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"A\",\n    short: $A$,\n    long: \"Arbitrary property for SPH estimation\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"gamma-adiabatic\",\n    short: $γ$,\n    long: \"Adiabatic Index\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"Pi\",\n    short: $Π$,\n    long: \"Modeled Viscosity\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"epsilon\",\n    short: $ε$,\n    long: \"Numerical constant used in artificial viscosity to avoid dividing by zero\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"kappa\",\n    short: $κ$,\n    long: \"Scaling constant used to determine size of smoothing kernel radius\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"L2-norm\",\n    short: $||bold(x)_i - bold(x)_j||$,\n    long: [L#super[2]-norm],\n    description: [],\n    group: \"SPH Variables\",\n  ),\n)\n#register-glossary(entry-list)\n// Your document body\n#print-glossary(\n  show-all: true,\n entry-list\n)\n</code></pre>\n<p>It generates:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/2/2080f6b154ea6bc7cb5c93026253ebbd949216ca.png\" data-download-href=\"https://forum.typst.app/uploads/default/2080f6b154ea6bc7cb5c93026253ebbd949216ca\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/2/2080f6b154ea6bc7cb5c93026253ebbd949216ca_2_413x499.png\" alt=\"image\" data-base62-sha1=\"4DxA6GT0V8JweIqgRemsPe6iZFo\" width=\"413\" height=\"499\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/2/2080f6b154ea6bc7cb5c93026253ebbd949216ca_2_413x499.png, https://forum.typst.app/uploads/default/original/2X/2/2080f6b154ea6bc7cb5c93026253ebbd949216ca.png 1.5x, https://forum.typst.app/uploads/default/original/2X/2/2080f6b154ea6bc7cb5c93026253ebbd949216ca.png 2x\" data-dominant-color=\"F7F7F7\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">614×743 37 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>But I need it to generate  this:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/5/51ec2ba794c7d7c0a401c7d2a9a2e45f2cf5fc2e.png\" data-download-href=\"https://forum.typst.app/uploads/default/51ec2ba794c7d7c0a401c7d2a9a2e45f2cf5fc2e\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/5/51ec2ba794c7d7c0a401c7d2a9a2e45f2cf5fc2e_2_376x500.png\" alt=\"image\" data-base62-sha1=\"bGIFqgK3Cojby0STnOoGZfhwDWm\" width=\"376\" height=\"500\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/5/51ec2ba794c7d7c0a401c7d2a9a2e45f2cf5fc2e_2_376x500.png, https://forum.typst.app/uploads/default/original/2X/5/51ec2ba794c7d7c0a401c7d2a9a2e45f2cf5fc2e.png 1.5x, https://forum.typst.app/uploads/default/original/2X/5/51ec2ba794c7d7c0a401c7d2a9a2e45f2cf5fc2e.png 2x\" data-dominant-color=\"FBFBFB\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">534×709 55.2 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>So basically I need to:</p>\n<ul>\n<li>Remove bold description text</li>\n<li>Set units to the right</li>\n<li>Sort entries such that entries with units go to the top for a neater look</li>\n</ul>\n<p>I think this should be possible, I am just very uncertain on how to overload show in this case</p>\n<p>Kind regards</p>",
      "raw": "Hello!\n\nI am using the package glossarium to define a nomenclature. I need to define other \"glossaries\" later, such as \"acronyms\", but for now what I have is:\n\n```typst\n#import \"@preview/unify:0.6.0\": unit\n#import \"@preview/glossarium:0.5.1\": make-glossary, register-glossary, print-glossary, gls, glspl\n#show link: set text(fill: rgb(160,20,40))\n#show: make-glossary\n\n#let entry-list = (\n  // Physics Variables (Group A)\n  (\n    key: \"g\",\n    short: $g$,\n    long: \"Gravitational Constant\",\n    description: unit(\"meter per second squared\"),\n    group: \"Physics Variables\",\n  ),\n  (\n    key: \"H\",\n    short: $H$,\n    long: \"Wave height\",\n    description: unit(\"meter\"),\n    group: \"Physics Variables\",\n  ),\n  (\n    key: \"D\",\n    short: $D$,\n    long: \"Water depth\",\n    description: unit(\"meter\"),\n    group: \"Physics Variables\",\n  ),\n  (\n    key: \"lambda\",\n    short: $λ$,\n    long: \"Wave length\",\n    description: unit(\"meter\"),\n    group: \"Physics Variables\",\n  ),\n  (\n    key: \"T\",\n    short: $T$,\n    long: \"Period\",\n    description: unit(\"second\"),\n    group: \"Physics Variables\",\n  ),\n\n  // SPH Variables (Group B)\n  (\n    key: \"delta-p\",\n    short: $Δ p$,\n    long: \"Initial particle distance. Also denoted as Dp or dp\",\n    description: unit(\"meter\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"h\",\n    short: $h$,\n    long: \"Smoothing length\",\n    description: unit(\"meter\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"c\",\n    short: $c$,\n    long: \"Speed of sound\",\n    description: unit(\"meter per second\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"V\",\n    short: $V$,\n    long: \"Volume\",\n    description: unit(\"meter cubed\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"rho\",\n    short: $ρ$,\n    long: \"Density\",\n    description: unit(\"kg/m^3\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"p\",\n    short: $p$,\n    long: \"Pressure\",\n    description: unit(\"Pa\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"m\",\n    short: $m$,\n    long: \"Mass\",\n    description: unit(\"kg\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"u\",\n    short: $bold(u)$,\n    long: \"Velocity\",\n    description: unit(\"m/s\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"x\",\n    short: $bold(x)$,\n    long: \"Position\",\n    description: unit(\"meter\"),\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"gamma\",\n    short: $Γ$,\n    long: \"Dissipation\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"omega\",\n    short: $Ω$,\n    long: \"Domain\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"domega-xi\",\n    short: $d Ω_x_i$,\n    long: \"Volume of particle i at position \" + $bold(x)_i$,\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"omega-V\",\n    short: $∂Ω_V$,\n    long: \"Volume of support domain\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"omega-S\",\n    short: $∂Ω_S$,\n    long: \"Surface of support domain\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"W\",\n    short: $W$,\n    long: \"Smoothing Kernel\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"A\",\n    short: $A$,\n    long: \"Arbitrary property for SPH estimation\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"gamma-adiabatic\",\n    short: $γ$,\n    long: \"Adiabatic Index\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"Pi\",\n    short: $Π$,\n    long: \"Modeled Viscosity\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"epsilon\",\n    short: $ε$,\n    long: \"Numerical constant used in artificial viscosity to avoid dividing by zero\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"kappa\",\n    short: $κ$,\n    long: \"Scaling constant used to determine size of smoothing kernel radius\",\n    description: [],\n    group: \"SPH Variables\",\n  ),\n  (\n    key: \"L2-norm\",\n    short: $||bold(x)_i - bold(x)_j||$,\n    long: [L#super[2]-norm],\n    description: [],\n    group: \"SPH Variables\",\n  ),\n)\n#register-glossary(entry-list)\n// Your document body\n#print-glossary(\n  show-all: true,\n entry-list\n)\n```\n\nIt generates:\n\n![image|413x499](upload://4DxA6GT0V8JweIqgRemsPe6iZFo.png)\n\nBut I need it to generate  this:\n\n![image|376x500](upload://bGIFqgK3Cojby0STnOoGZfhwDWm.png)\n\nSo basically I need to:\n\n* Remove bold description text\n* Set units to the right\n* Sort entries such that entries with units go to the top for a neater look\n\nI think this should be possible, I am just very uncertain on how to overload show in this case\n\nKind regards",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 39,
      "score": 1057.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 786
    },
    {
      "id": 5575,
      "post_number": 2,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-11-13T09:33:58.331Z",
      "updated_at": "2024-11-13T09:34:39.592Z",
      "cooked": "<p>Hello <a class=\"mention\" href=\"/u/ahmedsalih\">@AhmedSalih</a>,<br>\nthis would require many changes in the print-glossary arguments. I suggest to look at <code>user-print-glossary</code> to make it return a table instead!<br>\nA good start would be the following</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#print-glossary(\n  show-all: true,\n  user-print-glossary: (entries, groups, ..) =&gt; {\n    table(\n      columns: 3,\n      stroke: 0pt,\n      ..for group in groups {\n        (\n          table.cell(group, colspan: 3),\n          ..for entry in entries.filter(x =&gt; x.group == group) {\n            (\n              entry.short,\n              entry.long,\n              entry.description\n            )\n          }\n        )\n      }\n    )\n  },\n  entry-list\n)\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/d/d358ac2fe607e6d85acd96d1de376203ee466afc.png\" data-download-href=\"https://forum.typst.app/uploads/default/d358ac2fe607e6d85acd96d1de376203ee466afc\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/d/d358ac2fe607e6d85acd96d1de376203ee466afc_2_430x499.png\" alt=\"image\" data-base62-sha1=\"u9EJ2szSfq3jP3Oz7s0AWR9EgmU\" width=\"430\" height=\"499\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/d/d358ac2fe607e6d85acd96d1de376203ee466afc_2_430x499.png, https://forum.typst.app/uploads/default/optimized/2X/d/d358ac2fe607e6d85acd96d1de376203ee466afc_2_645x748.png 1.5x, https://forum.typst.app/uploads/default/original/2X/d/d358ac2fe607e6d85acd96d1de376203ee466afc.png 2x\" data-dominant-color=\"F9F9F9\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">693×804 90.5 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>Afterwards, depending on whether you need other features of glossarium, you would need to recover them in some way.</p>",
      "raw": "Hello @AhmedSalih,\nthis would require many changes in the print-glossary arguments. I suggest to look at `user-print-glossary` to make it return a table instead! \nA good start would be the following\n```typ\n#print-glossary(\n  show-all: true,\n  user-print-glossary: (entries, groups, ..) => {\n    table(\n      columns: 3,\n      stroke: 0pt,\n      ..for group in groups {\n        (\n          table.cell(group, colspan: 3),\n          ..for entry in entries.filter(x => x.group == group) {\n            (\n              entry.short,\n              entry.long,\n              entry.description\n            )\n          }\n        )\n      }\n    )\n  },\n  entry-list\n)\n```\n![image|430x499](upload://u9EJ2szSfq3jP3Oz7s0AWR9EgmU.png)\n\nAfterwards, depending on whether you need other features of glossarium, you would need to recover them in some way.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 33,
      "score": 46.6,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 5590,
      "post_number": 3,
      "username": "AhmedSalih",
      "name": "",
      "created_at": "2024-11-13T16:39:18.392Z",
      "updated_at": "2024-11-13T16:39:18.392Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"quachpas\" data-post=\"2\" data-topic=\"1694\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/q/662200/48.png\" class=\"avatar\"> quachpas:</div>\n<blockquote>\n<pre><code class=\"lang-auto\">#print-glossary(\n  show-all: true,\n  user-print-glossary: (entries, groups, ..) =&gt; {\n    table(\n      columns: 3,\n      stroke: 0pt,\n      ..for group in groups {\n        (\n          table.cell(group, colspan: 3),\n          ..for entry in entries.filter(x =&gt; x.group == group) {\n            (\n              entry.short,\n              entry.long,\n              entry.description\n            )\n          }\n        )\n      }\n    )\n  },\n  entry-list\n)\n</code></pre>\n</blockquote>\n</aside>\n<p>Thank you so much! I did not know it was so easy, I could not find that kind of example in the library. I am so happy right now, <code>typst</code>, has so much potential, so much opportunity in simplicity!</p>\n<p>I will try to modify it to match my needs exactly, but already so close.</p>\n<p>Kind regards</p>",
      "raw": "[quote=\"quachpas, post:2, topic:1694\"]\n```\n#print-glossary(\n  show-all: true,\n  user-print-glossary: (entries, groups, ..) => {\n    table(\n      columns: 3,\n      stroke: 0pt,\n      ..for group in groups {\n        (\n          table.cell(group, colspan: 3),\n          ..for entry in entries.filter(x => x.group == group) {\n            (\n              entry.short,\n              entry.long,\n              entry.description\n            )\n          }\n        )\n      }\n    )\n  },\n  entry-list\n)\n```\n[/quote]\n\nThank you so much! I did not know it was so easy, I could not find that kind of example in the library. I am so happy right now, `typst`, has so much potential, so much opportunity in simplicity!\n\nI will try to modify it to match my needs exactly, but already so close.\n\nKind regards",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 1,
      "reads": 25,
      "score": 35.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 786
    },
    {
      "id": 5623,
      "post_number": 4,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-11-14T08:41:23.607Z",
      "updated_at": "2024-11-14T08:41:23.607Z",
      "cooked": "<p>You can also take a look at other packages. Searching for <a href=\"https://typst.app/universe/search?q=acro\">acro</a>, or <a href=\"https://typst.app/universe/search?q=glo\">glo</a> should give you some good results.</p>",
      "raw": "You can also take a look at other packages. Searching for [acro](https://typst.app/universe/search?q=acro), or [glo](https://typst.app/universe/search?q=glo) should give you some good results.",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 21,
      "score": 9.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 5826,
      "post_number": 5,
      "username": "Vojtech_Liska",
      "name": "Vojtěch Liška",
      "created_at": "2024-11-19T11:10:07.709Z",
      "updated_at": "2024-11-19T11:10:07.709Z",
      "cooked": "<p>Hello, I tried just copy pasting this into typst.<br>\nWhen I try <span class=\"hashtag-raw\">#gls</span>(“g”) i gen an error.</p>\n<p>What do I do wrong?</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/e/e68f5f7e45e7ed5f2edb4451eb0f5b9f31f4a006.png\" data-download-href=\"https://forum.typst.app/uploads/default/e68f5f7e45e7ed5f2edb4451eb0f5b9f31f4a006\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/e/e68f5f7e45e7ed5f2edb4451eb0f5b9f31f4a006_2_690x266.png\" alt=\"image\" data-base62-sha1=\"wTCZAWPLK0UMq9UdEqeOkXYWpp4\" width=\"690\" height=\"266\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/e/e68f5f7e45e7ed5f2edb4451eb0f5b9f31f4a006_2_690x266.png, https://forum.typst.app/uploads/default/original/2X/e/e68f5f7e45e7ed5f2edb4451eb0f5b9f31f4a006.png 1.5x, https://forum.typst.app/uploads/default/original/2X/e/e68f5f7e45e7ed5f2edb4451eb0f5b9f31f4a006.png 2x\" data-dominant-color=\"24242D\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">878×339 54.2 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "Hello, I tried just copy pasting this into typst.\nWhen I try #gls(\"g\") i gen an error.\n\nWhat do I do wrong?\n\n![image|690x266](upload://wTCZAWPLK0UMq9UdEqeOkXYWpp4.png)",
      "reply_to_post_number": 4,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 19,
      "score": 8.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 824
    },
    {
      "id": 5832,
      "post_number": 6,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-11-19T13:11:33.656Z",
      "updated_at": "2024-11-19T13:11:33.656Z",
      "cooked": "<p>Hello, can you show your entire code please?</p>",
      "raw": "Hello, can you show your entire code please?",
      "reply_to_post_number": 5,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 19,
      "score": 8.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 5833,
      "post_number": 7,
      "username": "Vojtech_Liska",
      "name": "Vojtěch Liška",
      "created_at": "2024-11-19T13:26:15.014Z",
      "updated_at": "2024-11-19T13:26:15.014Z",
      "cooked": "<p>This should be minimum working example</p>\n<pre><code class=\"lang-auto\">#import \"@preview/unify:0.6.0\": unit\n#import \"@preview/glossarium:0.5.1\": make-glossary, register-glossary, print-glossary, gls, glspl\n#show link: set text(fill: rgb(160,20,40))\n#show: make-glossary\n\n#let entry-list = (\n  // Physics Variables (Group A)\n  (\n    key: \"g\",\n    short: $g$,\n    long: \"Gravitational Constant\",\n    description: unit(\"meter per second squared\"),\n    group: \"Physics Variables\",\n  ),\n\n)\n#register-glossary(entry-list)\n// Your document \n\n#gls(\"g\")\n\n#print-glossary(\n  show-all: true,\n  user-print-glossary: (entries, groups, ..) =&gt; {\n    table(\n      columns: 3,\n      stroke: 0pt,\n      ..for group in groups {\n        (\n          table.cell(group, colspan: 3),\n          ..for entry in entries.filter(x =&gt; x.group == group) {\n            (\n              entry.short,\n              entry.long,\n              entry.description\n            )\n          }\n        )\n      }\n    )\n  },\n  entry-list\n)\n</code></pre>",
      "raw": "This should be minimum working example\n\n```\n#import \"@preview/unify:0.6.0\": unit\n#import \"@preview/glossarium:0.5.1\": make-glossary, register-glossary, print-glossary, gls, glspl\n#show link: set text(fill: rgb(160,20,40))\n#show: make-glossary\n\n#let entry-list = (\n  // Physics Variables (Group A)\n  (\n    key: \"g\",\n    short: $g$,\n    long: \"Gravitational Constant\",\n    description: unit(\"meter per second squared\"),\n    group: \"Physics Variables\",\n  ),\n\n)\n#register-glossary(entry-list)\n// Your document \n\n#gls(\"g\")\n\n#print-glossary(\n  show-all: true,\n  user-print-glossary: (entries, groups, ..) => {\n    table(\n      columns: 3,\n      stroke: 0pt,\n      ..for group in groups {\n        (\n          table.cell(group, colspan: 3),\n          ..for entry in entries.filter(x => x.group == group) {\n            (\n              entry.short,\n              entry.long,\n              entry.description\n            )\n          }\n        )\n      }\n    )\n  },\n  entry-list\n)\n```",
      "reply_to_post_number": 6,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 18,
      "score": 68.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 824
    },
    {
      "id": 5834,
      "post_number": 8,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-11-19T13:32:43.134Z",
      "updated_at": "2024-11-19T13:34:13.998Z",
      "cooked": "<p>Ah yes. That’s the thing with what I showed earlier. You have to implement the features of glossarium. The original function to print the glossary is a bit more complex.</p>\n<p>try with</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#print-glossary(\n  show-all: true,\n  user-print-glossary: (entries, groups, ..) =&gt; {\n    table(\n      columns: 3,\n      stroke: 0pt,\n      ..for group in groups {\n        (\n          table.cell(group, colspan: 3),\n          ..for entry in entries.filter(x =&gt; x.group == group) {\n            (\n              entry.short,\n              entry.long,\n              [\n                #figure(\n                  kind: \"glossarium_figure\", \n                  supplement: \"\",\n                  caption: entry.description,\n                )[]\n                #label(entry.key)\n                #figure(\n                  kind: \"glossarium_figure\", \n                  supplement: \"\",\n                )[]\n                #label(entry.key + \":pl\")\n              ]\n            )\n          }\n        )\n      }\n    )\n  },\n  entry-list\n)\n</code></pre>\n<p>instead</p>\n<p>There’s no “easy way” as of now to fully control the glossary. It’s a work in progress, however.</p>",
      "raw": "Ah yes. That's the thing with what I showed earlier. You have to implement the features of glossarium. The original function to print the glossary is a bit more complex.\n\ntry with\n```typ\n#print-glossary(\n  show-all: true,\n  user-print-glossary: (entries, groups, ..) => {\n    table(\n      columns: 3,\n      stroke: 0pt,\n      ..for group in groups {\n        (\n          table.cell(group, colspan: 3),\n          ..for entry in entries.filter(x => x.group == group) {\n            (\n              entry.short,\n              entry.long,\n              [\n                #figure(\n                  kind: \"glossarium_figure\", \n                  supplement: \"\",\n                  caption: entry.description,\n                )[]\n                #label(entry.key)\n                #figure(\n                  kind: \"glossarium_figure\", \n                  supplement: \"\",\n                )[]\n                #label(entry.key + \":pl\")\n              ]\n            )\n          }\n        )\n      }\n    )\n  },\n  entry-list\n)\n```\ninstead\n\nThere's no \"easy way\" as of now to fully control the glossary. It's a work in progress, however.",
      "reply_to_post_number": 7,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 18,
      "score": 18.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 258
    }
  ],
  "scraped_at": "2025-06-10T09:55:02.641737"
}