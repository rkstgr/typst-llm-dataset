{
  "topic_metadata": {
    "id": 775,
    "title": "How to create invisible label?",
    "slug": "how-to-create-invisible-label",
    "posts_count": 9,
    "created_at": "2024-09-28T17:02:56.703Z",
    "last_posted_at": "2024-09-29T18:17:21.519Z",
    "views": 259,
    "like_count": 5,
    "reply_count": 6,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 3,
    "accepted_answer_username": "Andrew",
    "tags": [
      "layout"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 625
  },
  "posts": [
    {
      "id": 2878,
      "post_number": 1,
      "username": "gabe",
      "name": "",
      "created_at": "2024-09-28T17:02:56.851Z",
      "updated_at": "2024-09-28T17:02:56.851Z",
      "cooked": "<p>I want to return a label from a function that doesn’t affect the page layout. I can’t just return the label directly since this causes a <code>cannot join content with label</code> error. How can I do this?</p>",
      "raw": "I want to return a label from a function that doesn't affect the page layout. I can't just return the label directly since this causes a `cannot join content with label` error. How can I do this?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 43,
      "score": 948.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 433
    },
    {
      "id": 2880,
      "post_number": 2,
      "username": "gabe",
      "name": "",
      "created_at": "2024-09-28T17:07:07.733Z",
      "updated_at": "2024-09-28T17:07:07.733Z",
      "cooked": "<p>A solution I found is to attach the label to a metadata block.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">[\n  #metadata(\"anything can go here\")\n  #label(identifier)\n]\n</code></pre>\n<p>The label is able to be linked to, and metadata doesn’t affect the layout at all.</p>",
      "raw": "A solution I found is to attach the label to a metadata block.\n\n```typ\n[\n  #metadata(\"anything can go here\")\n  #label(identifier)\n]\n```\n\nThe label is able to be linked to, and metadata doesn't affect the layout at all.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 43,
      "score": 18.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 433
    },
    {
      "id": 2881,
      "post_number": 3,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-09-28T17:09:20.509Z",
      "updated_at": "2024-09-29T00:39:37.524Z",
      "cooked": "<p>Your intentions are not clear and without a <a href=\"https://forum.typst.app/t/image-sizes-parent-container-wrongly/464/2\">MRE</a> I don’t know how you got that error.</p>\n<p>This code doesn’t give any error and it returns a label from a function:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">// #let function() = &lt;a&gt;\n#let function() = {\n  return &lt;a&gt;\n}\n\n#lorem(20)\n\nReturn label: #repr(function()) #function()\n\n#lorem(20)\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/065d4e68969bf48f184c32f57600b2bf4da32ad3.png\" alt=\"image\" data-base62-sha1=\"UiLTVhJoNi7geohCWe228jdWM3\" width=\"571\" height=\"118\"></p>",
      "raw": "Your intentions are not clear and without a [MRE](https://forum.typst.app/t/image-sizes-parent-container-wrongly/464/2) I don't know how you got that error.\n\nThis code doesn't give any error and it returns a label from a function:\n\n```typ\n// #let function() = <a>\n#let function() = {\n  return <a>\n}\n\n#lorem(20)\n\nReturn label: #repr(function()) #function()\n\n#lorem(20)\n```\n\n![image|571x118](upload://UiLTVhJoNi7geohCWe228jdWM3.png)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 41,
      "score": 58.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 2882,
      "post_number": 4,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-09-28T17:12:26.470Z",
      "updated_at": "2024-09-28T17:12:26.470Z",
      "cooked": "<p>The <a href=\"https://typst.app/docs/reference/foundations/label/\">label</a> attachment is briefly explained <a href=\"https://forum.typst.app/t/how-to-make-a-custom-referenceable-lecture-element-and-include-its-date-in-the-outline/591/9\">here</a>. But this is indeed how you attach a custom-named label to a metadata element. For hard-coded label name, you can use <code>&lt;identifier&gt;</code> instead.</p>",
      "raw": "The [label](https://typst.app/docs/reference/foundations/label/) attachment is briefly explained [here](https://forum.typst.app/t/how-to-make-a-custom-referenceable-lecture-element-and-include-its-date-in-the-outline/591/9). But this is indeed how you attach a custom-named label to a metadata element. For hard-coded label name, you can use `<identifier>` instead.",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 39,
      "score": 37.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 2883,
      "post_number": 5,
      "username": "gabe",
      "name": "",
      "created_at": "2024-09-28T17:25:35.879Z",
      "updated_at": "2024-09-29T20:48:08.398Z",
      "cooked": "<p>Making an MRE probably would have lead me to the actual issue I was facing.</p>\n<p>I have a function that updates a shared state and returns a label. The output of update must return content, which is attempted to be concatenated with the label. Here’s an MRE for that behavior.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let s = state(\"test\", 0)\n#let fun(id) = {\n  s.update(cs =&gt; {\n    cs += 1\n  })\n  label(id)\n}\n\n#fun(\"test\")\n#link(label(\"test\"))[link]\n</code></pre>\n<p>Outputs <code>error: cannot join content with label</code>.</p>\n<p>To fix this, I just have to explicitly return the label.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let s = state(\"test\", 0)\n#let fun(id) = {\n  s.update(cs =&gt; {\n    cs += 1\n  })\n  return label(id)\n}\n\n#fun(\"test\")\n#link(label(\"test\"))[link]\n</code></pre>\n<p>Looks like I’ll just have to adjust from Rust’s implicit return convention. Thanks for your help!</p>",
      "raw": "Making an MRE probably would have lead me to the actual issue I was facing.\n\nI have a function that updates a shared state and returns a label. The output of update must return content, which is attempted to be concatenated with the label. Here's an MRE for that behavior.\n\n```typ\n#let s = state(\"test\", 0)\n#let fun(id) = {\n  s.update(cs => {\n    cs += 1\n  })\n  label(id)\n}\n\n#fun(\"test\")\n#link(label(\"test\"))[link]\n```\n\nOutputs `error: cannot join content with label`.\n\nTo fix this, I just have to explicitly return the label.\n\n```typ\n#let s = state(\"test\", 0)\n#let fun(id) = {\n  s.update(cs => {\n    cs += 1\n  })\n  return label(id)\n}\n\n#fun(\"test\")\n#link(label(\"test\"))[link]\n```\n\nLooks like I'll just have to adjust from Rust's implicit return convention. Thanks for your help!",
      "reply_to_post_number": 4,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 0,
      "reads": 37,
      "score": 32.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 433
    },
    {
      "id": 2885,
      "post_number": 6,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2024-09-28T17:36:18.501Z",
      "updated_at": "2024-09-28T17:39:10.541Z",
      "cooked": "<p>You have to be careful here. With the code you have now, the state isn’t actually updated, as the state update is not returned from the function and thus not placed anywhere in the document.</p>\n<p>What you instead want to do, is attach the label to the state update. However, you can only attach labels to elements when you’re in markup mode, not in code mode, so something like this should do the trick:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let fun(id) = [\n  #s.update(cs =&gt; cs + 1)\n  #label(id)\n]\n</code></pre>",
      "raw": "You have to be careful here. With the code you have now, the state isn't actually updated, as the state update is not returned from the function and thus not placed anywhere in the document.\n\nWhat you instead want to do, is attach the label to the state update. However, you can only attach labels to elements when you're in markup mode, not in code mode, so something like this should do the trick:\n\n```typ\n#let fun(id) = [\n  #s.update(cs => cs + 1)\n  #label(id)\n]\n```",
      "reply_to_post_number": 5,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 31,
      "score": 61.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 2886,
      "post_number": 7,
      "username": "gabe",
      "name": "",
      "created_at": "2024-09-28T17:43:36.115Z",
      "updated_at": "2024-09-28T17:43:36.115Z",
      "cooked": "<p>Ah, so update returns content that’s used to determine the value of the state at a given point in the document? That explains a lot. Thanks!</p>",
      "raw": "Ah, so update returns content that's used to determine the value of the state at a given point in the document? That explains a lot. Thanks!",
      "reply_to_post_number": 6,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 32,
      "score": 31.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 433
    },
    {
      "id": 2905,
      "post_number": 8,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-09-29T00:57:34.459Z",
      "updated_at": "2024-09-29T00:57:34.459Z",
      "cooked": "<p>In addition to what <a class=\"mention\" href=\"/u/eric\">@Eric</a> said, I want to point out the use of <a href=\"https://typst.app/docs/reference/introspection/state/\"><code>state</code></a>. From your example, it is apparent that you are just counting natural numbers, therefore you should use <a href=\"https://typst.app/docs/reference/introspection/counter/\"><code>counter</code></a> instead. Also, the <code>.update()</code> method, if the function is passed, expects a new value, but you provided <code>none</code>. For <code>state</code> this will therefore set the new value to <code>none</code>, for <code>counter</code> this will give an error.</p>\n<p>Here is what you should use instead:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let c = counter(\"test\")\n#let fun(id) = [#c.step()#label(id)]\n#fun(\"test\")\n#pagebreak()\n#link(label(\"test\"))[link]\n#context c.get().first()\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/fe0553850111c69b0e1737bb2294142df4fd71fc.png\" alt=\"image\" data-base62-sha1=\"AfaGIeTA7eGnV3M6nXo0YWwtKCU\" width=\"56\" height=\"38\"></p>\n<p>Although this still looks <em>somewhat</em> strange to do without additional context/information.</p>",
      "raw": "In addition to what @Eric said, I want to point out the use of [`state`](https://typst.app/docs/reference/introspection/state/). From your example, it is apparent that you are just counting natural numbers, therefore you should use [`counter`](https://typst.app/docs/reference/introspection/counter/) instead. Also, the `.update()` method, if the function is passed, expects a new value, but you provided `none`. For `state` this will therefore set the new value to `none`, for `counter` this will give an error.\n\nHere is what you should use instead:\n\n```typ\n#let c = counter(\"test\")\n#let fun(id) = [#c.step()#label(id)]\n#fun(\"test\")\n#pagebreak()\n#link(label(\"test\"))[link]\n#context c.get().first()\n```\n\n![image|56x38](upload://AfaGIeTA7eGnV3M6nXo0YWwtKCU.png)\n\nAlthough this still looks _somewhat_ strange to do without additional context/information.",
      "reply_to_post_number": 5,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 32,
      "score": 51.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 2947,
      "post_number": 9,
      "username": "gabe",
      "name": "",
      "created_at": "2024-09-29T18:17:21.519Z",
      "updated_at": "2024-09-29T18:17:21.519Z",
      "cooked": "<p>I appreciate the pointer to using counter, that simplifies some syntax. This was just a toy example, though. In truth, I was working on using a function and state to build a dictionary that contains config information about every single file I’m including.</p>",
      "raw": "I appreciate the pointer to using counter, that simplifies some syntax. This was just a toy example, though. In truth, I was working on using a function and state to build a dictionary that contains config information about every single file I'm including.",
      "reply_to_post_number": 8,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 31,
      "score": 6.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 433
    }
  ],
  "scraped_at": "2025-06-10T09:57:52.424172"
}