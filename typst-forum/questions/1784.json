{
  "topic_metadata": {
    "id": 1784,
    "title": "Why do I need state for some (here some specific) show rules?",
    "slug": "why-do-i-need-state-for-some-here-some-specific-show-rules",
    "posts_count": 7,
    "created_at": "2024-11-18T18:36:38.097Z",
    "last_posted_at": "2024-11-23T11:02:02.813Z",
    "views": 186,
    "like_count": 7,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 3,
    "accepted_answer_username": "Xodarap",
    "tags": [
      "state"
    ],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 874
  },
  "posts": [
    {
      "id": 5804,
      "post_number": 1,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-18T18:36:38.202Z",
      "updated_at": "2024-11-26T09:10:40.584Z",
      "cooked": "<p>As a follow up to: <a href=\"https://forum.typst.app/t/how-to-pagebreak-before-an-heading-only-if-a-certain-condition-is-achieved/1691\" class=\"inline-onebox\">How to pagebreak before an heading, only if a certain condition is achieved?</a></p>\n<p>objective: make headings appear on a new page if they would otherwise be placed in the bottom half of a page.</p>\n<p>Here again the two versions: they look pretty similar, but option 1 doesn’t work and option 2 does:</p>\n<details>\n<summary>\noption 1</summary>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">// option 1\n#show heading.where(level: 1, outlined: true): it =&gt; {\n  context if here().position().y &gt; page.height * threshold {\n    pagebreak()\n  }\n  it\n}\n</code></pre>\n</details>\n<details>\n<summary>\noption 2</summary>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">// option 2\n#let my-location = state(\"my-location\", (:))\n\n#show heading.where(level: 1, outlined: true): it =&gt; {\n  context my-location.update(here().position())\n  context {\n    if my-location.get().y &gt; page.height * (100% - threshold) {\n      pagebreak()\n    }\n  }\n  it\n}\n</code></pre>\n</details>\n<p>editable example: <a href=\"https://typst.app/project/rtmoSx9EXRx0piqzlu4Q6Y\" class=\"inline-onebox\">Typst</a></p>",
      "raw": "As a follow up to: https://forum.typst.app/t/how-to-pagebreak-before-an-heading-only-if-a-certain-condition-is-achieved/1691\n\nobjective: make headings appear on a new page if they would otherwise be placed in the bottom half of a page.\n\nHere again the two versions: they look pretty similar, but option 1 doesn't work and option 2 does:\n\n[details=\"option 1\"]\n```typst\n// option 1\n#show heading.where(level: 1, outlined: true): it => {\n  context if here().position().y > page.height * threshold {\n    pagebreak()\n  }\n  it\n}\n```\n[/details]\n\n\n[details=\"option 2\"]\n```typst\n// option 2\n#let my-location = state(\"my-location\", (:))\n\n#show heading.where(level: 1, outlined: true): it => {\n  context my-location.update(here().position())\n  context {\n    if my-location.get().y > page.height * (100% - threshold) {\n      pagebreak()\n    }\n  }\n  it\n}\n```\n[/details]\n\neditable example: https://typst.app/project/rtmoSx9EXRx0piqzlu4Q6Y",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 61,
      "score": 172.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 5820,
      "post_number": 2,
      "username": "jbirnick",
      "name": "Johann Birnick",
      "created_at": "2024-11-19T08:36:05.977Z",
      "updated_at": "2024-11-19T08:51:13.806Z",
      "cooked": "<p>The problem in option 1 is that the layout doesn’t converge. Typst makes multiple layout iterations until the layout “converges”, meaning until it doesn’t change anymore.</p>\n<p>For your example: In the first run, the y position will be zero because Typst doesn’t know yet where the heading will be placed, so no page break will be inserted. So after the first run the headings are placed “as usual”. Then it goes into the second run. Now the position will give you the “usual position”. So it detects the bad headings and inserts the appropriate page breaks. The result of this is basically the document that you want. However, the layout looks different from the previous iteration (i.e. didn’t converge yet), so we go into a third run. Now for third run, it return as positions the new positions (how you want them to be). That means no heading will be detected as a bad heading, and hence <em>no page breaks will be inserted</em>, or in other words, the page breaks will be removed again. So what gets compiled is the document from the start! In this fashion it will switch infinitely back and forth between the “usual” document and the document that you want. Hence a compiler error that the layout doesn’t converge.</p>\n<p>In your second option you managed (probably more by luck if I may say so) to bypass this problem. You can go through the different iterations by hand and check that doesn’t lead to the infinite back-and-forth. In fact, if I’m not mistaken, that’s because of a funny “back-and-forth” between the state and the iterations. The state is basically always the opposite of what you want it to be. Whatever.</p>\n<p>Let me mention another point with which you have to be careful when implementing this. If your implementation makes the fix say at the second layout iteration, that could be too early. Because the content could still change (because of many other <code>context</code> calls). That means it could still happen that an already-fixed heading will be turned bad again because say in the third iteration suddenly a lot of text appears before the heading. This makes implementing the behavior you want a little challenging, good luck. <img src=\"https://forum.typst.app/images/emoji/apple/smiley.png?v=12\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "The problem in option 1 is that the layout doesn't converge. Typst makes multiple layout iterations until the layout \"converges\", meaning until it doesn't change anymore.\n\nFor your example: In the first run, the y position will be zero because Typst doesn't know yet where the heading will be placed, so no page break will be inserted. So after the first run the headings are placed \"as usual\". Then it goes into the second run. Now the position will give you the \"usual position\". So it detects the bad headings and inserts the appropriate page breaks. The result of this is basically the document that you want. However, the layout looks different from the previous iteration (i.e. didn't converge yet), so we go into a third run. Now for third run, it return as positions the new positions (how you want them to be). That means no heading will be detected as a bad heading, and hence _no page breaks will be inserted_, or in other words, the page breaks will be removed again. So what gets compiled is the document from the start! In this fashion it will switch infinitely back and forth between the \"usual\" document and the document that you want. Hence a compiler error that the layout doesn't converge.\n\nIn your second option you managed (probably more by luck if I may say so) to bypass this problem. You can go through the different iterations by hand and check that doesn't lead to the infinite back-and-forth. In fact, if I'm not mistaken, that's because of a funny \"back-and-forth\" between the state and the iterations. The state is basically always the opposite of what you want it to be. Whatever.\n\nLet me mention another point with which you have to be careful when implementing this. If your implementation makes the fix say at the second layout iteration, that could be too early. Because the content could still change (because of many other `context` calls). That means it could still happen that an already-fixed heading will be turned bad again because say in the third iteration suddenly a lot of text appears before the heading. This makes implementing the behavior you want a little challenging, good luck. :smiley:",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 3,
      "reads": 56,
      "score": 61.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 218
    },
    {
      "id": 5840,
      "post_number": 3,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-19T17:41:17.340Z",
      "updated_at": "2024-11-19T17:42:18.491Z",
      "cooked": "<p>Thank you sooo much. That explains a lot.</p>\n<p>Regarding this topic the answer then is: in the example given, there is actually no evidence that using of <code>state</code> is needed or provides more possibilities since both options don’t do the trick.</p>\n<p>That is unfortunate in general xD</p>\n<p>At least it sheds some light on the hidden mechanics of typst. (There are still a lot of questions about how all these show rules work. And which are clearly nowhere stated. I’m a little sad that it is currently all just figuring out by trial and error. - and nice posts by people like <a class=\"mention\" href=\"/u/jbirnick\">@jbirnick</a> . But maybe that’s because the dev don’t want to drop too much info about this stuff because they are subject to change?)</p>",
      "raw": "Thank you sooo much. That explains a lot.\n\nRegarding this topic the answer then is: in the example given, there is actually no evidence that using of `state` is needed or provides more possibilities since both options don't do the trick.\n\nThat is unfortunate in general xD\n\nAt least it sheds some light on the hidden mechanics of typst. (There are still a lot of questions about how all these show rules work. And which are clearly nowhere stated. I'm a little sad that it is currently all just figuring out by trial and error. - and nice posts by people like @jbirnick . But maybe that's because the dev don't want to drop too much info about this stuff because they are subject to change?)",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 41,
      "score": 18.0,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 5843,
      "post_number": 4,
      "username": "jbirnick",
      "name": "Johann Birnick",
      "created_at": "2024-11-19T18:43:14.490Z",
      "updated_at": "2024-11-19T18:43:26.170Z",
      "cooked": "<p>Yeah the state of the docs is not optimal, the way I learned many things is by asking on the Discord. But it will improve as Typst evolves I guess. It’s a lot of work and not easy to write extensive docs.</p>\n<p>Btw this should be a solution to your problem, thanks <a class=\"mention\" href=\"/u/quachpas\">@quachpas</a> for the <code>metadata</code> inspiration:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show heading: it =&gt; {\n  metadata(\"originalheading\")\n  context {\n    let m = query(selector(metadata.where(value: \"originalheading\")).before(here())).last()\n    if m.location().position().y &gt; 0.5 * page.height {\n      pagebreak()\n    }\n  }\n  it\n}\n</code></pre>\n<p>It puts some <code>metadata</code> at the <em>original</em> position of the heading (that’s the important part), and then makes a decision based on that, original, position.</p>",
      "raw": "Yeah the state of the docs is not optimal, the way I learned many things is by asking on the Discord. But it will improve as Typst evolves I guess. It's a lot of work and not easy to write extensive docs.\n\nBtw this should be a solution to your problem, thanks @quachpas for the `metadata` inspiration:\n\n```typ\n#show heading: it => {\n  metadata(\"originalheading\")\n  context {\n    let m = query(selector(metadata.where(value: \"originalheading\")).before(here())).last()\n    if m.location().position().y > 0.5 * page.height {\n      pagebreak()\n    }\n  }\n  it\n}\n```\n\nIt puts some `metadata` at the _original_ position of the heading (that's the important part), and then makes a decision based on that, original, position.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 39,
      "score": 22.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 218
    },
    {
      "id": 5844,
      "post_number": 5,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-19T18:48:58.588Z",
      "updated_at": "2024-11-19T18:48:58.588Z",
      "cooked": "<p>Nice. No I’m a little disappointed in myself. I tried to do the exact same as you did. Also with inspiration of <a class=\"mention\" href=\"/u/quachpas\">@quachpas</a> idea. However I didn’t manage to produce a satisfactory solution. I must have missed something …</p>\n<p>Again: thank you so much :)</p>",
      "raw": "Nice. No I'm a little disappointed in myself. I tried to do the exact same as you did. Also with inspiration of @quachpas idea. However I didn't manage to produce a satisfactory solution. I must have missed something ....\n\nAgain: thank you so much :)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 38,
      "score": 22.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 5845,
      "post_number": 6,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-19T18:55:34.518Z",
      "updated_at": "2024-11-19T18:55:34.518Z",
      "cooked": "<p><a class=\"mention\" href=\"/u/jbirnick\">@jbirnick</a> btw you can discard the <code>selector()</code> call. <code>.where()</code> returns a selector already :)</p>",
      "raw": "@jbirnick btw you can discard the `selector()` call. `.where()` returns a selector already :)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 38,
      "score": 22.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 6004,
      "post_number": 7,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-23T11:02:02.813Z",
      "updated_at": "2024-11-23T11:02:02.813Z",
      "cooked": "<p>To finish this topic:<br>\nThe provided answer by jbirnick also is not sufficient as stated here: <a href=\"https://forum.typst.app/t/how-to-pagebreak-before-an-heading-only-if-a-certain-condition-is-achieved/1691/10\" class=\"inline-onebox\">How to pagebreak before an heading, only if a certain condition is achieved? - #10 by sjfhsjfh</a></p>\n<p>For more information visit the other topic :) (unfortunately the practical question seems not to be solveable with the current framework)</p>",
      "raw": "To finish this topic:\nThe provided answer by jbirnick also is not sufficient as stated here: https://forum.typst.app/t/how-to-pagebreak-before-an-heading-only-if-a-certain-condition-is-achieved/1691/10\n\nFor more information visit the other topic :) (unfortunately the practical question seems not to be solveable with the current framework)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 31,
      "score": 11.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    }
  ],
  "scraped_at": "2025-06-10T09:54:46.322532"
}