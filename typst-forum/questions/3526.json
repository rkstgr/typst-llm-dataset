{
  "topic_metadata": {
    "id": 3526,
    "title": "How can you switch between \"I,\" \"1,\" and no page number in an elegant way?",
    "slug": "how-can-you-switch-between-i-1-and-no-page-number-in-an-elegant-way",
    "posts_count": 5,
    "created_at": "2025-04-06T08:49:38.815Z",
    "last_posted_at": "2025-04-06T11:16:53.510Z",
    "views": 90,
    "like_count": 5,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "bluss",
    "tags": [
      "layout",
      "numbering",
      "page"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 556
  },
  "posts": [
    {
      "id": 10679,
      "post_number": 1,
      "username": "a_w",
      "name": "Alex",
      "created_at": "2025-04-06T08:49:38.974Z",
      "updated_at": "2025-04-06T08:49:38.974Z",
      "cooked": "<p>I have a document that uses roman page numbers for the preface, numeric ones for the main matter and no page number for title pages in between the main matter. I would like to switch between these three states without setting the footer ‚Äúfrom scratch‚Äù each time, like so:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set page(width: 50mm, height: 50mm)\n#show heading.where(level: 1): it =&gt; {\n  pagebreak(weak: true)\n  it\n}\n\n#let page-number(shown, format: none) = {\n  context {\n    if shown {\n      set page(footer: align(center, counter(page).display(format))) \n    }\n  }\n}\n\n#page-number(true, format: \"I\")\n= Preface: Roman Page Number\n\n#counter(page).update(1)\n\n#page-number(true, format: \"1\")\n= Main Section: Numeric Page Number\n\n#page-number(false)\n= Blank Page: No Page Number\n\n#page-number(true, format: \"1\")\n= Main Section: Numeric Page Number\n</code></pre>\n<p>But this example doesn‚Äôt work (this displays no page numbers at all), I suspect because <code>context</code> doesn‚Äôt work that way. How could I refactor the code to get it to work?</p>",
      "raw": "I have a document that uses roman page numbers for the preface, numeric ones for the main matter and no page number for title pages in between the main matter. I would like to switch between these three states without setting the footer \"from scratch\" each time, like so:\n\n```typ\n#set page(width: 50mm, height: 50mm)\n#show heading.where(level: 1): it => {\n  pagebreak(weak: true)\n  it\n}\n\n#let page-number(shown, format: none) = {\n  context {\n    if shown {\n      set page(footer: align(center, counter(page).display(format))) \n    }\n  }\n}\n\n#page-number(true, format: \"I\")\n= Preface: Roman Page Number\n\n#counter(page).update(1)\n\n#page-number(true, format: \"1\")\n= Main Section: Numeric Page Number\n\n#page-number(false)\n= Blank Page: No Page Number\n\n#page-number(true, format: \"1\")\n= Main Section: Numeric Page Number\n```\n\nBut this example doesn't work (this displays no page numbers at all), I suspect because `context` doesn't work that way. How could I refactor the code to get it to work?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 35,
      "score": 112.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 566
    },
    {
      "id": 10681,
      "post_number": 2,
      "username": "bluss",
      "name": "Ulrik",
      "created_at": "2025-04-06T09:28:03.408Z",
      "updated_at": "2025-04-06T09:43:40.423Z",
      "cooked": "<p>Simplest version that does the ‚Äúsame thing‚Äù (morally) of that code is to use page numbering:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#set page(numbering: \"I\")\n= Preface: Roman Page Number\n\n#counter(page).update(1)\n\n#set page(numbering: \"1\")\n= Main Section: Numeric Page Number\n\n#set page(numbering: none)\n= Blank Page: No Page Number\n\n#set page(numbering: \"1\")\n= Main Section: Numeric Page Number\n</code></pre>\n<p>If you want to configure the footer once and for all you can do that, but not necessary for this example.</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#set page(footer: {\n  context align(right)[\n    #let pgn = here().page-numbering()\n    #if pgn != none {\n      counter(page).display(pgn)\n    }\n  ]\n})\n</code></pre>\n<p>The <code>set page</code> rule only works the usual way: it works <em>in the scope where it is</em>, for all the following code. So a show rule would be how to refactor it to be closer to the original code (but this is not better for this simple case)</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let page-number(shown, format: none, it) = {\n  set page(footer: align(center, context counter(page).display(format))) if shown\n  set page(footer: []) if not shown\n  it\n}\n\n#show: page-number.with(true, format: \"I\")\n</code></pre>\n<p>As you can see the function has the item <code>it</code> which it expands <em>in the scope</em> where the set rules have been applied.</p>",
      "raw": "Simplest version that does the \"same thing\" (morally) of that code is to use page numbering:\n\n```typst\n#set page(numbering: \"I\")\n= Preface: Roman Page Number\n\n#counter(page).update(1)\n\n#set page(numbering: \"1\")\n= Main Section: Numeric Page Number\n\n#set page(numbering: none)\n= Blank Page: No Page Number\n\n#set page(numbering: \"1\")\n= Main Section: Numeric Page Number\n```\n\nIf you want to configure the footer once and for all you can do that, but not necessary for this example.\n\n```typst\n#set page(footer: {\n  context align(right)[\n    #let pgn = here().page-numbering()\n    #if pgn != none {\n      counter(page).display(pgn)\n    }\n  ]\n})\n```\n\n\nThe `set page` rule only works the usual way: it works _in the scope where it is_, for all the following code. So a show rule would be how to refactor it to be closer to the original code (but this is not better for this simple case)\n\n```typst\n#let page-number(shown, format: none, it) = {\n  set page(footer: align(center, context counter(page).display(format))) if shown\n  set page(footer: []) if not shown\n  it\n}\n\n#show: page-number.with(true, format: \"I\")\n```\n\nAs you can see the function has the item `it` which it expands _in the scope_ where the set rules have been applied.",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 4,
      "reads": 30,
      "score": 76.0,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 1272
    },
    {
      "id": 10684,
      "post_number": 3,
      "username": "a_w",
      "name": "Alex",
      "created_at": "2025-04-06T10:32:17.772Z",
      "updated_at": "2025-04-06T10:32:17.772Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"bluss\" data-post=\"2\" data-topic=\"3526\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/b/441A5E/48.png\" class=\"avatar\"> bluss:</div>\n<blockquote>\n<pre><code class=\"lang-auto\">#set page(footer: {\n  context align(right)[\n    #let pgn = here().page-numbering()\n    #if pgn != none {\n      counter(page).display(pgn)\n    }\n  ]\n})\n</code></pre>\n</blockquote>\n</aside>\n<p>Thanks so much, this is exactly what I‚Äôve been looking for and couldn‚Äôt get right, so I‚Äôd have to style/setup the footer only once. <img src=\"https://forum.typst.app/images/emoji/apple/pray.png?v=12\" title=\":pray:\" class=\"emoji\" alt=\":pray:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "[quote=\"bluss, post:2, topic:3526\"]\n```\n#set page(footer: {\n  context align(right)[\n    #let pgn = here().page-numbering()\n    #if pgn != none {\n      counter(page).display(pgn)\n    }\n  ]\n})\n```\n[/quote]\n\nThanks so much, this is exactly what I've been looking for and couldn't get right, so I'd have to style/setup the footer only once. üôè",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 0,
      "reads": 25,
      "score": 5.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 566
    },
    {
      "id": 10688,
      "post_number": 4,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-06T11:00:33.305Z",
      "updated_at": "2025-04-06T11:00:33.305Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"bluss\" data-post=\"2\" data-topic=\"3526\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/b/441A5E/48.png\" class=\"avatar\"> bluss:</div>\n<blockquote>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set page(footer: {\n  context align(right)[\n    #let pgn = here().page-numbering()\n    #if pgn != none {\n      counter(page).display(pgn)\n    }\n  ]\n})\n</code></pre>\n</blockquote>\n</aside>\n<p>Generally speaking, working with code in markup mode can play dirty tricks on you, and you have to use <code>#</code> a lot, so it‚Äôs better to avoid it. You‚Äôre also using an unnecessary <code>{}</code> to wrap the <code>context</code>. You can also apply an early return pattern and get this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set page(footer: context {\n  let page-numbering = here().page-numbering()\n  if page-numbering == none { return }\n  align(right, counter(page).display(page-numbering))\n})\n</code></pre>\n<p>Although with a formatter the number of lines will be the same, but the syntax and logic is a little easier to read through.</p>",
      "raw": "[quote=\"bluss, post:2, topic:3526\"]\n```typ\n#set page(footer: {\n  context align(right)[\n    #let pgn = here().page-numbering()\n    #if pgn != none {\n      counter(page).display(pgn)\n    }\n  ]\n})\n```\n[/quote]\n\nGenerally speaking, working with code in markup mode can play dirty tricks on you, and you have to use `#` a lot, so it's better to avoid it. You're also using an unnecessary `{}` to wrap the `context`. You can also apply an early return pattern and get this:\n\n```typ\n#set page(footer: context {\n  let page-numbering = here().page-numbering()\n  if page-numbering == none { return }\n  align(right, counter(page).display(page-numbering))\n})\n```\n\nAlthough with a formatter the number of lines will be the same, but the syntax and logic is a little easier to read through.",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 0,
      "reads": 26,
      "score": 10.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 10690,
      "post_number": 5,
      "username": "a_w",
      "name": "Alex",
      "created_at": "2025-04-06T11:16:53.510Z",
      "updated_at": "2025-04-06T11:16:53.510Z",
      "cooked": "<p>Ah, great, thank you for elaborating further! I will use this apporach as it is indeed a bit easier to read <img src=\"https://forum.typst.app/images/emoji/apple/smiling_face.png?v=12\" title=\":smiling_face:\" class=\"emoji\" alt=\":smiling_face:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Ah, great, thank you for elaborating further! I will use this apporach as it is indeed a bit easier to read ‚ò∫Ô∏è",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 25,
      "score": 20.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 566
    }
  ],
  "scraped_at": "2025-06-10T09:49:39.579082"
}