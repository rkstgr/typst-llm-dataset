{
  "topic_metadata": {
    "id": 2760,
    "title": "Integral with overline",
    "slug": "integral-with-overline",
    "posts_count": 6,
    "created_at": "2025-02-10T15:22:30.041Z",
    "last_posted_at": "2025-02-11T13:23:06.946Z",
    "views": 368,
    "like_count": 7,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 7,
    "accepted_answer_username": "sijo",
    "tags": [
      "layout",
      "math",
      "graphics"
    ],
    "category_id": 5,
    "participant_count": 5,
    "word_count": 576
  },
  "posts": [
    {
      "id": 8436,
      "post_number": 1,
      "username": "Pablo_Padilla",
      "name": "Pablo Padilla",
      "created_at": "2025-02-10T15:22:30.334Z",
      "updated_at": "2025-02-10T18:37:33.355Z",
      "cooked": "<p>Hi I need to use a symbol to represent the upper integral, which in LaTeX is \\upint, but I can’t seem to find a way to type this. I tried using overline(integral) but the top bar is too big. Does somebody know a way around this?<br>\nEdit: I would like to also be able to type the following<br>\n<img src=\"https://forum.typst.app/uploads/default/original/2X/8/831af7d04231af295b94a731dbd3e67a47b4d9b3.png\" alt=\"Erw4K\" data-base62-sha1=\"iHOkikiWI61mwLxbBc7KvqToRI7\" width=\"114\" height=\"132\"></p>",
      "raw": "Hi I need to use a symbol to represent the upper integral, which in LaTeX is \\upint, but I can't seem to find a way to type this. I tried using overline(integral) but the top bar is too big. Does somebody know a way around this?\nEdit: I would like to also be able to type the following \n![Erw4K|114x132](upload://iHOkikiWI61mwLxbBc7KvqToRI7.png)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 32,
      "score": 1546.4,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1172
    },
    {
      "id": 8437,
      "post_number": 2,
      "username": "gezepi",
      "name": "",
      "created_at": "2025-02-10T15:32:56.498Z",
      "updated_at": "2025-02-10T15:32:56.498Z",
      "cooked": "<p>I don’t know the symbol so I can’t give a specific answer, but here are some resources you could try:</p>\n<ul>\n<li><a href=\"https://typst.app/docs/reference/symbols/sym/\" class=\"inline-onebox\">General Symbols – Typst Documentation</a><br>\nOfficial Typst documentation that should include all built-in symbols</li>\n<li><a href=\"https://detypify.quarticcat.com/\" rel=\"noopener nofollow ugc\">https://detypify.quarticcat.com/</a><br>\nProject where you draw the symbol you are looking for and it suggests built-in symbols that match.  I have not had too much luck with the web version (seems to have been updated 10 months ago), but the version included in Tinymist performs better for me.</li>\n</ul>",
      "raw": "I don't know the symbol so I can't give a specific answer, but here are some resources you could try:\n- https://typst.app/docs/reference/symbols/sym/\nOfficial Typst documentation that should include all built-in symbols\n- https://detypify.quarticcat.com/\n  Project where you draw the symbol you are looking for and it suggests built-in symbols that match.  I have not had too much luck with the web version (seems to have been updated 10 months ago), but the version included in Tinymist performs better for me.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 32,
      "score": 16.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 326
    },
    {
      "id": 8439,
      "post_number": 3,
      "username": "xkevio",
      "name": "Kevio",
      "created_at": "2025-02-10T16:26:56.212Z",
      "updated_at": "2025-02-10T16:26:56.212Z",
      "cooked": "<p>You probably want <code>$dash(integral)$</code>.<br>\n<img src=\"https://forum.typst.app/uploads/default/original/2X/9/90dadd4c5e7ea2bfefa58a148a1c1cf52a10da18.png\" alt=\"image\" data-base62-sha1=\"kFrFA0LydIfxzMTWULEyrWSnmvm\" width=\"132\" height=\"338\"></p>",
      "raw": "You probably want `$dash(integral)$`.\n![image|132x338](upload://kFrFA0LydIfxzMTWULEyrWSnmvm.png)",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 30,
      "score": 41.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 21
    },
    {
      "id": 8441,
      "post_number": 4,
      "username": "Pablo_Padilla",
      "name": "Pablo Padilla",
      "created_at": "2025-02-10T16:41:33.661Z",
      "updated_at": "2025-02-10T16:41:33.661Z",
      "cooked": "<p>Yes, Thank you so much. Do you know a way to type the same but with the dash below the integral?</p>",
      "raw": "Yes, Thank you so much. Do you know a way to type the same but with the dash below the integral?",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 30,
      "score": 11.0,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1172
    },
    {
      "id": 8460,
      "post_number": 5,
      "username": "aarnent",
      "name": "",
      "created_at": "2025-02-11T10:56:36.765Z",
      "updated_at": "2025-02-11T10:56:36.765Z",
      "cooked": "<p>this isn’t a very elegant solution, but it allows for a lot of customisation. For the integral symbols, I would define new glyphs:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let oscore = place(dy: -6pt, dx: -2.5pt)[*#sym.dash.en*]\n#let uscore = place(dy: -0.5pt, dx: -1.5pt)[*#sym.dash.en*]\n\n#let ulint = $limits(integral)_(oscore)^()$\n#let olint = $limits(integral)_()^(uscore)$\n\n\n$ ulint $\n$ olint $\n\n$ulint$\n$olint$\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/d/d23fd8b76f465b4f958da3d3a164d7d4ebda88e7.png\" alt=\"image\" data-base62-sha1=\"tZX3Gjpc8Y6vK7piBVRBKHhOjuT\" width=\"281\" height=\"363\"></p>\n<p>Problem with this is that the bases get attached in weird spots:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">$ ulint_a^b $\n$ olint_a^b $\n\n$ulint_a^b$\n$olint_a^b$\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/4/4acf6a668c7cd411b0c26554053ad836ff5101fb.png\" alt=\"image\" data-base62-sha1=\"aFNIyR68qVxJs63KCitrj0JfYTx\" width=\"294\" height=\"436\"></p>\n<p>To get around this, you can use a <code>show</code> rule to adjust the spacing to your liking:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#show math.equation: eq =&gt; {\n  show math.attach.where(base: ulint).or(math.attach.where(base: olint)): it =&gt; {\n    if it.b.func() == place {\n      // hacky workaround\n      return it\n    }\n    let dx = if eq.block {-4pt} else {-1pt}\n    math.attach(\n      it.base,\n      b: place(dx: dx, dy: -8pt)[#it.b],\n      t: it.t,\n      tl: it.tl,\n      tr: it.tr,\n      bl: it.bl,\n      br: it.br,\n    )\n  }\n  eq\n}\n\n$ ulint_a^b $\n$ olint_a^b $\n\n\n$ulint_a^b$\n$olint_a^b$\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/3/3d62b3d1ec79281916fd79d0e021814ec6326e95.png\" alt=\"image\" data-base62-sha1=\"8L2ARSoaEdb27LPWwrWCIKTmku1\" width=\"289\" height=\"406\"></p>\n<p>I didn’t test everything rigorously, so you might need to adjust the placements</p>",
      "raw": "this isn't a very elegant solution, but it allows for a lot of customisation. For the integral symbols, I would define new glyphs:\n\n```typst\n#let oscore = place(dy: -6pt, dx: -2.5pt)[*#sym.dash.en*]\n#let uscore = place(dy: -0.5pt, dx: -1.5pt)[*#sym.dash.en*]\n\n#let ulint = $limits(integral)_(oscore)^()$\n#let olint = $limits(integral)_()^(uscore)$\n\n\n$ ulint $\n$ olint $\n\n$ulint$\n$olint$\n```\n\n![image|281x363](upload://tZX3Gjpc8Y6vK7piBVRBKHhOjuT.png)\n\n\nProblem with this is that the bases get attached in weird spots:\n\n```typst\n$ ulint_a^b $\n$ olint_a^b $\n\n$ulint_a^b$\n$olint_a^b$\n```\n![image|294x436](upload://aFNIyR68qVxJs63KCitrj0JfYTx.png)\n\n\nTo get around this, you can use a `show` rule to adjust the spacing to your liking:\n```typst\n#show math.equation: eq => {\n  show math.attach.where(base: ulint).or(math.attach.where(base: olint)): it => {\n    if it.b.func() == place {\n      // hacky workaround\n      return it\n    }\n    let dx = if eq.block {-4pt} else {-1pt}\n    math.attach(\n      it.base,\n      b: place(dx: dx, dy: -8pt)[#it.b],\n      t: it.t,\n      tl: it.tl,\n      tr: it.tr,\n      bl: it.bl,\n      br: it.br,\n    )\n  }\n  eq\n}\n\n$ ulint_a^b $\n$ olint_a^b $\n\n\n$ulint_a^b$\n$olint_a^b$\n```\n\n![image|289x406](upload://8L2ARSoaEdb27LPWwrWCIKTmku1.png)\n\nI didn't test everything rigorously, so you might need to adjust the placements",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 14.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 501
    },
    {
      "id": 8468,
      "post_number": 7,
      "username": "sijo",
      "name": "",
      "created_at": "2025-02-11T13:23:06.946Z",
      "updated_at": "2025-02-11T13:24:11.894Z",
      "cooked": "<p>These are Unicode symbols U+2A1B ⨜ and U+2A1C ⨛. Currently Typst has no name defined for them (but they are listed in the <a href=\"https://typst.app/project/pHN_iIPjeuCyI_N2JZB84o\">Symbols Proposal Document</a>. So for now you need to use the Unicode codepoints or copy-paste the symbols in your Typst document, for example:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let int-bar-above = symbol(\"⨛\")\n#let int-bar-below = symbol(\"⨜\")\n\n$\n  integral_a^b wide\n  ⨛_a^b \"or\" #(int-bar-above)_a^b wide\n  ⨜_a^b \"or\" #(int-bar-below)_a^b \n$\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/b/bbc48540aa0398348e6c9bc547e0290672f3cdb1.png\" alt=\"image\" data-base62-sha1=\"qN4ktrSpJ1DLLo9HeUWoM1FY5xf\" width=\"207\" height=\"53\"></p>\n<p>The position of the “a” subscript in the upper sum is a bit off, but that’s probably a bug in the math font.</p>\n<p>In the next release (Typst 0.13) it will be fairly easy to “extend”  the <code>integral</code> symbol yourself (but this will only work when you write <code>integral</code> in the scope of your redefinition):</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">// Requires Typst 0.13\n#let integral = {\n  let args = eval(repr(sym.integral).replace(\"symbol\", \"arguments\", count: 1))\n  symbol(..args, (\"bar.above\", \"⨛\"), (\"bar.below\", \"⨜\"))\n}\n\n$\n  integral_a^b wide\n  ⨛_a^b \"or\" integral.bar.above_a^b wide\n  ⨜_a^b \"or\" integral.bar.below_a^b \n$</code></pre>",
      "raw": "These are Unicode symbols U+2A1B ⨜ and U+2A1C ⨛. Currently Typst has no name defined for them (but they are listed in the [Symbols Proposal Document](https://typst.app/project/pHN_iIPjeuCyI_N2JZB84o). So for now you need to use the Unicode codepoints or copy-paste the symbols in your Typst document, for example:\n\n```typ\n#let int-bar-above = symbol(\"⨛\")\n#let int-bar-below = symbol(\"⨜\")\n\n$\n  integral_a^b wide\n  ⨛_a^b \"or\" #(int-bar-above)_a^b wide\n  ⨜_a^b \"or\" #(int-bar-below)_a^b \n$\n```\n![image|414x106, 50%](upload://qN4ktrSpJ1DLLo9HeUWoM1FY5xf.png)\n\nThe position of the \"a\" subscript in the upper sum is a bit off, but that's probably a bug in the math font.\n\nIn the next release (Typst 0.13) it will be fairly easy to \"extend\"  the `integral` symbol yourself (but this will only work when you write `integral` in the scope of your redefinition):\n\n```typ\n// Requires Typst 0.13\n#let integral = {\n  let args = eval(repr(sym.integral).replace(\"symbol\", \"arguments\", count: 1))\n  symbol(..args, (\"bar.above\", \"⨛\"), (\"bar.below\", \"⨜\"))\n}\n\n$\n  integral_a^b wide\n  ⨛_a^b \"or\" integral.bar.above_a^b wide\n  ⨜_a^b \"or\" integral.bar.below_a^b \n$",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 4,
      "reads": 19,
      "score": 203.8,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 332
    }
  ],
  "scraped_at": "2025-06-10T09:51:50.349080"
}