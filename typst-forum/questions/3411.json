{
  "topic_metadata": {
    "id": 3411,
    "title": "How can I make the numbering fit the size of the diagram in Fletcher?",
    "slug": "how-can-i-make-the-numbering-fit-the-size-of-the-diagram-in-fletcher",
    "posts_count": 6,
    "created_at": "2025-03-26T14:41:31.802Z",
    "last_posted_at": "2025-03-26T18:29:50.126Z",
    "views": 70,
    "like_count": 6,
    "reply_count": 2,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 5,
    "accepted_answer_username": "Andrew",
    "tags": [
      "packages",
      "fletcher"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 526
  },
  "posts": [
    {
      "id": 10285,
      "post_number": 1,
      "username": "Kass",
      "name": "",
      "created_at": "2025-03-26T14:41:31.966Z",
      "updated_at": "2025-03-26T14:41:31.966Z",
      "cooked": "<p>Hi,</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">$ \"before\"\n  #diagram(\n   spacing:(3em,2em),\n   let (FXFY_FZ, FX_FYFZ, FXYFZ, FXY_Z, FXFYZ,FX_YZ) = (( 0, 0), ( 1,0), (0,1), (0,2),(1,1),(1,2)),\n  node(FXFY_FZ,$(F X times.circle F Y)  times.circle F Z$ ),\n  node(FX_FYFZ, $F X times.circle ( F Y  times.circle F Z)$),\n  node(FXYFZ, $F (X times.circle Y)  times.circle F Z$),\n  node(FXY_Z, $F ((X times.circle  Y)  times.circle  Z)$),\n  node(FXFYZ, $F X times.circle  F (Y  times.circle  Z)$),\n  node(FX_YZ, $F (X times.circle (  Y  times.circle  Z))$),\n  edge(FXFY_FZ,FX_FYFZ,\"-&gt;\",$alpha$),\n  edge(FXFY_FZ,FXYFZ,\"-&gt;\",$phi times.circle id$),\n  edge(FXYFZ,FXY_Z,\"-&gt;\",$phi$),\n  edge(FXY_Z,FX_YZ,\"-&gt;\",$F alpha$),\n  edge(FX_FYFZ,FXFYZ,\"-&gt;\",$id times.circle phi$,label-side: left),\n  edge(FXFYZ,FX_YZ,\"-&gt;\",$phi$,label-side: left),\n) \"after\"\n$\n</code></pre>\n<p>I would like to have ‘before’ and ‘after’ centered, as well as the numbering in the middle of my diagram.</p>",
      "raw": "Hi,\n\n```typ\n$ \"before\"\n  #diagram(\n   spacing:(3em,2em),\n   let (FXFY_FZ, FX_FYFZ, FXYFZ, FXY_Z, FXFYZ,FX_YZ) = (( 0, 0), ( 1,0), (0,1), (0,2),(1,1),(1,2)),\n  node(FXFY_FZ,$(F X times.circle F Y)  times.circle F Z$ ),\n  node(FX_FYFZ, $F X times.circle ( F Y  times.circle F Z)$),\n  node(FXYFZ, $F (X times.circle Y)  times.circle F Z$),\n  node(FXY_Z, $F ((X times.circle  Y)  times.circle  Z)$),\n  node(FXFYZ, $F X times.circle  F (Y  times.circle  Z)$),\n  node(FX_YZ, $F (X times.circle (  Y  times.circle  Z))$),\n  edge(FXFY_FZ,FX_FYFZ,\"->\",$alpha$),\n  edge(FXFY_FZ,FXYFZ,\"->\",$phi times.circle id$),\n  edge(FXYFZ,FXY_Z,\"->\",$phi$),\n  edge(FXY_Z,FX_YZ,\"->\",$F alpha$),\n  edge(FX_FYFZ,FXFYZ,\"->\",$id times.circle phi$,label-side: left),\n  edge(FXFYZ,FX_YZ,\"->\",$phi$,label-side: left),\n) \"after\"\n$\n```\nI would like to have 'before' and 'after' centered, as well as the numbering in the middle of my diagram.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 27,
      "score": 85.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1391
    },
    {
      "id": 10293,
      "post_number": 2,
      "username": "Jollywatt",
      "name": "Joseph Wilson",
      "created_at": "2025-03-26T16:08:03.618Z",
      "updated_at": "2025-03-26T16:08:03.618Z",
      "cooked": "<p>Using <code>block()</code> almost works, but it still seemed necessary to manually shift the diagram a bit with <code>move()</code>.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@local/fletcher:0.5.7\": diagram, node, edge\n#set math.equation(numbering: \"(1)\")\n\n#let fig = diagram(\n\tspacing:(3em,2em),\n\tlet (FXFY_FZ, FX_FYFZ, FXYFZ, FXY_Z, FXFYZ, FX_YZ) = ((0,0), ( 1,0), (0,1), (0,2), (1,1), (1,2)),\n\tnode(FXFY_FZ, $(F X times.circle F Y) times.circle F Z$),\n\tnode(FX_FYFZ, $F X times.circle (F Y times.circle F Z)$),\n\tnode(FXYFZ, $F(X times.circle Y) times.circle F Z$),\n\tnode(FXY_Z, $F((X times.circle Y) times.circle Z)$),\n\tnode(FXFYZ, $F X times.circle F(Y times.circle Z)$),\n\tnode(FX_YZ, $F(X times.circle (Y times.circle Z))$),\n\tedge(FXFY_FZ, FX_FYFZ, \"-&gt;\", $alpha$),\n\tedge(FXFY_FZ, FXYFZ, \"-&gt;\", $phi times.circle id$),\n\tedge(FXYFZ, FXY_Z, \"-&gt;\", $phi$),\n\tedge(FXY_Z, FX_YZ, \"-&gt;\", $F alpha$),\n\tedge(FX_FYFZ, FXFYZ, \"-&gt;\", $id times.circle phi$, left),\n\tedge(FXFYZ, FX_YZ, \"-&gt;\", $phi$, left),\n)\n\n$ \"before\" #block(move(dy: -0.66em, pad(x: 1em, fig))) \"after\" $\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/7/7032d0911b3f08e7c75217f1754e84b1b1fa747a.png\" data-download-href=\"https://forum.typst.app/uploads/default/7032d0911b3f08e7c75217f1754e84b1b1fa747a\" title=\"Screenshot 2025-03-26 at 15.37.44\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/7/7032d0911b3f08e7c75217f1754e84b1b1fa747a_2_690x191.png\" alt=\"Screenshot 2025-03-26 at 15.37.44\" data-base62-sha1=\"g0yluLtx2KDW1RE3vaFODRrdLKO\" width=\"690\" height=\"191\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/7/7032d0911b3f08e7c75217f1754e84b1b1fa747a_2_690x191.png, https://forum.typst.app/uploads/default/optimized/2X/7/7032d0911b3f08e7c75217f1754e84b1b1fa747a_2_1035x286.png 1.5x, https://forum.typst.app/uploads/default/optimized/2X/7/7032d0911b3f08e7c75217f1754e84b1b1fa747a_2_1380x382.png 2x\" data-dominant-color=\"FAFAFA\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-03-26 at 15.37.44</span><span class=\"informations\">2034×564 54.4 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "Using `block()` almost works, but it still seemed necessary to manually shift the diagram a bit with `move()`.\n```typ\n#import \"@local/fletcher:0.5.7\": diagram, node, edge\n#set math.equation(numbering: \"(1)\")\n\n#let fig = diagram(\n\tspacing:(3em,2em),\n\tlet (FXFY_FZ, FX_FYFZ, FXYFZ, FXY_Z, FXFYZ, FX_YZ) = ((0,0), ( 1,0), (0,1), (0,2), (1,1), (1,2)),\n\tnode(FXFY_FZ, $(F X times.circle F Y) times.circle F Z$),\n\tnode(FX_FYFZ, $F X times.circle (F Y times.circle F Z)$),\n\tnode(FXYFZ, $F(X times.circle Y) times.circle F Z$),\n\tnode(FXY_Z, $F((X times.circle Y) times.circle Z)$),\n\tnode(FXFYZ, $F X times.circle F(Y times.circle Z)$),\n\tnode(FX_YZ, $F(X times.circle (Y times.circle Z))$),\n\tedge(FXFY_FZ, FX_FYFZ, \"->\", $alpha$),\n\tedge(FXFY_FZ, FXYFZ, \"->\", $phi times.circle id$),\n\tedge(FXYFZ, FXY_Z, \"->\", $phi$),\n\tedge(FXY_Z, FX_YZ, \"->\", $F alpha$),\n\tedge(FX_FYFZ, FXFYZ, \"->\", $id times.circle phi$, left),\n\tedge(FXFYZ, FX_YZ, \"->\", $phi$, left),\n)\n\n$ \"before\" #block(move(dy: -0.66em, pad(x: 1em, fig))) \"after\" $\n```\n\n![Screenshot 2025-03-26 at 15.37.44|690x191](upload://g0yluLtx2KDW1RE3vaFODRrdLKO.png)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 27,
      "score": 35.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 713
    },
    {
      "id": 10294,
      "post_number": 3,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-03-26T16:20:40.961Z",
      "updated_at": "2025-03-26T17:37:48.567Z",
      "cooked": "<p>I remembered that there is a <code>baseline</code> field for <code>box</code>, which does work and might be good enough (as it’s a slightly simpler solution):</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">$ \"before\" #box(baseline: 3.8em, fig) \"after\" $\n</code></pre>\n<p>But it does mean that you have to level it manually, so it can be imprecise. Although <code>dy: -0.66em</code> also feels random, and I would think that <code>-0.65em</code> is the correct value since this is the default leading. But both are within 1 pixel of perfection, so it doesn’t really matter.</p>\n<p>P.S. <a class=\"mention\" href=\"/u/jollywatt\">@Jollywatt</a>, you are using the local package.</p>",
      "raw": "I remembered that there is a `baseline` field for `box`, which does work and might be good enough (as it's a slightly simpler solution):\n\n```typ\n$ \"before\" #box(baseline: 3.8em, fig) \"after\" $\n```\n\nBut it does mean that you have to level it manually, so it can be imprecise. Although `dy: -0.66em` also feels random, and I would think that `-0.65em` is the correct value since this is the default leading. But both are within 1 pixel of perfection, so it doesn't really matter.\n\nP.S. @Jollywatt, you are using the local package.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 25,
      "score": 20.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 10295,
      "post_number": 4,
      "username": "Kass",
      "name": "",
      "created_at": "2025-03-26T16:39:52.718Z",
      "updated_at": "2025-03-26T16:39:52.718Z",
      "cooked": "<p>Thank you very much, <a class=\"mention\" href=\"/u/jollywatt\">@Jollywatt</a> and <a class=\"mention\" href=\"/u/andrew\">@Andrew</a>, for your answers. As I see, I have to do it manually, but is there a way to get the dimensions of the diagram and then create a function to do it automatically?</p>",
      "raw": "Thank you very much, @Jollywatt and @Andrew, for your answers. As I see, I have to do it manually, but is there a way to get the dimensions of the diagram and then create a function to do it automatically?",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 14.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1391
    },
    {
      "id": 10296,
      "post_number": 5,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-03-26T17:42:06.499Z",
      "updated_at": "2025-03-26T17:42:06.499Z",
      "cooked": "<p>The <code>block</code>+<code>move</code> doesn’t do manual stuff, it’s just a correction. I think it would work for everything.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let mcenter(body) = block(move(dy: -0.66em, body))\n$ \"this\" mcenter(fig) \"that\" $\n</code></pre>",
      "raw": "The `block`+`move` doesn't do manual stuff, it's just a correction. I think it would work for everything.\n\n```typ\n#let mcenter(body) = block(move(dy: -0.66em, body))\n$ \"this\" mcenter(fig) \"that\" $\n```",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 24,
      "score": 34.8,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 10299,
      "post_number": 6,
      "username": "Jollywatt",
      "name": "Joseph Wilson",
      "created_at": "2025-03-26T18:29:50.126Z",
      "updated_at": "2025-03-26T18:29:50.126Z",
      "cooked": "<blockquote>\n<p>As I see, I have to do it manually.</p>\n</blockquote>\n<p>Like Andrew pointed out, you shouldn’t need to adjust <code>dy</code> even when the diagram changes size <img src=\"https://forum.typst.app/images/emoji/apple/+1.png?v=12\" title=\":+1:\" class=\"emoji\" alt=\":+1:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "> As I see, I have to do it manually.\n\nLike Andrew pointed out, you shouldn't need to adjust `dy` even when the diagram changes size 👍",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 24,
      "score": 24.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 713
    }
  ],
  "scraped_at": "2025-06-10T09:49:58.738691"
}