{
  "topic_metadata": {
    "id": 3107,
    "title": "How to draw CeTZ arc in x-z-plane?",
    "slug": "how-to-draw-cetz-arc-in-x-z-plane",
    "posts_count": 6,
    "created_at": "2025-03-04T21:36:38.405Z",
    "last_posted_at": "2025-03-05T22:35:41.614Z",
    "views": 135,
    "like_count": 3,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 4,
    "accepted_answer_username": "janekfleper",
    "tags": [
      "graphics",
      "cetz"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 407
  },
  "posts": [
    {
      "id": 9385,
      "post_number": 1,
      "username": "Johannes",
      "name": "Johannes",
      "created_at": "2025-03-04T21:36:38.488Z",
      "updated_at": "2025-03-08T21:17:18.889Z",
      "cooked": "<p>Hey, this probably has some very obvious solution that for some reason I can‘t seem to find. Is there a way to draw an arc in CeTZ, that’s on the x-z-plane. When i try arc-through and feed it points in that plane, i get an error. Thank you for your help!</p>",
      "raw": "Hey, this probably has some very obvious solution that for some reason I can‘t seem to find. Is there a way to draw an arc in CeTZ, that’s on the x-z-plane. When i try arc-through and feed it points in that plane, i get an error. Thank you for your help!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 37,
      "score": 407.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1129
    },
    {
      "id": 9386,
      "post_number": 2,
      "username": "Mathemensch",
      "name": "Alexander Schulz",
      "created_at": "2025-03-05T00:22:31.227Z",
      "updated_at": "2025-03-05T00:22:31.227Z",
      "cooked": "<p>Hi!</p>\n<p>Please provide a minimal code snippet of what you tried to do, so we can further investigate the error.</p>\n<p>Thanks. <img src=\"https://forum.typst.app/images/emoji/apple/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Hi!\n\nPlease provide a minimal code snippet of what you tried to do, so we can further investigate the error.\n\nThanks. :slight_smile:",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 37,
      "score": 12.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 307
    },
    {
      "id": 9407,
      "post_number": 3,
      "username": "Johannes",
      "name": "Johannes",
      "created_at": "2025-03-05T11:27:59.128Z",
      "updated_at": "2025-03-05T11:27:59.128Z",
      "cooked": "<p>Sorry it took me so long to get back to you - here‘s the code I tried:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">\n#cetz.canvas(\n  {import cetz.draw: *\n\n      // drawing reference axes\n      line((0, 0, 0), (0, 3, 0), name: \"axisY\", stroke: (paint: black, thickness: .7pt, dash: \"dashed\", cap: \"round\"))\n      line((0, 0, 0), (0, 0, 3), name: \"axisZ\", stroke: (paint: black, thickness: .7pt, dash: \"dashed\", cap: \"round\"))\n      line((0, 0, 0), (3, 0, 0), name: \"axisX\", stroke: (paint: black, thickness: .7pt, dash: \"dashed\", cap: \"round\"))\n\n      //labeling axes\n      content(\"axisZ.end\", [$z$], anchor: \"east\", padding: .1)\n      content(\"axisY.end\", [$y$], anchor: \"east\", padding: .1)\n      content(\"axisX.end\", [$x$], anchor: \"west\", padding: .1)\n\n      //drawing arc between z and x axis\n      arc-through((0, 0, 2), (calc.sqrt(2), 0, calc. sqrt(2)), (2, 0, 0))\n})\n\n</code></pre>",
      "raw": "Sorry it took me so long to get back to you - here‘s the code I tried:\n\n```typst\n\n#cetz.canvas(\n  {import cetz.draw: *\n\n      // drawing reference axes\n      line((0, 0, 0), (0, 3, 0), name: \"axisY\", stroke: (paint: black, thickness: .7pt, dash: \"dashed\", cap: \"round\"))\n      line((0, 0, 0), (0, 0, 3), name: \"axisZ\", stroke: (paint: black, thickness: .7pt, dash: \"dashed\", cap: \"round\"))\n      line((0, 0, 0), (3, 0, 0), name: \"axisX\", stroke: (paint: black, thickness: .7pt, dash: \"dashed\", cap: \"round\"))\n\n      //labeling axes\n      content(\"axisZ.end\", [$z$], anchor: \"east\", padding: .1)\n      content(\"axisY.end\", [$y$], anchor: \"east\", padding: .1)\n      content(\"axisX.end\", [$x$], anchor: \"west\", padding: .1)\n\n      //drawing arc between z and x axis\n      arc-through((0, 0, 2), (calc.sqrt(2), 0, calc. sqrt(2)), (2, 0, 0))\n})\n\n```",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 29,
      "score": 15.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1129
    },
    {
      "id": 9417,
      "post_number": 4,
      "username": "janekfleper",
      "name": "Janek Fleper",
      "created_at": "2025-03-05T15:13:16.489Z",
      "updated_at": "2025-03-05T15:13:27.968Z",
      "cooked": "<p>The function <code>arc-through()</code> does not seem to directly support drawing with three-dimensional coordinates. The example <a href=\"https://cetz-package.github.io/docs/api/draw-functions/shapes/arc/#arc-through\" rel=\"noopener nofollow ugc\">here</a> only uses xy-coordinates but the documentation does not directly state that the function can not have non-zero z-coordinates.</p>\n<p>Since you want to draw the arc in the xz-plane, you can use the projection function <a href=\"https://cetz-package.github.io/docs/api/draw-functions/projections/on-xz\" rel=\"noopener nofollow ugc\"><code>on-xz</code></a>. This will “promote” your arc points from 2D to 3D according to (x, y) → (x, 0, y).</p>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">// drawing arc between z and x axis\non-xz(arc-through((0, 2), (calc.sqrt(2), calc.sqrt(2)), (2, 0)))\n</code></pre>",
      "raw": "The function `arc-through()` does not seem to directly support drawing with three-dimensional coordinates. The example [here](https://cetz-package.github.io/docs/api/draw-functions/shapes/arc/#arc-through) only uses xy-coordinates but the documentation does not directly state that the function can not have non-zero z-coordinates.\n\nSince you want to draw the arc in the xz-plane, you can use the projection function [`on-xz`](https://cetz-package.github.io/docs/api/draw-functions/projections/on-xz). This will \"promote\" your arc points from 2D to 3D according to (x, y) -> (x, 0, y).\n\n```typc\n// drawing arc between z and x axis\non-xz(arc-through((0, 2), (calc.sqrt(2), calc.sqrt(2)), (2, 0)))\n```",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 26,
      "score": 20.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 69
    },
    {
      "id": 9419,
      "post_number": 5,
      "username": "Johannes",
      "name": "Johannes",
      "created_at": "2025-03-05T20:50:02.005Z",
      "updated_at": "2025-03-05T20:50:02.005Z",
      "cooked": "<p>Thanks, that should work. On another note - would you happen to have such a handy solution for when I‘m trying to draw an arc outside any base plane?</p>",
      "raw": "Thanks, that should work. On another note - would you happen to have such a handy solution for when I‘m trying to draw an arc outside any base plane?",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 23,
      "score": 9.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1129
    },
    {
      "id": 9422,
      "post_number": 6,
      "username": "janekfleper",
      "name": "Janek Fleper",
      "created_at": "2025-03-05T22:35:41.614Z",
      "updated_at": "2025-03-05T22:35:41.614Z",
      "cooked": "<p>Looking at the available projection functions, I think <a href=\"https://cetz-package.github.io/docs/api/draw-functions/projections/ortho\" rel=\"noopener nofollow ugc\"><code>ortho()</code></a> is what you would be looking for. In the example they use <code>on-xz()</code> to draw a rectangle in the xz-plane which is then “rotated” by the <code>ortho()</code> function.</p>",
      "raw": "Looking at the available projection functions, I think [`ortho()`](https://cetz-package.github.io/docs/api/draw-functions/projections/ortho) is what you would be looking for. In the example they use `on-xz()` to draw a rectangle in the xz-plane which is then \"rotated\" by the `ortho()` function.",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 23,
      "score": 34.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 69
    }
  ],
  "scraped_at": "2025-06-10T09:50:43.108403"
}