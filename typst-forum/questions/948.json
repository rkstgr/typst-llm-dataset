{
  "topic_metadata": {
    "id": 948,
    "title": "How can I right align the QED symbol after a proof?",
    "slug": "how-can-i-right-align-the-qed-symbol-after-a-proof",
    "posts_count": 6,
    "created_at": "2024-10-05T15:30:50.960Z",
    "last_posted_at": "2024-10-06T08:39:46.663Z",
    "views": 724,
    "like_count": 7,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 4,
    "accepted_answer_username": "laurmaedje",
    "tags": [
      "layout"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 699
  },
  "posts": [
    {
      "id": 3458,
      "post_number": 1,
      "username": "lukejanicke",
      "name": "Luke Janicke",
      "created_at": "2024-10-05T15:30:51.375Z",
      "updated_at": "2024-10-05T15:53:48.955Z",
      "cooked": "<p>The <code>#align</code> function puts it on a new line. I am trying to have it on the last line.</p>\n<p>The code below is so close. But there is a small amount of space added after the last line. The background colour is added to illustrate this. If I remove the QED <code>#place</code> code, the box finishes right under the last line. <strong>Where is this extra vertical space coming from?</strong> I also don’t know exactly how much negative <code>dy</code> offset is needed to line up perfectly with the last line.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let proof(body) = {\n  block(\n    width: 100%,\n    fill: rgb(\"#EEEEEE\"),\n  )[\n    #emph[Proof.]\n    #body\n    #place(\n      bottom + right,\n      float: true,\n      clearance: 0em,\n      dx: 0em,\n      dy: -0.6em,\n      $qed$\n    )\n  ]\n}\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/1X/d4d429f63a4f3bbce4b0acf6f390af33164df4dc.png\" data-download-href=\"https://forum.typst.app/uploads/default/d4d429f63a4f3bbce4b0acf6f390af33164df4dc\" title=\"Screenshot 2024-10-05 at 23.31.33\"><img src=\"https://forum.typst.app/uploads/default/optimized/1X/d4d429f63a4f3bbce4b0acf6f390af33164df4dc_2_690x43.png\" alt=\"Screenshot 2024-10-05 at 23.31.33\" data-base62-sha1=\"umLMxaH2ZibnDkaq7xuLLvtwQIQ\" width=\"690\" height=\"43\" srcset=\"https://forum.typst.app/uploads/default/optimized/1X/d4d429f63a4f3bbce4b0acf6f390af33164df4dc_2_690x43.png, https://forum.typst.app/uploads/default/original/1X/d4d429f63a4f3bbce4b0acf6f390af33164df4dc.png 1.5x, https://forum.typst.app/uploads/default/original/1X/d4d429f63a4f3bbce4b0acf6f390af33164df4dc.png 2x\" data-dominant-color=\"EBEBEB\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2024-10-05 at 23.31.33</span><span class=\"informations\">884×56 14.1 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "The `#align` function puts it on a new line. I am trying to have it on the last line.\n\nThe code below is so close. But there is a small amount of space added after the last line. The background colour is added to illustrate this. If I remove the QED `#place` code, the box finishes right under the last line. **Where is this extra vertical space coming from?** I also don't know exactly how much negative `dy` offset is needed to line up perfectly with the last line.\n\n```typ\n#let proof(body) = {\n  block(\n    width: 100%,\n    fill: rgb(\"#EEEEEE\"),\n  )[\n    #emph[Proof.]\n    #body\n    #place(\n      bottom + right,\n      float: true,\n      clearance: 0em,\n      dx: 0em,\n      dy: -0.6em,\n      $qed$\n    )\n  ]\n}\n```\n\n![Screenshot 2024-10-05 at 23.31.33|690x43](upload://umLMxaH2ZibnDkaq7xuLLvtwQIQ.png)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 60,
      "score": 3201.8,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 544
    },
    {
      "id": 3460,
      "post_number": 2,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2024-10-05T15:58:15.513Z",
      "updated_at": "2024-10-05T15:58:15.513Z",
      "cooked": "<p>Since you have the <code>float</code> parameter enabled, the <code>place</code> element will reserve some space at the bottom of the block to fit the QED symbol. The negative <code>dy</code> offset is only applied afterwards, so the space remains.</p>\n<p>It seems to me, that you don’t actually need this to be floating. When you just do</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#place(bottom + right, $qed$)\n</code></pre>\n<p>the QED symbol will still be positioned at the bottom right of the block.</p>",
      "raw": "Since you have the `float` parameter enabled, the `place` element will reserve some space at the bottom of the block to fit the QED symbol. The negative `dy` offset is only applied afterwards, so the space remains.\n\nIt seems to me, that you don't actually need this to be floating. When you just do\n```typ\n#place(bottom + right, $qed$)\n```\nthe QED symbol will still be positioned at the bottom right of the block.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 59,
      "score": 61.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 3461,
      "post_number": 3,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2024-10-05T16:06:32.301Z",
      "updated_at": "2024-10-05T16:06:32.301Z",
      "cooked": "<p>Although <code>float</code> is the problem with your <code>place()</code>, I would recomment an even simpler solution, using <code>h()</code>:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let proof(body) = {\n  block(\n    width: 100%,\n    fill: rgb(\"#EEEEEE\"),\n  )[\n    _Proof._\n    #body\n    #h(1fr)\n    $qed$\n  ]\n}\n</code></pre>\n<p>This puts the QED symbol into the actual last line of the proof, and should therefore have the correct y position. The difference to the place variant is minuscule, though.</p>",
      "raw": "Although `float` is the problem with your `place()`, I would recomment an even simpler solution, using `h()`:\n```typ\n#let proof(body) = {\n  block(\n    width: 100%,\n    fill: rgb(\"#EEEEEE\"),\n  )[\n    _Proof._\n    #body\n    #h(1fr)\n    $qed$\n  ]\n}\n```\nThis puts the QED symbol into the actual last line of the proof, and should therefore have the correct y position. The difference to the place variant is minuscule, though.",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 60,
      "score": 31.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 3464,
      "post_number": 4,
      "username": "laurmaedje",
      "name": "Laurenz Mädje",
      "created_at": "2024-10-05T17:50:54.026Z",
      "updated_at": "2024-10-29T13:04:06.420Z",
      "cooked": "<p>One unfortunate edge case with this solution is if the QED symbol doesn’t fit into the last line. Then, the <code>h(1fr)</code> remains in the second-to-last line and the QED symbol is on the left side of the last line.</p>\n<p>A possible fix is adding a Unicode Word Joiner (<code>sym.wj</code>) after the spacing.</p>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">#let proof(body) = block(width: 100%, fill: rgb(\"#EEEEEE\"), {\n  [_Proof._ ]\n  body\n  h(1fr)\n  sym.wj\n  sym.space.nobreak\n  $qed$\n})\n</code></pre>\n<p>However, this also forces the last preceding word to the next line. <em>If</em> this is not desirable, one could add a zero-width box before the spacing (which will then be forced to the next line instead of the last word, to no visible effect).</p>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">#let proof(body) = block(width: 100%, fill: rgb(\"#EEEEEE\"), {\n  [_Proof._ ]\n  body\n  box(width: 0pt)\n  h(1fr)\n  sym.wj\n  sym.space.nobreak\n  $qed$\n})\n</code></pre>\n<p>This is obviously somewhat obscure and requires intricate knowledge of Unicode and Typst’s paragraph layout. I also only came up with this solution now even though I’ve thought about this problem a few times before. I’m not 100% sure whether there are cases where it doesn’t work correctly, but it any case it felt worth sharing.</p>\n<p>Edit: Added nobreak spaces to ensure that there is a minimum amount of space before the proof square.</p>",
      "raw": "One unfortunate edge case with this solution is if the QED symbol doesn't fit into the last line. Then, the `h(1fr)` remains in the second-to-last line and the QED symbol is on the left side of the last line.\n\nA possible fix is adding a Unicode Word Joiner (`sym.wj`) after the spacing.\n```typc\n#let proof(body) = block(width: 100%, fill: rgb(\"#EEEEEE\"), {\n  [_Proof._ ]\n  body\n  h(1fr)\n  sym.wj\n  sym.space.nobreak\n  $qed$\n})\n```\n\nHowever, this also forces the last preceding word to the next line. _If_ this is not desirable, one could add a zero-width box before the spacing (which will then be forced to the next line instead of the last word, to no visible effect).\n```typc\n#let proof(body) = block(width: 100%, fill: rgb(\"#EEEEEE\"), {\n  [_Proof._ ]\n  body\n  box(width: 0pt)\n  h(1fr)\n  sym.wj\n  sym.space.nobreak\n  $qed$\n})\n```\n\nThis is obviously somewhat obscure and requires intricate knowledge of Unicode and Typst's paragraph layout. I also only came up with this solution now even though I've thought about this problem a few times before. I'm not 100% sure whether there are cases where it doesn't work correctly, but it any case it felt worth sharing.\n\nEdit: Added nobreak spaces to ensure that there is a minimum amount of space before the proof square.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 6,
      "reads": 58,
      "score": 741.4,
      "accepted_answer": true,
      "trust_level": 4,
      "user_id": 2
    },
    {
      "id": 3476,
      "post_number": 5,
      "username": "lukejanicke",
      "name": "Luke Janicke",
      "created_at": "2024-10-06T03:16:17.127Z",
      "updated_at": "2024-10-06T04:03:57.762Z",
      "cooked": "<p>Thanks for these suggestions!</p>\n<p>Eric, that works! The only issue is the last characters of the proof write under the floating QED symbol. I solved that by adding an invisible QED symbol at the end of the line. A bit hacky. But it works. I also confirmed that the vertical alignment is pixel perfect the same as the inline invisible QED symbol. Which is nice to know.</p>\n<p>SillyFreak, that works except as laurmaedje noted. It at least makes more typographic sense than <code>#place</code> and float right. Maybe? Although, the float method as I implemented is pixel perfect identical vertical positioning.</p>\n<p>laurmaedje, that all seems to work perfectly for me, except <s>Typst is throwing errors and</s> it only works when I make the proof equal a block <code>proof(body) = block( ... , { content } )</code> and not when I put the block in the proof <code>#let proof(body) = { block( ... ) [ content ] }</code>.  I think that is code mode vs. markup mode.</p>\n<p>Sharing my testing code here: <a href=\"https://typst.app/project/rZPqTDi0wu3N0yIB8XQtQW\">Proof</a></p>",
      "raw": "Thanks for these suggestions!\n\nEric, that works! The only issue is the last characters of the proof write under the floating QED symbol. I solved that by adding an invisible QED symbol at the end of the line. A bit hacky. But it works. I also confirmed that the vertical alignment is pixel perfect the same as the inline invisible QED symbol. Which is nice to know.\n\nSillyFreak, that works except as laurmaedje noted. It at least makes more typographic sense than `#place` and float right. Maybe? Although, the float method as I implemented is pixel perfect identical vertical positioning.\n\nlaurmaedje, that all seems to work perfectly for me, except ~~Typst is throwing errors and~~ it only works when I make the proof equal a block `proof(body) = block( ... , { content } )` and not when I put the block in the proof `#let proof(body) = { block( ... ) [ content ] }`.  I think that is code mode vs. markup mode.\n\nSharing my testing code here: [Proof](https://typst.app/project/rZPqTDi0wu3N0yIB8XQtQW)",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 55,
      "score": 65.8,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 544
    },
    {
      "id": 3479,
      "post_number": 6,
      "username": "laurmaedje",
      "name": "Laurenz Mädje",
      "created_at": "2024-10-06T08:39:46.663Z",
      "updated_at": "2024-10-06T08:39:46.663Z",
      "cooked": "<p>Yes indeed, I used code mode because otherwise there will be extra spaces around the word joiner. Markup mode should also be possible, but you would need to write the things tightly after each other and use a semicolon to terminate the word joiner.</p>",
      "raw": "Yes indeed, I used code mode because otherwise there will be extra spaces around the word joiner. Markup mode should also be possible, but you would need to write the things tightly after each other and use a semicolon to terminate the word joiner.",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 47,
      "score": 29.2,
      "accepted_answer": false,
      "trust_level": 4,
      "user_id": 2
    }
  ],
  "scraped_at": "2025-06-10T09:57:19.806246"
}