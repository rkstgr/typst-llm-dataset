{
  "topic_metadata": {
    "id": 1158,
    "title": "How can I convert a string to a number",
    "slug": "how-can-i-convert-a-string-to-a-number",
    "posts_count": 6,
    "created_at": "2024-10-17T06:54:27.405Z",
    "last_posted_at": "2024-10-17T14:04:18.789Z",
    "views": 538,
    "like_count": 0,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 6,
    "accepted_answer_username": "mgholam",
    "tags": [
      "scripting"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 411
  },
  "posts": [
    {
      "id": 4051,
      "post_number": 1,
      "username": "mgholam",
      "name": "mgholam",
      "created_at": "2024-10-17T06:54:27.523Z",
      "updated_at": "2024-10-17T14:14:49.397Z",
      "cooked": "<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let s=\"123\"\n#let i = ?? // what goes here\n</code></pre>",
      "raw": "```typ\n#let s=\"123\"\n#let i = ?? // what goes here\n```",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 58,
      "score": 2681.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 608
    },
    {
      "id": 4053,
      "post_number": 2,
      "username": "alimgyeniyt",
      "name": "Alimgyehr Uuhniyt",
      "created_at": "2024-10-17T07:28:55.161Z",
      "updated_at": "2024-10-17T07:28:55.161Z",
      "cooked": "<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let w = \"123\"\n#let x = \"123.6\"\n#let y = int(w) // this is for integers, it will error if you give a float\n#let z = float(x) // this also works for integers\n\n#x \\ // this is just the string\n#(y + z) // you can do operations on the numbers\n#y // or use them as is\n</code></pre>\n<p>as a tip, you can find functions like this in the documentation by searching for the data type (e.g. integer, string, float…).</p>",
      "raw": "```typ\n#let w = \"123\"\n#let x = \"123.6\"\n#let y = int(w) // this is for integers, it will error if you give a float\n#let z = float(x) // this also works for integers\n\n#x \\ // this is just the string\n#(y + z) // you can do operations on the numbers\n#y // or use them as is\n```\n\nas a tip, you can find functions like this in the documentation by searching for the data type (e.g. integer, string, float...).",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 57,
      "score": 41.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 605
    },
    {
      "id": 4100,
      "post_number": 3,
      "username": "mgholam",
      "name": "mgholam",
      "created_at": "2024-10-17T13:20:52.322Z",
      "updated_at": "2024-10-17T13:56:03.927Z",
      "cooked": "<p>thanks, but I have the following bit of code:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/oxifmt:0.2.1\": strfmt\n#show table.cell.where(y:0):set text(weight:\"extrabold\")\n#show table.cell: it =&gt; {\n  if it.y&gt;0 {\n\t\tlet ss = it.body.text\n\t\tif ss.contains(\"[a-zA-Z]\") == false{\n\t\t\tlet ii = int(ss)\n\t\t\tstrfmt(\"{}\", ii, fmt-thousands-separator: \",\")\n\t\t}else{\n\t\t\tit\n\t\t}\n  } else{\n    it\n  }\n}\n#let results = csv.decode(\"\nHeader1,Header2,Header3\nA,B,231\nC,D,2312\nE,F,4546\nG,H,6786\n\")\n#let (header, ..data) = results\n#table(\n\tinset: (x:1em,y:1em),\n\tcolumns: header.map(x=&gt;1fr),\n\tstroke: none,\n\tfill: (x, y) =&gt; if calc.odd(y)  { rgb(\"#eee\") },\n\n\ttable.hline(),\n\ttable.header(..header),\n\ttable.hline(),\n\n\t..data.flatten(),\n\ttable.hline()\n)\n</code></pre>\n<p>and I get error like</p>\n<pre><code class=\"lang-auto\">error: invalid integer: A\n  ┌─ test.typ:7:16\n  │\n7 │       let ii = int(ss)\n  │                    ^^\n</code></pre>\n<p>Which imply the string checking is not working, is there any way to tryParse() a number?</p>",
      "raw": "thanks, but I have the following bit of code:\n```typ\n#import \"@preview/oxifmt:0.2.1\": strfmt\n#show table.cell.where(y:0):set text(weight:\"extrabold\")\n#show table.cell: it => {\n  if it.y>0 {\n\t\tlet ss = it.body.text\n\t\tif ss.contains(\"[a-zA-Z]\") == false{\n\t\t\tlet ii = int(ss)\n\t\t\tstrfmt(\"{}\", ii, fmt-thousands-separator: \",\")\n\t\t}else{\n\t\t\tit\n\t\t}\n  } else{\n    it\n  }\n}\n#let results = csv.decode(\"\nHeader1,Header2,Header3\nA,B,231\nC,D,2312\nE,F,4546\nG,H,6786\n\")\n#let (header, ..data) = results\n#table(\n\tinset: (x:1em,y:1em),\n\tcolumns: header.map(x=>1fr),\n\tstroke: none,\n\tfill: (x, y) => if calc.odd(y)  { rgb(\"#eee\") },\n\n\ttable.hline(),\n\ttable.header(..header),\n\ttable.hline(),\n\n\t..data.flatten(),\n\ttable.hline()\n)\n```\nand I get error like\n```\nerror: invalid integer: A\n  ┌─ test.typ:7:16\n  │\n7 │       let ii = int(ss)\n  │                    ^^\n```\nWhich imply the string checking is not working, is there any way to tryParse() a number?",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 49,
      "score": 29.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 608
    },
    {
      "id": 4101,
      "post_number": 4,
      "username": "xkevio",
      "name": "Kevio",
      "created_at": "2024-10-17T13:24:29.925Z",
      "updated_at": "2024-10-17T13:24:29.925Z",
      "cooked": "<p>That is because your <code>if ss.contains(\"[a-zA-Z]\")</code> check is wrong, you’re not using regex here but literally checking for the string <code>\"[a-zA-Z]\"</code>. If you wrap it with <code>regex(\"[a-zA-Z]\")</code>, it works.</p>\n<p>PS: You can use `​``typ``` to mark your code blocks to use Typst syntax highlighting, it will look a lot better!</p>",
      "raw": "That is because your `if ss.contains(\"[a-zA-Z]\")` check is wrong, you're not using regex here but literally checking for the string `\"[a-zA-Z]\"`. If you wrap it with `regex(\"[a-zA-Z]\")`, it works.\n\nPS: You can use `​``typ``` to mark your code blocks to use Typst syntax highlighting, it will look a lot better!",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 37,
      "score": 22.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 21
    },
    {
      "id": 4104,
      "post_number": 5,
      "username": "mgholam",
      "name": "mgholam",
      "created_at": "2024-10-17T13:55:31.456Z",
      "updated_at": "2024-10-17T13:55:31.456Z",
      "cooked": "<p>Thanks a lot!</p>\n<p>The documentation was not clear on this.</p>",
      "raw": "Thanks a lot!\n\nThe documentation was not clear on this.",
      "reply_to_post_number": 4,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 35,
      "score": 27.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 608
    },
    {
      "id": 4105,
      "post_number": 6,
      "username": "mgholam",
      "name": "mgholam",
      "created_at": "2024-10-17T14:04:18.789Z",
      "updated_at": "2024-10-17T14:04:18.789Z",
      "cooked": "<p>Refactored the code to be more robust and not have side effects:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/oxifmt:0.2.1\": strfmt\n#show table.cell.where(y:0):set text(weight:\"extrabold\")\n#let results = csv.decode(\"\nHeader1,Header2,Header3\nA,B,231\nC,D,2312\nE,F,4546\nG,H,6786\n\")\n#let (header, ..data) = results\n#table(\n\tinset: (x:1em,y:1em),\n\tcolumns: header.map(x=&gt;1fr),\n\tstroke: none,\n\tfill: (x, y) =&gt; if calc.odd(y)  { rgb(\"#eee\") },\n\n\ttable.hline(),\n\ttable.header(..header),\n\ttable.hline(),\n\n\t..data.flatten().map(x=&gt;{\n    if x.contains(regex(\"\\D\")) == false{\n        let ii = float(x)\n        strfmt(\"{}\", ii, fmt-thousands-separator: \",\")\n      }else{\n        x\n      }\n  }),\n\ttable.hline()\n)\n</code></pre>",
      "raw": "Refactored the code to be more robust and not have side effects:\n```typ\n#import \"@preview/oxifmt:0.2.1\": strfmt\n#show table.cell.where(y:0):set text(weight:\"extrabold\")\n#let results = csv.decode(\"\nHeader1,Header2,Header3\nA,B,231\nC,D,2312\nE,F,4546\nG,H,6786\n\")\n#let (header, ..data) = results\n#table(\n\tinset: (x:1em,y:1em),\n\tcolumns: header.map(x=>1fr),\n\tstroke: none,\n\tfill: (x, y) => if calc.odd(y)  { rgb(\"#eee\") },\n\n\ttable.hline(),\n\ttable.header(..header),\n\ttable.hline(),\n\n\t..data.flatten().map(x=>{\n    if x.contains(regex(\"\\D\")) == false{\n        let ii = float(x)\n        strfmt(\"{}\", ii, fmt-thousands-separator: \",\")\n      }else{\n        x\n      }\n  }),\n\ttable.hline()\n)\n```",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 35,
      "score": 72.0,
      "accepted_answer": true,
      "trust_level": 1,
      "user_id": 608
    }
  ],
  "scraped_at": "2025-06-10T09:56:38.597186"
}