{
  "topic_metadata": {
    "id": 4044,
    "title": "How to distribute column widths equally for specific rows in a table?",
    "slug": "how-to-distribute-column-widths-equally-for-specific-rows-in-a-table",
    "posts_count": 9,
    "created_at": "2025-05-12T10:09:51.993Z",
    "last_posted_at": "2025-05-13T22:09:42.060Z",
    "views": 111,
    "like_count": 7,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 4,
    "accepted_answer_username": "Andrew",
    "tags": [
      "tables"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 2345
  },
  "posts": [
    {
      "id": 12329,
      "post_number": 1,
      "username": "BigBigi",
      "name": "BigBigi",
      "created_at": "2025-05-12T10:09:52.138Z",
      "updated_at": "2025-05-14T21:39:16.852Z",
      "cooked": "<p>Hi everyone,</p>\n<p>I’m trying to create a taxonomy table in Typst that has two main parts per row:</p>\n<ol>\n<li>A <strong>dimension</strong> column on the left: same layout for every row.</li>\n<li>A <strong>characteristics</strong> section on the right: varies per row in terms of how many columns are needed.</li>\n</ol>\n<p>I am trying to achieve that the dimension column should keep its width automatically based on the text. For the characteristic columns, the remaining space should be equally distributed for each row.</p>\n<p>In Word, it’s quite simple:</p>\n<ul>\n<li>Create a table with the max number of columns,</li>\n<li>Merge any extra cells in rows with fewer characteristics,</li>\n<li>Select the relevant cells and click “Distribute Columns”. Word automatically spreads the content evenly across the available space. Here is how it should look (the relevant part is marked red):<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/2/28466c679646e26603ad9004b8a93321be10f787.png\" data-download-href=\"https://forum.typst.app/uploads/default/28466c679646e26603ad9004b8a93321be10f787\" title=\"Screenshot 2025-05-12 120657\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/2/28466c679646e26603ad9004b8a93321be10f787_2_690x258.png\" alt=\"Screenshot 2025-05-12 120657\" data-base62-sha1=\"5KhYMyZxxfVGX11a7Bfczb1wziL\" width=\"690\" height=\"258\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/2/28466c679646e26603ad9004b8a93321be10f787_2_690x258.png, https://forum.typst.app/uploads/default/optimized/2X/2/28466c679646e26603ad9004b8a93321be10f787_2_1035x387.png 1.5x, https://forum.typst.app/uploads/default/original/2X/2/28466c679646e26603ad9004b8a93321be10f787.png 2x\" data-dominant-color=\"D9D1D1\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-05-12 120657</span><span class=\"informations\">1310×490 50.4 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></li>\n</ul>\n<p>I’d like to replicate this behavior in Typst but I am a new user. I’ve experimented with <code>table()</code>, but I’m struggling to automatically size the first (dimension) column and then <strong>equally divide</strong> the remaining space per row based on how many characteristic cells exist in that row. Also, some cells use rotated (90°) text, which adds to the layout complexity.</p>\n<p>Is there a way to:</p>\n<ul>\n<li>Use <code>auto</code> width for the first column,</li>\n<li>Dynamically calculate and distribute the remaining width across a variable number of columns per row?</li>\n</ul>\n<p>Here is a simplified example of what I’m currently working with:</p>\n<pre><code class=\"lang-auto\">#show table: set text(9pt)\n#pad(x: -3.5em,\n    table(\n        columns: 8,\n        align: center + horizon,\n        stroke: 0.5pt,\n        table.cell(colspan: 3, fill: black, text([*Dimension*], fill: white)),\n        table.vline(start: 1, stroke: 1pt),\n        table.cell(colspan: 5, fill: black, text([*Characteristic*], fill: white)),\n        table.cell(rowspan: 6, rotate(-90deg, reflow: true,[Technical])),\n        table.cell(rowspan: 3, rotate(-90deg, reflow: true,[Interaction])),\n        [*Input*],\n        [Text],\n        [Image],\n        [Audio],\n        table.cell(colspan: 2)[Video],\n        [*Output*],\n        [Text],\n        [Image],\n        [Audio],\n        [Video],\n        [3D-Model],\n        [*Interface*],\n        [Web],\n        [Mobile],\n        [Desktop],\n        [API],\n        [Integrated],\n        table.cell(rowspan: 2, rotate(-90deg, reflow: true,[Work])),\n        [*Type of task*],\n        [Information processing],\n        [Problem solving],\n        [Social],\n        table.cell(colspan: 2)[Physical],\n        [*Method*],\n        [Autonom],\n        [Teamwork],\n        table.cell(colspan: 3)[Routine],\n        table.cell(rowspan: 1, rotate(-90deg, reflow: true,[Use cases])),\n        [*AI use*],\n        [Generation of text],\n        [Programming],\n        [Translation],\n        [Research and education],\n        [Inspiration and creativity],\n    )\n)\n</code></pre>\n<p>This would be the current output:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/c/c00f0a2a9c4bbc18251efb0577842b244f7076fe.png\" data-download-href=\"https://forum.typst.app/uploads/default/c00f0a2a9c4bbc18251efb0577842b244f7076fe\" title=\"Screenshot 2025-05-12 120514\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/c/c00f0a2a9c4bbc18251efb0577842b244f7076fe_2_690x231.png\" alt=\"Screenshot 2025-05-12 120514\" data-base62-sha1=\"rp1TB9vbdMSp8dovzE2C1TjSNm6\" width=\"690\" height=\"231\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/c/c00f0a2a9c4bbc18251efb0577842b244f7076fe_2_690x231.png, https://forum.typst.app/uploads/default/original/2X/c/c00f0a2a9c4bbc18251efb0577842b244f7076fe.png 1.5x, https://forum.typst.app/uploads/default/original/2X/c/c00f0a2a9c4bbc18251efb0577842b244f7076fe.png 2x\" data-dominant-color=\"E0E0E0\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Screenshot 2025-05-12 120514</span><span class=\"informations\">1002×336 30.4 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>Any suggestions or examples would be greatly appreciated! Thanks in advance.</p>",
      "raw": "Hi everyone,\n\nI'm trying to create a taxonomy table in Typst that has two main parts per row:\n\n1. A **dimension** column on the left: same layout for every row.\n2. A **characteristics** section on the right: varies per row in terms of how many columns are needed.\n\nI am trying to achieve that the dimension column should keep its width automatically based on the text. For the characteristic columns, the remaining space should be equally distributed for each row.\n\n\nIn Word, it's quite simple:\n* Create a table with the max number of columns,\n* Merge any extra cells in rows with fewer characteristics,\n* Select the relevant cells and click “Distribute Columns”. Word automatically spreads the content evenly across the available space. Here is how it should look (the relevant part is marked red):\n![Screenshot 2025-05-12 120657|690x258](upload://5KhYMyZxxfVGX11a7Bfczb1wziL.png)\n\n\n\nI’d like to replicate this behavior in Typst but I am a new user. I’ve experimented with `table()`, but I’m struggling to automatically size the first (dimension) column and then **equally divide** the remaining space per row based on how many characteristic cells exist in that row. Also, some cells use rotated (90°) text, which adds to the layout complexity.\n\nIs there a way to:\n\n* Use `auto` width for the first column,\n* Dynamically calculate and distribute the remaining width across a variable number of columns per row?\n\nHere is a simplified example of what I'm currently working with:\n\n\n```\n#show table: set text(9pt)\n#pad(x: -3.5em,\n    table(\n        columns: 8,\n        align: center + horizon,\n        stroke: 0.5pt,\n        table.cell(colspan: 3, fill: black, text([*Dimension*], fill: white)),\n        table.vline(start: 1, stroke: 1pt),\n        table.cell(colspan: 5, fill: black, text([*Characteristic*], fill: white)),\n        table.cell(rowspan: 6, rotate(-90deg, reflow: true,[Technical])),\n        table.cell(rowspan: 3, rotate(-90deg, reflow: true,[Interaction])),\n        [*Input*],\n        [Text],\n        [Image],\n        [Audio],\n        table.cell(colspan: 2)[Video],\n        [*Output*],\n        [Text],\n        [Image],\n        [Audio],\n        [Video],\n        [3D-Model],\n        [*Interface*],\n        [Web],\n        [Mobile],\n        [Desktop],\n        [API],\n        [Integrated],\n        table.cell(rowspan: 2, rotate(-90deg, reflow: true,[Work])),\n        [*Type of task*],\n        [Information processing],\n        [Problem solving],\n        [Social],\n        table.cell(colspan: 2)[Physical],\n        [*Method*],\n        [Autonom],\n        [Teamwork],\n        table.cell(colspan: 3)[Routine],\n        table.cell(rowspan: 1, rotate(-90deg, reflow: true,[Use cases])),\n        [*AI use*],\n        [Generation of text],\n        [Programming],\n        [Translation],\n        [Research and education],\n        [Inspiration and creativity],\n    )\n)\n```\nThis would be the current output:\n![Screenshot 2025-05-12 120514|690x231](upload://rp1TB9vbdMSp8dovzE2C1TjSNm6.png)\n\nAny suggestions or examples would be greatly appreciated! Thanks in advance.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 21,
      "score": 154.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1583
    },
    {
      "id": 12339,
      "post_number": 2,
      "username": "janekfleper",
      "name": "Janek Fleper",
      "created_at": "2025-05-12T12:48:18.127Z",
      "updated_at": "2025-05-12T13:06:28.729Z",
      "cooked": "<p>You could use a grid for each row of the column of distributed cells. You would then treat everything as a single cell from the perspective of the table. This allows you to distribute the cells without measuring anything (other than the number of cells/elements in each row).</p>\n<p>Some notes/warnings and things I have noticed so far:</p>\n<ol>\n<li>You have to share the style of the table with the grid inside the function <code>distributed-cells()</code>. This is not an issue as long as you use variables for align, stroke, inset etc…</li>\n<li>The outer stroke of the distribute cells is currently drawn by the table and the grid. I don’t know if my brain is playing tricks on me here, but it does look like the lines are too thick. If that is bothering you as well, you can only draw the inner lines in the grid.</li>\n<li>Currently the table will collapse if your page width is set to auto since both the column widths inside the grid and the width of the column “Characteristic” in the table use the fractional length <code>1fr</code>. This will not be an issue if your paper size is set to A4 or if you are wrapping the table in a block to specify the width.</li>\n</ol>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let distribute-cells(..cells) = table.cell(inset: 0pt,\n  grid(\n    columns: (1fr,) * cells.pos().len(),\n    align: center + horizon,\n    stroke: 1pt,\n    inset: 5pt,\n    ..cells,\n  )\n)\n\n#table(\n  columns: (auto, 1fr),\n  align: center + horizon,\n  stroke: 1pt,\n  table.header(\"Dimension\", \"Characteristic\"),\n  \"Input\", distribute-cells(\"Text\", \"Image\", \"Audio\", \"Video\"),\n  \"Output\", distribute-cells(\"Text\", \"Image\", \"Audio\", \"Video\", \"3D-Model\"),\n  \"Type of task\", distribute-cells(\"Information processing\", \"Problem solving\", \"Social\", \"Physical\"),\n)\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/b/b44a972cbc94716c5da19e243f3c3c56b028c115.png\" data-download-href=\"https://forum.typst.app/uploads/default/b44a972cbc94716c5da19e243f3c3c56b028c115\" title=\"forum_4044_distribute-columns-in-table\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/b/b44a972cbc94716c5da19e243f3c3c56b028c115_2_690x167.png\" alt=\"forum_4044_distribute-columns-in-table\" data-base62-sha1=\"pIVKKWeWEhANT8QabP3X6y17f9j\" width=\"690\" height=\"167\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/b/b44a972cbc94716c5da19e243f3c3c56b028c115_2_690x167.png, https://forum.typst.app/uploads/default/original/2X/b/b44a972cbc94716c5da19e243f3c3c56b028c115.png 1.5x, https://forum.typst.app/uploads/default/original/2X/b/b44a972cbc94716c5da19e243f3c3c56b028c115.png 2x\" data-dominant-color=\"E6E6E6\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">forum_4044_distribute-columns-in-table</span><span class=\"informations\">850×206 75.4 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "You could use a grid for each row of the column of distributed cells. You would then treat everything as a single cell from the perspective of the table. This allows you to distribute the cells without measuring anything (other than the number of cells/elements in each row).\n\nSome notes/warnings and things I have noticed so far:\n1. You have to share the style of the table with the grid inside the function `distributed-cells()`. This is not an issue as long as you use variables for align, stroke, inset etc...\n2. The outer stroke of the distribute cells is currently drawn by the table and the grid. I don't know if my brain is playing tricks on me here, but it does look like the lines are too thick. If that is bothering you as well, you can only draw the inner lines in the grid.\n3. Currently the table will collapse if your page width is set to auto since both the column widths inside the grid and the width of the column \"Characteristic\" in the table use the fractional length `1fr`. This will not be an issue if your paper size is set to A4 or if you are wrapping the table in a block to specify the width.\n\n```typ\n#let distribute-cells(..cells) = table.cell(inset: 0pt,\n  grid(\n    columns: (1fr,) * cells.pos().len(),\n    align: center + horizon,\n    stroke: 1pt,\n    inset: 5pt,\n    ..cells,\n  )\n)\n\n#table(\n  columns: (auto, 1fr),\n  align: center + horizon,\n  stroke: 1pt,\n  table.header(\"Dimension\", \"Characteristic\"),\n  \"Input\", distribute-cells(\"Text\", \"Image\", \"Audio\", \"Video\"),\n  \"Output\", distribute-cells(\"Text\", \"Image\", \"Audio\", \"Video\", \"3D-Model\"),\n  \"Type of task\", distribute-cells(\"Information processing\", \"Problem solving\", \"Social\", \"Physical\"),\n)\n```\n\n![forum_4044_distribute-columns-in-table|690x167](upload://pIVKKWeWEhANT8QabP3X6y17f9j.png)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 18,
      "score": 23.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 69
    },
    {
      "id": 12340,
      "post_number": 3,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-12T13:07:12.721Z",
      "updated_at": "2025-05-12T13:07:12.721Z",
      "cooked": "<p>Hello. Have you looked at <a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11\" class=\"inline-onebox\">How to post in the Questions category</a>?</p>\n<aside class=\"quote no-group quote-modified\" data-username=\"reknih\" data-post=\"1\" data-topic=\"11\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/reknih/48/3_2.png\" class=\"avatar\"><a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11/1\">How to post in the Questions category</a></div>\n<blockquote>\n<p>If your question pertains to a bit of Typst markup you have problems with, put it in the question body! You can syntax-highlight Typst code by wrapping it in ` ```typ … ````. It will then look like this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set font(size: 12pt)\n\nHello from *Typst* at $ pi.var + 1 $ o'clock!\n</code></pre>\n<p>If you need to highlight a code or math mode snippet instead, the language tags <code>typc</code> and <code>typm</code> do that, respectively.</p>\n</blockquote>\n</aside>",
      "raw": "Hello. Have you looked at https://forum.typst.app/t/how-to-post-in-the-questions-category/11?\n\n[quote=\"reknih, post:1, topic:11\"]\nIf your question pertains to a bit of Typst markup you have problems with, put it in the question body! You can syntax-highlight Typst code by wrapping it in ` ```typ ... ````. It will then look like this:\n\n```typ\n#set font(size: 12pt)\n\nHello from *Typst* at $ pi.var + 1 $ o'clock!\n```\n\nIf you need to highlight a code or math mode snippet instead, the language tags `typc` and `typm` do that, respectively.\n[/quote]",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 20,
      "score": 4.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12342,
      "post_number": 4,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-12T13:38:11.634Z",
      "updated_at": "2025-05-13T22:27:59.161Z",
      "cooked": "<p>Since table cell dimensions are soft, by default you can’t fill cell’s full height by stretching inner content, as it will just stretch the parent cell. You can provide it a point of reference to patch this, which is a compromise, but the implementation is very simple:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set page(margin: 1cm)\n#show table: set text(9pt)\n\n#let sideways = rotate.with(-90deg, reflow: true)\n#let subtable(tallest: none, ..args) = table.cell(inset: 0pt, context {\n  let rows = auto\n  if tallest != none { rows = measure(tallest).height + table.inset * 2 }\n  layout(size =&gt; table(\n    columns: (1fr,) * args.pos().len(),\n    rows: rows,\n    table.hline(stroke: 0pt),\n    ..args,\n    table.hline(stroke: 0pt),\n  ))\n})\n\n\n// Will break nested tables, can be fixed with grids.\n// #show table.cell.where(y: 0): strong\n// #show table.cell.where(y: 0): set text(white)\n\n// For nested tables to look the same.\n#set table(align: center + horizon, stroke: 0.5pt)\n\n#table(\n  columns: 4,\n  table.header(\n    table.cell(colspan: 3, fill: black, text(white)[*Dimension*]),\n    table.cell(fill: black, text(white)[*Characteristic*]),\n  ),\n  table.cell(rowspan: 6, sideways[Technical]),\n  table.cell(rowspan: 3, sideways[Interaction]),\n  [*Input*],\n  subtable([Text], [Image], [Audio], [Video]),\n  [*Output*],\n  subtable([Text], [Image], [Audio], [Video], [3D-Model]),\n  [*Interface*],\n  subtable([Web], [Mobile], [Desktop], [API], [Integrated]),\n  table.cell(rowspan: 2, sideways[Work]),\n  [*Type of task*],\n  subtable([Information processing], [Problem solving], [Social], [Physical]),\n  [*Method*],\n  subtable([Autonom], [Teamwork], [Routine]),\n  table.cell(rowspan: 1, sideways[Use cases]),\n  [*AI use*],\n  subtable(\n    tallest: sideways[Use cases],\n    [Generation of text],\n    [Programming],\n    [Translation],\n    [Research and education],\n    [Inspiration and creativity],\n  ),\n)\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/6/6a1f6b2085372ab75dcb0f3f9f421cae58cd8fd1.png\" data-download-href=\"https://forum.typst.app/uploads/default/6a1f6b2085372ab75dcb0f3f9f421cae58cd8fd1\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/6/6a1f6b2085372ab75dcb0f3f9f421cae58cd8fd1_2_690x192.png\" alt=\"image\" data-base62-sha1=\"f8NVo4LNqWeIPoHVK3YBwU0t4BP\" width=\"690\" height=\"192\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/6/6a1f6b2085372ab75dcb0f3f9f421cae58cd8fd1_2_690x192.png, https://forum.typst.app/uploads/default/original/2X/6/6a1f6b2085372ab75dcb0f3f9f421cae58cd8fd1.png 1.5x, https://forum.typst.app/uploads/default/original/2X/6/6a1f6b2085372ab75dcb0f3f9f421cae58cd8fd1.png 2x\" data-dominant-color=\"303030\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">914×255 46.2 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>Without <code>tallest</code> point of reference, it will look like this:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/1/19b0fb45fd9b6a094f11312e10fa9bc9b252281e.png\" data-download-href=\"https://forum.typst.app/uploads/default/19b0fb45fd9b6a094f11312e10fa9bc9b252281e\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/1/19b0fb45fd9b6a094f11312e10fa9bc9b252281e_2_690x189.png\" alt=\"image\" data-base62-sha1=\"3Fh7jpX53UZb61onAgJwhCkeeYe\" width=\"690\" height=\"189\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/1/19b0fb45fd9b6a094f11312e10fa9bc9b252281e_2_690x189.png, https://forum.typst.app/uploads/default/original/2X/1/19b0fb45fd9b6a094f11312e10fa9bc9b252281e.png 1.5x, https://forum.typst.app/uploads/default/original/2X/1/19b0fb45fd9b6a094f11312e10fa9bc9b252281e.png 2x\" data-dominant-color=\"313131\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">913×251 46.1 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>This works for width because of point 3 in <a href=\"https://forum.typst.app/t/how-to-distribute-column-widths-equally-for-specific-rows-in-a-table/4044/2\" class=\"inline-onebox\">How to distribute column widths equally for specific rows in a table - #2 by janekfleper</a>.</p>\n<p>But I have a spreadsheet-like document where I want to cross some cells. There is a trick that <a class=\"mention\" href=\"/u/tinger\">@Tinger</a> showed me a long time ago. You can pin cell corners without disturbing it, and then use the concrete location data for absolute anchoring. This way, it becomes trivial to get the current cell’s height:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let make-label(counter, alignment, n: auto) = {\n  assert(alignment in (top, bottom))\n  let counter-name = repr(counter).split(\"\\\"\").at(1)\n  let alignment-str = repr(alignment)\n  let n = if n == auto { str(counter.get().first()) } else { str(n) }\n  label(counter-name + \".\" + n + \".\" + alignment-str)\n}\n\n#let cell-counter = counter(\"cell-counter\")\n\n#let pin-corner(counter, alignment) = context {\n  place(alignment)[#metadata(none)#make-label(counter, alignment)]\n}\n\n#let pin-top-bottom(counter) = {\n  pin-corner(counter, top)\n  pin-corner(counter, bottom)\n}\n\n#let cross-cell(counter, body, ..args) = table.cell(\n  counter.step() + pin-top-bottom(counter) + body,\n  ..args,\n)\n\n#let get-pinned-corners(counter) = {\n  let cell-inset = if table.cell.inset == auto { 5pt } else { cell.inset }\n  let adjusted-position(pos, alignment) = {\n    (pos.x - page.margin, pos.y - page.margin)\n  }\n  let n = counter.get().first()\n  let (top, bottom) = (top, bottom).map(alignment =&gt; {\n    adjusted-position(\n      locate(make-label(counter, alignment, n: n)).position(),\n      alignment,\n    )\n  })\n  (top.last(), bottom.last())\n}\n</code></pre>\n<p>Now using <code>cross-cell</code> and <code>get-pinned-top-bottom-y</code>:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let subtable(..args) = cross-cell(inset: 0pt, cell-counter, context {\n  let (y1, y2) = get-pinned-top-bottom-y(cell-counter)\n  layout(size =&gt; table(\n    columns: (1fr,) * args.pos().len(),\n    rows: y2 - y1,\n    table.hline(stroke: 0pt),\n    ..args,\n    table.hline(stroke: 0pt),\n  ))\n})\n</code></pre>\n<p>And you get the same result, fully automatically.</p>\n<details><summary>Full example</summary>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set page(margin: 1cm)\n#show table: set text(9pt)\n\n#let make-label(counter, alignment, n: auto) = {\n  assert(alignment in (top, bottom))\n  let counter-name = repr(counter).split(\"\\\"\").at(1)\n  let alignment-str = repr(alignment)\n  let n = if n == auto { str(counter.get().first()) } else { str(n) }\n  label(counter-name + \".\" + n + \".\" + alignment-str)\n}\n\n#let cell-counter = counter(\"cell-counter\")\n\n#let pin-corner(counter, alignment) = context {\n  place(alignment)[#metadata(none)#make-label(counter, alignment)]\n}\n\n#let pin-top-bottom(counter) = {\n  pin-corner(counter, top)\n  pin-corner(counter, bottom)\n}\n\n#let cross-cell(counter, body, ..args) = table.cell(\n  counter.step() + pin-top-bottom(counter) + body,\n  ..args,\n)\n\n#let get-pinned-top-bottom-y(counter) = {\n  let cell-inset = if table.cell.inset == auto { 5pt } else { cell.inset }\n  let adjusted-position(pos, alignment) = {\n    (pos.x - page.margin, pos.y - page.margin)\n  }\n  let n = counter.get().first()\n  let (top, bottom) = (top, bottom).map(alignment =&gt; {\n    adjusted-position(\n      locate(make-label(counter, alignment, n: n)).position(),\n      alignment,\n    )\n  })\n  (top.last(), bottom.last())\n}\n\n#let sideways = rotate.with(-90deg, reflow: true)\n#let subtable(..args) = cross-cell(inset: 0pt, cell-counter, context {\n  let (y1, y2) = get-pinned-top-bottom-y(cell-counter)\n  layout(size =&gt; table(\n    columns: (1fr,) * args.pos().len(),\n    rows: y2 - y1,\n    table.hline(stroke: 0pt),\n    ..args,\n    table.hline(stroke: 0pt),\n  ))\n})\n\n\n// Will break nested tables, can be fixed with grids.\n// #show table.cell.where(y: 0): strong\n// #show table.cell.where(y: 0): set text(white)\n\n// For nested tables to look the same.\n#set table(align: center + horizon, stroke: 0.5pt)\n\n#table(\n  columns: 4,\n  table.header(\n    table.cell(colspan: 3, fill: black, text(white)[*Dimension*]),\n    table.cell(fill: black, text(white)[*Characteristic*]),\n  ),\n  table.cell(rowspan: 6, sideways[Technical]),\n  table.cell(rowspan: 3, sideways[Interaction]),\n  [*Input*],\n  subtable([Text], [Image], [Audio], [Video]),\n  [*Output*],\n  subtable([Text], [Image], [Audio], [Video], [3D-Model]),\n  [*Interface*],\n  subtable([Web], [Mobile], [Desktop], [API], [Integrated]),\n  table.cell(rowspan: 2, sideways[Work]),\n  [*Type of task*],\n  subtable([Information processing], [Problem solving], [Social], [Physical]),\n  [*Method*],\n  subtable([Autonom], [Teamwork], [Routine]),\n  table.cell(rowspan: 1, sideways[Use cases]),\n  [*AI use*],\n  subtable(\n    [Generation of text],\n    [Programming],\n    [Translation],\n    [Research and education],\n    [Inspiration and creativity],\n  ),\n)\n</code></pre>\n</details>",
      "raw": "Since table cell dimensions are soft, by default you can't fill cell's full height by stretching inner content, as it will just stretch the parent cell. You can provide it a point of reference to patch this, which is a compromise, but the implementation is very simple:\n\n```typ\n#set page(margin: 1cm)\n#show table: set text(9pt)\n\n#let sideways = rotate.with(-90deg, reflow: true)\n#let subtable(tallest: none, ..args) = table.cell(inset: 0pt, context {\n  let rows = auto\n  if tallest != none { rows = measure(tallest).height + table.inset * 2 }\n  layout(size => table(\n    columns: (1fr,) * args.pos().len(),\n    rows: rows,\n    table.hline(stroke: 0pt),\n    ..args,\n    table.hline(stroke: 0pt),\n  ))\n})\n\n\n// Will break nested tables, can be fixed with grids.\n// #show table.cell.where(y: 0): strong\n// #show table.cell.where(y: 0): set text(white)\n\n// For nested tables to look the same.\n#set table(align: center + horizon, stroke: 0.5pt)\n\n#table(\n  columns: 4,\n  table.header(\n    table.cell(colspan: 3, fill: black, text(white)[*Dimension*]),\n    table.cell(fill: black, text(white)[*Characteristic*]),\n  ),\n  table.cell(rowspan: 6, sideways[Technical]),\n  table.cell(rowspan: 3, sideways[Interaction]),\n  [*Input*],\n  subtable([Text], [Image], [Audio], [Video]),\n  [*Output*],\n  subtable([Text], [Image], [Audio], [Video], [3D-Model]),\n  [*Interface*],\n  subtable([Web], [Mobile], [Desktop], [API], [Integrated]),\n  table.cell(rowspan: 2, sideways[Work]),\n  [*Type of task*],\n  subtable([Information processing], [Problem solving], [Social], [Physical]),\n  [*Method*],\n  subtable([Autonom], [Teamwork], [Routine]),\n  table.cell(rowspan: 1, sideways[Use cases]),\n  [*AI use*],\n  subtable(\n    tallest: sideways[Use cases],\n    [Generation of text],\n    [Programming],\n    [Translation],\n    [Research and education],\n    [Inspiration and creativity],\n  ),\n)\n```\n\n![image|690x192](upload://f8NVo4LNqWeIPoHVK3YBwU0t4BP.png)\n\nWithout `tallest` point of reference, it will look like this:\n\n![image|690x189](upload://3Fh7jpX53UZb61onAgJwhCkeeYe.png)\n\nThis works for width because of point 3 in https://forum.typst.app/t/how-to-distribute-column-widths-equally-for-specific-rows-in-a-table/4044/2?u=andrew.\n\nBut I have a spreadsheet-like document where I want to cross some cells. There is a trick that @Tinger showed me a long time ago. You can pin cell corners without disturbing it, and then use the concrete location data for absolute anchoring. This way, it becomes trivial to get the current cell's height:\n\n```typ\n#let make-label(counter, alignment, n: auto) = {\n  assert(alignment in (top, bottom))\n  let counter-name = repr(counter).split(\"\\\"\").at(1)\n  let alignment-str = repr(alignment)\n  let n = if n == auto { str(counter.get().first()) } else { str(n) }\n  label(counter-name + \".\" + n + \".\" + alignment-str)\n}\n\n#let cell-counter = counter(\"cell-counter\")\n\n#let pin-corner(counter, alignment) = context {\n  place(alignment)[#metadata(none)#make-label(counter, alignment)]\n}\n\n#let pin-top-bottom(counter) = {\n  pin-corner(counter, top)\n  pin-corner(counter, bottom)\n}\n\n#let cross-cell(counter, body, ..args) = table.cell(\n  counter.step() + pin-top-bottom(counter) + body,\n  ..args,\n)\n\n#let get-pinned-corners(counter) = {\n  let cell-inset = if table.cell.inset == auto { 5pt } else { cell.inset }\n  let adjusted-position(pos, alignment) = {\n    (pos.x - page.margin, pos.y - page.margin)\n  }\n  let n = counter.get().first()\n  let (top, bottom) = (top, bottom).map(alignment => {\n    adjusted-position(\n      locate(make-label(counter, alignment, n: n)).position(),\n      alignment,\n    )\n  })\n  (top.last(), bottom.last())\n}\n```\n\nNow using `cross-cell` and `get-pinned-top-bottom-y`:\n\n```typ\n#let subtable(..args) = cross-cell(inset: 0pt, cell-counter, context {\n  let (y1, y2) = get-pinned-top-bottom-y(cell-counter)\n  layout(size => table(\n    columns: (1fr,) * args.pos().len(),\n    rows: y2 - y1,\n    table.hline(stroke: 0pt),\n    ..args,\n    table.hline(stroke: 0pt),\n  ))\n})\n```\n\nAnd you get the same result, fully automatically.\n\n<details><summary>Full example</summary>\n\n```typ\n#set page(margin: 1cm)\n#show table: set text(9pt)\n\n#let make-label(counter, alignment, n: auto) = {\n  assert(alignment in (top, bottom))\n  let counter-name = repr(counter).split(\"\\\"\").at(1)\n  let alignment-str = repr(alignment)\n  let n = if n == auto { str(counter.get().first()) } else { str(n) }\n  label(counter-name + \".\" + n + \".\" + alignment-str)\n}\n\n#let cell-counter = counter(\"cell-counter\")\n\n#let pin-corner(counter, alignment) = context {\n  place(alignment)[#metadata(none)#make-label(counter, alignment)]\n}\n\n#let pin-top-bottom(counter) = {\n  pin-corner(counter, top)\n  pin-corner(counter, bottom)\n}\n\n#let cross-cell(counter, body, ..args) = table.cell(\n  counter.step() + pin-top-bottom(counter) + body,\n  ..args,\n)\n\n#let get-pinned-top-bottom-y(counter) = {\n  let cell-inset = if table.cell.inset == auto { 5pt } else { cell.inset }\n  let adjusted-position(pos, alignment) = {\n    (pos.x - page.margin, pos.y - page.margin)\n  }\n  let n = counter.get().first()\n  let (top, bottom) = (top, bottom).map(alignment => {\n    adjusted-position(\n      locate(make-label(counter, alignment, n: n)).position(),\n      alignment,\n    )\n  })\n  (top.last(), bottom.last())\n}\n\n#let sideways = rotate.with(-90deg, reflow: true)\n#let subtable(..args) = cross-cell(inset: 0pt, cell-counter, context {\n  let (y1, y2) = get-pinned-top-bottom-y(cell-counter)\n  layout(size => table(\n    columns: (1fr,) * args.pos().len(),\n    rows: y2 - y1,\n    table.hline(stroke: 0pt),\n    ..args,\n    table.hline(stroke: 0pt),\n  ))\n})\n\n\n// Will break nested tables, can be fixed with grids.\n// #show table.cell.where(y: 0): strong\n// #show table.cell.where(y: 0): set text(white)\n\n// For nested tables to look the same.\n#set table(align: center + horizon, stroke: 0.5pt)\n\n#table(\n  columns: 4,\n  table.header(\n    table.cell(colspan: 3, fill: black, text(white)[*Dimension*]),\n    table.cell(fill: black, text(white)[*Characteristic*]),\n  ),\n  table.cell(rowspan: 6, sideways[Technical]),\n  table.cell(rowspan: 3, sideways[Interaction]),\n  [*Input*],\n  subtable([Text], [Image], [Audio], [Video]),\n  [*Output*],\n  subtable([Text], [Image], [Audio], [Video], [3D-Model]),\n  [*Interface*],\n  subtable([Web], [Mobile], [Desktop], [API], [Integrated]),\n  table.cell(rowspan: 2, sideways[Work]),\n  [*Type of task*],\n  subtable([Information processing], [Problem solving], [Social], [Physical]),\n  [*Method*],\n  subtable([Autonom], [Teamwork], [Routine]),\n  table.cell(rowspan: 1, sideways[Use cases]),\n  [*AI use*],\n  subtable(\n    [Generation of text],\n    [Programming],\n    [Translation],\n    [Research and education],\n    [Inspiration and creativity],\n  ),\n)\n```\n\n</details>",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 21,
      "score": 44.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12357,
      "post_number": 5,
      "username": "BigBigi",
      "name": "BigBigi",
      "created_at": "2025-05-12T19:24:51.678Z",
      "updated_at": "2025-05-12T19:24:51.678Z",
      "cooked": "<p>Thank you both very much for your quick and detailed answers!</p>\n<p>I had time to go through both examples, and I think <a class=\"mention\" href=\"/u/andrew\">@Andrew</a>’s solution is the most robust since it handles the borders correctly and flexible in terms of height as well. I have two follow-up questions regarding this approach:</p>\n<ol>\n<li>Does your solution only work if the table is placed on a separate page, or is it also possible to embed the table between regular text?</li>\n<li>I’m also having trouble adapting the page setup to use my own margins. In your example, you set all margins to 1cm, but when I try to use my own custom setup, I get the error: <strong><code>Cannot subtract dictionary from length</code></strong>.</li>\n</ol>\n<p>Here’s the page setup I’m using in my <code>main.typ</code> file (now correctly formatted, sorry about before):</p>\n<pre><code class=\"lang-auto\">#set page(\n  margin: (top: 2.5cm, bottom: 2cm, left: 2.5cm, right: 3cm),\n  header: context {\n    if counter(page).get().first() &gt; 1 [\n      #set text(10pt, baseline: 8pt)\n      #set align(right)\n      Seite\n      #counter(page).display()\n    ]\n  }\n  + if counter(page).get().first() &gt; 1 [\n    #line(\n    length: 100%,\n    stroke: 0.5pt)\n  ]\n)\n</code></pre>\n<p>Any ideas on how I can adapt the margin settings in your solution to work with my own page configuration?</p>\n<p>Thanks again for your support, I really appreciate it!</p>",
      "raw": "Thank you both very much for your quick and detailed answers!\n\nI had time to go through both examples, and I think @Andrew’s solution is the most robust since it handles the borders correctly and flexible in terms of height as well. I have two follow-up questions regarding this approach:\n\n1. Does your solution only work if the table is placed on a separate page, or is it also possible to embed the table between regular text?\n2. I'm also having trouble adapting the page setup to use my own margins. In your example, you set all margins to 1cm, but when I try to use my own custom setup, I get the error: **`Cannot subtract dictionary from length`**. \n\nHere’s the page setup I’m using in my `main.typ` file (now correctly formatted, sorry about before):\n```\n#set page(\n  margin: (top: 2.5cm, bottom: 2cm, left: 2.5cm, right: 3cm),\n  header: context {\n    if counter(page).get().first() > 1 [\n      #set text(10pt, baseline: 8pt)\n      #set align(right)\n      Seite\n      #counter(page).display()\n    ]\n  }\n  + if counter(page).get().first() > 1 [\n    #line(\n    length: 100%,\n    stroke: 0.5pt)\n  ]\n)\n```\nAny ideas on how I can adapt the margin settings in your solution to work with my own page configuration?\n\nThanks again for your support, I really appreciate it!",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 19,
      "score": 8.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1583
    },
    {
      "id": 12366,
      "post_number": 6,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-13T05:59:52.052Z",
      "updated_at": "2025-05-13T05:59:52.052Z",
      "cooked": "<p>First of all, did you skip <a href=\"https://forum.typst.app/t/how-to-distribute-column-widths-equally-for-specific-rows-in-a-table/4044/3\" class=\"inline-onebox\">How to distribute column widths equally for specific rows in a table - #3 by Andrew</a>? Your code blocks clearly don’t use correct syntax highlighting.</p>\n<hr>\n<aside class=\"quote no-group\" data-username=\"BigBigi\" data-post=\"5\" data-topic=\"4044\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/b/B14C00/48.png\" class=\"avatar\"> BigBigi:</div>\n<blockquote>\n<p>Does your solution only work if the table is placed on a separate page, or is it also possible to embed the table between regular text?</p>\n</blockquote>\n</aside>\n<p>It doesn’t matter if there is text around or not. It might even work when row cells are split across pages. Actually, no. The y coordinates are from different pages, so the difference will make the row height very big. But I guess it can be also handled.</p>\n<aside class=\"quote no-group\" data-username=\"BigBigi\" data-post=\"5\" data-topic=\"4044\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/b/B14C00/48.png\" class=\"avatar\"> BigBigi:</div>\n<blockquote>\n<p>you set all margins to 1cm, but when I try to use my own custom setup, I get the error: <strong><code>Cannot subtract dictionary from length</code></strong>.</p>\n</blockquote>\n</aside>\n<p>Just change the margin reference to your margin setup:</p>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">(pos.x - page.margin, pos.y - page.margin)\n</code></pre>",
      "raw": "First of all, did you skip https://forum.typst.app/t/how-to-distribute-column-widths-equally-for-specific-rows-in-a-table/4044/3?u=andrew? Your code blocks clearly don't use correct syntax highlighting.\n\n---\n\n[quote=\"BigBigi, post:5, topic:4044\"]\nDoes your solution only work if the table is placed on a separate page, or is it also possible to embed the table between regular text?\n[/quote]\n\nIt doesn't matter if there is text around or not. It might even work when row cells are split across pages. Actually, no. The y coordinates are from different pages, so the difference will make the row height very big. But I guess it can be also handled.\n\n[quote=\"BigBigi, post:5, topic:4044\"]\nyou set all margins to 1cm, but when I try to use my own custom setup, I get the error: **`Cannot subtract dictionary from length`**.\n[/quote]\n\nJust change the margin reference to your margin setup:\n\n```typc\n(pos.x - page.margin, pos.y - page.margin)\n```",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 1,
      "reads": 18,
      "score": 18.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12389,
      "post_number": 7,
      "username": "BigBigi",
      "name": "BigBigi",
      "created_at": "2025-05-13T16:01:33.528Z",
      "updated_at": "2025-05-13T16:01:33.528Z",
      "cooked": "<p>Sorry again for the formatting issues, I think I’ve got it now.</p>\n<p>Thank you very much for your tips. I was able to adjust the margins as needed, and the table now splits nicely across pages. The only thing still missing is that the 90-degree rotated texts aren’t repeated on new pages, but I don’t really care.</p>\n<p>I just have one last question:<br>\nCurrently, all the text in the table cells is justified, which I’d like to avoid. I tried using:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show table: set par(justify: false)\n</code></pre>\n<p>However, this causes the text inside the table cells to not wrap properly anymore.</p>\n<p>Is there a way to disable justification while still allowing the text to wrap correctly inside the cells?</p>",
      "raw": "Sorry again for the formatting issues, I think I’ve got it now.\n\nThank you very much for your tips. I was able to adjust the margins as needed, and the table now splits nicely across pages. The only thing still missing is that the 90-degree rotated texts aren't repeated on new pages, but I don't really care.\n\nI just have one last question:\nCurrently, all the text in the table cells is justified, which I’d like to avoid. I tried using:\n\n```typ \n#show table: set par(justify: false)\n```\n\nHowever, this causes the text inside the table cells to not wrap properly anymore.\n\nIs there a way to disable justification while still allowing the text to wrap correctly inside the cells?",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 17,
      "score": 23.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1583
    },
    {
      "id": 12390,
      "post_number": 8,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-13T16:26:21.889Z",
      "updated_at": "2025-05-13T16:26:21.889Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"BigBigi\" data-post=\"7\" data-topic=\"4044\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/b/B14C00/48.png\" class=\"avatar\"> BigBigi:</div>\n<blockquote>\n<p>The only thing still missing is that the 90-degree rotated texts aren’t repeated on new pages, but I don’t really care.</p>\n</blockquote>\n</aside>\n<p>Does any other program duplicates cell’s content when split between pages? You can ask to add this.</p>\n<aside class=\"quote no-group\" data-username=\"BigBigi\" data-post=\"7\" data-topic=\"4044\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/b/B14C00/48.png\" class=\"avatar\"> BigBigi:</div>\n<blockquote>\n<p>Is there a way to disable justification while still allowing the text to wrap correctly inside the cells?</p>\n</blockquote>\n</aside>\n<p><a href=\"https://typst.app/docs/reference/text/text/#parameters-hyphenate\"><code>text.hyphenate</code></a></p>",
      "raw": "[quote=\"BigBigi, post:7, topic:4044\"]\nThe only thing still missing is that the 90-degree rotated texts aren’t repeated on new pages, but I don’t really care.\n[/quote]\n\nDoes any other program duplicates cell's content when split between pages? You can ask to add this.\n\n[quote=\"BigBigi, post:7, topic:4044\"]\nIs there a way to disable justification while still allowing the text to wrap correctly inside the cells?\n[/quote]\n\n[`text.hyphenate`](https://typst.app/docs/reference/text/text/#parameters-hyphenate)",
      "reply_to_post_number": 7,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 1,
      "reads": 16,
      "score": 23.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12416,
      "post_number": 9,
      "username": "BigBigi",
      "name": "BigBigi",
      "created_at": "2025-05-13T22:09:42.060Z",
      "updated_at": "2025-05-13T22:09:42.060Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Andrew\" data-post=\"8\" data-topic=\"4044\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/andrew/48/62_2.png\" class=\"avatar\"> Andrew:</div>\n<blockquote>\n<p><a href=\"https://typst.app/docs/reference/text/text/#parameters-hyphenate\"><code>text.hyphenate</code></a></p>\n</blockquote>\n</aside>\n<p>This did the trick, I just had to add:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set text(hyphenate: true)\n</code></pre>\n<p>Thank you again for your great support, you helped me a lot!</p>",
      "raw": "[quote=\"Andrew, post:8, topic:4044, full:true\"]\n\n[`text.hyphenate`](https://typst.app/docs/reference/text/text/#parameters-hyphenate)\n[/quote]\n\nThis did the trick, I just had to add:\n```typ\n#set text(hyphenate: true)\n```\n\nThank you again for your great support, you helped me a lot!",
      "reply_to_post_number": 8,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 1,
      "reads": 15,
      "score": 18.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1583
    }
  ],
  "scraped_at": "2025-06-10T09:47:58.760863"
}