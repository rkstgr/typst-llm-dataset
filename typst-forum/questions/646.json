{
  "topic_metadata": {
    "id": 646,
    "title": "Is there a command for generating an empty symbol with an output size of 0?",
    "slug": "is-there-a-command-for-generating-an-empty-symbol-with-an-output-size-of-0",
    "posts_count": 8,
    "created_at": "2024-09-24T17:21:26.054Z",
    "last_posted_at": "2024-09-26T07:54:47.461Z",
    "views": 318,
    "like_count": 1,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "Andrew",
    "tags": [
      "scripting",
      "symbols"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 1062
  },
  "posts": [
    {
      "id": 2482,
      "post_number": 1,
      "username": "Dirk",
      "name": "Dirk",
      "created_at": "2024-09-24T17:21:26.145Z",
      "updated_at": "2024-09-24T23:49:37.483Z",
      "cooked": "<p>Hi there,</p>\n<p>I use Typst to create texts, some of which are also provided by other tools.</p>\n<p>An input data can be any ASCII text that also contains Typst commands.</p>\n<p>My first idea was to use the raw function. Unfortunately, this does not wrap longer lines correctly and writes out of the page.</p>\n<p>So I used “Courier New” as the font, which is generally ok. However, strings that could be a Typst command are then output as a Typst command.</p>\n<p>Accordingly, I have written an input filter that easily converts the input characters: <code>&amp;</code> becomes <code>\\&amp;</code>, <code>#</code> becomes <code>\\#</code> and so on.</p>\n<p>This works quite well, but input lines like</p>\n<p><code>'\\$recyle.bin\\user123\\myfile'</code></p>\n<p>are a bit difficult, they become <code>\\\\$</code> if I only replace <code>$</code> and <code>\\\\\\\\$</code> if I replace <code>\\</code> and <code>$</code>. Since I can only control the input character stream to a limited extent, I have switched to turning a <code>$</code> into a <code>~\\&amp;</code> rather than a <code>\\$</code>. This ensures that the characters stand individually, and that input characters do not inadvertently create a command that flies around my ears.</p>\n<p>This works reliably. Unfortunately, I have a space between the expressions due to the <code>~</code>.</p>\n<p>This doesn’t look really great in the output.</p>\n<p><code>'\\$recyle.bin\\user123\\myfile' </code>then becomes <code>'~\\\\~\\$recyle.bin~\\\\user123~\\\\myfile'</code></p>\n<p>Now my question: is there a character in Typst that can be used as a separator and that is not a space, but a character of length 0?</p>\n<p>Many thanks</p>",
      "raw": "Hi there,\n\nI use Typst to create texts, some of which are also provided by other tools.\n\nAn input data can be any ASCII text that also contains Typst commands.\n\nMy first idea was to use the raw function. Unfortunately, this does not wrap longer lines correctly and writes out of the page.\n\nSo I used “Courier New” as the font, which is generally ok. However, strings that could be a Typst command are then output as a Typst command.\n\nAccordingly, I have written an input filter that easily converts the input characters: `&` becomes `\\&`, `#` becomes `\\#` and so on.\n\nThis works quite well, but input lines like\n\n`'\\$recyle.bin\\user123\\myfile'`\n\nare a bit difficult, they become `\\\\$` if I only replace `$` and `\\\\\\\\$` if I replace `\\` and `$`. Since I can only control the input character stream to a limited extent, I have switched to turning a `$` into a `~\\&` rather than a `\\$`. This ensures that the characters stand individually, and that input characters do not inadvertently create a command that flies around my ears.\n\nThis works reliably. Unfortunately, I have a space between the expressions due to the `~`. \n\nThis doesn't look really great in the output.\n\n`'\\$recyle.bin\\user123\\myfile' `then becomes `'~\\\\~\\$recyle.bin~\\\\user123~\\\\myfile'`\n\nNow my question: is there a character in Typst that can be used as a separator and that is not a space, but a character of length 0?\n\nMany thanks",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 47,
      "score": 994.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 466
    },
    {
      "id": 2484,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-09-24T17:33:32.129Z",
      "updated_at": "2024-09-24T17:38:18.440Z",
      "cooked": "<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">a#(sym.zws)b\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/bd5629bce59e6a3c9aa942f3068b6c4ee5521ef0.png\" alt=\"image\" data-base62-sha1=\"r0WQpCdk2vzEga4Kf0m2TNJBRV6\" width=\"58\" height=\"42\"></p>\n<aside class=\"onebox wikipedia\" data-onebox-src=\"https://en.wikipedia.org/wiki/Zero-width_space\">\n  <header class=\"source\">\n\n      <a href=\"https://en.wikipedia.org/wiki/Zero-width_space\" target=\"_blank\" rel=\"noopener nofollow ugc\">en.wikipedia.org</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    \n\n<h3><a href=\"https://en.wikipedia.org/wiki/Zero-width_space\" target=\"_blank\" rel=\"noopener nofollow ugc\">Zero-width space</a></h3>\n\n<p>The zero-width space (ZWSP) is a non-printing character used in computerized typesetting to indicate where the word boundaries are, without actually displaying a visible space in the rendered text. This enables text-processing systems for scripts that do not use explicit spacing to recognize where word boundaries are for the purpose of handling line breaks appropriately. Zero-width space is unicode character U+200B, and is located in the unicode General Punctuation block, and can be represented b...</p>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>There are a few <a href=\"https://typst.app/docs/reference/symbols/sym/\">built-in characters</a>:</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/1220dfe44485a5ddad0bfb9cbfff83ba189cc88f.png\" alt=\"image\" data-base62-sha1=\"2An1Jl6dVPubcsSMidlH7A0EteT\" width=\"429\" height=\"107\"></p>\n<p>They are all part of a Unicode character set (not included in ASCII character set), there might be some other similar characters that are not a part of <code>sym</code> module (but still can be inserted and typeset by Typst).</p>",
      "raw": "```typ\na#(sym.zws)b\n```\n\n![image|58x42](upload://r0WQpCdk2vzEga4Kf0m2TNJBRV6.png)\n\nhttps://en.wikipedia.org/wiki/Zero-width_space\n\nThere are a few [built-in characters](https://typst.app/docs/reference/symbols/sym/):\n\n![image|429x107](upload://2An1Jl6dVPubcsSMidlH7A0EteT.png)\n\nThey are all part of a Unicode character set (not included in ASCII character set), there might be some other similar characters that are not a part of `sym` module (but still can be inserted and typeset by Typst).",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 45,
      "score": 564.0,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 2492,
      "post_number": 3,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2024-09-24T20:13:27.337Z",
      "updated_at": "2024-09-24T20:13:27.337Z",
      "cooked": "<p>Hi, welcome and thank you for your question! I have changed your post’s title slightly to better fit the <a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11\">question guidelines</a>. I also added tags, as it makes your question easier to find.</p>\n<p>Your post was also affected by your problem because Discourse, like Typst, treats backslashes (<code>\\</code>) specially. I put your examples in backticks (<code>`</code>); could you check the edit history to make sure that I did not accidentally destroy any of your examples?</p>",
      "raw": "Hi, welcome and thank you for your question! I have changed your post's title slightly to better fit the [question guidelines](https://forum.typst.app/t/how-to-post-in-the-questions-category/11). I also added tags, as it makes your question easier to find.\n\nYour post was also affected by your problem because Discourse, like Typst, treats backslashes (`\\`) specially. I put your examples in backticks (``` ` ```); could you check the edit history to make sure that I did not accidentally destroy any of your examples?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 42,
      "score": 13.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 2494,
      "post_number": 4,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2024-09-24T20:30:18.320Z",
      "updated_at": "2024-09-24T20:30:18.320Z",
      "cooked": "<p>I think there could be a better solution to your problem; may I ask a bit more about your situation?</p>\n<p>Where does the text come from? Is it in a text file, or directly in Typst source code? If it’s in a text file and you <code>read()</code> it, there should actually be no problem at all. You get a string with the correct content, and you can insert that into your document:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#read(\"file.txt\")\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/10f97d4ae4fb1e7ff687173776ad3a807f3c6618.png\" alt=\"from file\" data-base62-sha1=\"2qaaqnz4CIilw3oVHn2ild3AhSg\" width=\"296\" height=\"50\"></p>\n<p>Since you face this problem, I assume that you have this text directly in your Typst code, and this is not satisfactory:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">'\\$recyle.bin\\user123\\myfile'\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/fbd63dfb1f6a6fc4eb06c5fea9fd5bf82078ad7c.png\" alt=\"plain text\" data-base62-sha1=\"zVQR77WgPiCllLVcCAcSqefrTQM\" width=\"280\" height=\"50\"></p>\n<p>Neither is this due to the lack of line breaks:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">```\n'\\$recyle.bin\\user123\\myfile'\n```\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/1X/3dacdb9b46f229a293e192f1310ca74b2890bde3.png\" data-download-href=\"https://forum.typst.app/uploads/default/3dacdb9b46f229a293e192f1310ca74b2890bde3\" title=\"raw block\"><img src=\"https://forum.typst.app/uploads/default/optimized/1X/3dacdb9b46f229a293e192f1310ca74b2890bde3_2_345x48.png\" alt=\"raw block\" data-base62-sha1=\"8NBtg0LxBiDLfcSmdGqbNgaEdiP\" width=\"345\" height=\"48\" srcset=\"https://forum.typst.app/uploads/default/optimized/1X/3dacdb9b46f229a293e192f1310ca74b2890bde3_2_345x48.png, https://forum.typst.app/uploads/default/optimized/1X/3dacdb9b46f229a293e192f1310ca74b2890bde3_2_517x72.png 1.5x, https://forum.typst.app/uploads/default/optimized/1X/3dacdb9b46f229a293e192f1310ca74b2890bde3_2_690x96.png 2x\" data-dominant-color=\"EEEEEE\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">raw block</span><span class=\"informations\">711×99 22.3 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p><strong>However</strong>, you can get the content from a raw block (<code>```...```</code>) <em>as a string</em>, exactly as if you had read it out of a file:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#```\n'\\$recyle.bin\\user123\\myfile'\n```.text\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/10f97d4ae4fb1e7ff687173776ad3a807f3c6618.png\" alt=\"text from raw block\" data-base62-sha1=\"2qaaqnz4CIilw3oVHn2ild3AhSg\" width=\"296\" height=\"50\"></p>",
      "raw": "I think there could be a better solution to your problem; may I ask a bit more about your situation?\n\nWhere does the text come from? Is it in a text file, or directly in Typst source code? If it's in a text file and you `read()` it, there should actually be no problem at all. You get a string with the correct content, and you can insert that into your document:\n```typ\n#read(\"file.txt\")\n```\n![from file|592x101, 50%](upload://2qaaqnz4CIilw3oVHn2ild3AhSg.png)\n\nSince you face this problem, I assume that you have this text directly in your Typst code, and this is not satisfactory:\n```typ\n'\\$recyle.bin\\user123\\myfile'\n```\n![plain text|560x101, 50%](upload://zVQR77WgPiCllLVcCAcSqefrTQM.png)\n\nNeither is this due to the lack of line breaks:\n````typ\n```\n'\\$recyle.bin\\user123\\myfile'\n```\n````\n![raw block|690x96, 50%](upload://8NBtg0LxBiDLfcSmdGqbNgaEdiP.png)\n\n**However**, you can get the content from a raw block (```` ```...``` ````) _as a string_, exactly as if you had read it out of a file:\n````typ\n#```\n'\\$recyle.bin\\user123\\myfile'\n```.text\n````\n![text from raw block|592x101, 50%](upload://2qaaqnz4CIilw3oVHn2ild3AhSg.png)",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 39,
      "score": 22.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 2499,
      "post_number": 5,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-09-24T22:20:32.064Z",
      "updated_at": "2024-09-24T22:20:32.064Z",
      "cooked": "<p>This can be written as a one-liner like so:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#`'\\$recyle.bin\\user123\\myfile'`.text\n</code></pre>",
      "raw": "This can be written as a one-liner like so:\n\n```typ\n#`'\\$recyle.bin\\user123\\myfile'`.text\n```",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 32,
      "score": 6.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 2629,
      "post_number": 6,
      "username": "Dirk",
      "name": "Dirk",
      "created_at": "2024-09-26T05:59:52.681Z",
      "updated_at": "2024-09-26T06:01:07.456Z",
      "cooked": "<p>In fact, my prozess is a little more complex:</p>\n<p>We use a tool for our reports that creates outputs in XML. A converter script runs over the output, which parses individual XML entries and generates typst code for a complex table. I can control some parts of the output well because these data is hard-coded into typst entries.</p>\n<p>However, some parts of the XML file contains output that is completely variable. These can be long texts, lists, file paths or even Windows registry keys. In general, it can also contain excerpts from memory dumps.</p>\n<p>I currently use the following macro:</p>\n<p><code>#let textoutput(body) = { </code><br>\n<code> set par(justify: false)</code><br>\n<code>  align(left)[#text(size: 10pt, hyphenate: true, font: “Courier New”)[#body]]</code><br>\n<code>}</code></p>\n<p>Additionally I change the input manually so that typst control commands are escaped by a backslash. In addition, a #(sym.zws) is entered after some characters so that long lines consisting of blocks of digits are better separated.</p>\n<p>This works quite well for me.</p>",
      "raw": "In fact, my prozess is a little more complex:\n\nWe use a tool for our reports that creates outputs in XML. A converter script runs over the output, which parses individual XML entries and generates typst code for a complex table. I can control some parts of the output well because these data is hard-coded into typst entries.\n\nHowever, some parts of the XML file contains output that is completely variable. These can be long texts, lists, file paths or even Windows registry keys. In general, it can also contain excerpts from memory dumps. \n\nI currently use the following macro:\n\n`#let textoutput(body) = { `\n`  set par(justify: false) `\n`  align(left)[#text(size: 10pt, hyphenate: true, font: “Courier New”)[#body]]`\n`}` \n\nAdditionally I change the input manually so that typst control commands are escaped by a backslash. In addition, a #(sym.zws) is entered after some characters so that long lines consisting of blocks of digits are better separated.\n\nThis works quite well for me.",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 0,
      "reads": 28,
      "score": 20.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 466
    },
    {
      "id": 2630,
      "post_number": 7,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-09-26T06:48:34.279Z",
      "updated_at": "2024-09-26T06:48:34.279Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Dirk\" data-post=\"6\" data-topic=\"646\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/dirk/48/908_2.png\" class=\"avatar\"> Dirk:</div>\n<blockquote>\n<p>We use a tool for our reports that creates outputs in XML.</p>\n</blockquote>\n</aside>\n<p>In case you didn’t know (and for future visitors to this post) Typst GmbH<br>\n(the company) also provides commercial support contracts in addition to a free web app.</p>\n<p>See at <a href=\"https://typst.app/pricing/#:~:text=Are%20you%20using%20the%20open%2Dsource%20Typst%20compiler%20in%20your%20company%3F\">Pricing</a></p>\n<blockquote>\n<p><strong>Are you using the open-source Typst compiler in your company?</strong> We offer commercial support contracts and can help with deployment, patches, and usage. <a href=\"https://typst.app/contact/\">Contact us</a> to learn more!</p>\n</blockquote>",
      "raw": "[quote=\"Dirk, post:6, topic:646\"]\nWe use a tool for our reports that creates outputs in XML.\n[/quote]\n\nIn case you didn't know (and for future visitors to this post) Typst GmbH\n (the company) also provides commercial support contracts in addition to a free web app.\n\nSee at [Pricing](https://typst.app/pricing/#:~:text=Are%20you%20using%20the%20open%2Dsource%20Typst%20compiler%20in%20your%20company%3F)\n> **Are you using the open-source Typst compiler in your company?** We offer commercial support contracts and can help with deployment, patches, and usage. [Contact us](https://typst.app/contact/) to learn more!",
      "reply_to_post_number": 6,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 0,
      "reads": 27,
      "score": 5.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 2631,
      "post_number": 8,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2024-09-26T07:54:47.461Z",
      "updated_at": "2024-09-26T07:55:31.716Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Dirk\" data-post=\"6\" data-topic=\"646\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/dirk/48/908_2.png\" class=\"avatar\"> Dirk:</div>\n<blockquote>\n<p>A converter script runs over the output, which parses individual XML entries and generates typst code for a complex table.</p>\n</blockquote>\n</aside>\n<p>Just so you know, Typst supports reading xml directly: <a href=\"https://typst.app/docs/reference/data-loading/xml/\" class=\"inline-onebox\">XML Function – Typst Documentation</a></p>\n<p>You may be interested in these other threads:</p>\n<ul>\n<li><a href=\"https://forum.typst.app/t/is-there-a-way-to-programmaticaly-generate-documents/417\" class=\"inline-onebox\">Is there a way to programmaticaly generate documents?</a> – discusses how templating with external software could be replaced with Typst scripting</li>\n<li><a href=\"https://forum.typst.app/t/can-i-configure-my-document-e-g-draft-release-version-color-theme-when-creating-a-pdf-without-modifying-the-typst-file-directly/160/3\" class=\"inline-onebox\">Can I configure my document (e.g. draft/release version, color theme) when creating a PDF without modifying the Typst file directly? - #3 by SillyFreak</a> – discusses loading data into Typst in general, particularly avoiding having to put data into the Typst source code directly by instead loading it from a file (the example in that post uses JSON, but you could use XML)</li>\n</ul>\n<p>Also to reiterate: if you use raw blocks (<code>```...```</code>), you don’t need to escape Typst control commands. Raw blocks can also use more that three backticks (e.g. (<code>``````...``````</code>) if you can’t guarantee that your inputs won’t contain <code>```</code>. But you get around <em>all</em> needs for escaping by loading the data from file instead of putting it in your Typst source code.</p>",
      "raw": "[quote=\"Dirk, post:6, topic:646\"]\nA converter script runs over the output, which parses individual XML entries and generates typst code for a complex table.\n[/quote]\n\nJust so you know, Typst supports reading xml directly: https://typst.app/docs/reference/data-loading/xml/\n\nYou may be interested in these other threads:\n- https://forum.typst.app/t/is-there-a-way-to-programmaticaly-generate-documents/417 -- discusses how templating with external software could be replaced with Typst scripting\n- https://forum.typst.app/t/can-i-configure-my-document-e-g-draft-release-version-color-theme-when-creating-a-pdf-without-modifying-the-typst-file-directly/160/3 -- discusses loading data into Typst in general, particularly avoiding having to put data into the Typst source code directly by instead loading it from a file (the example in that post uses JSON, but you could use XML)\n\nAlso to reiterate: if you use raw blocks (` ```...``` `), you don't need to escape Typst control commands. Raw blocks can also use more that three backticks (e.g. (` ``````...`````` `) if you can't guarantee that your inputs won't contain ` ``` `. But you get around _all_ needs for escaping by loading the data from file instead of putting it in your Typst source code.",
      "reply_to_post_number": 6,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 0,
      "reads": 26,
      "score": 15.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    }
  ],
  "scraped_at": "2025-06-10T09:58:09.084670"
}