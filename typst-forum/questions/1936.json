{
  "topic_metadata": {
    "id": 1936,
    "title": "How can I number equations within sections?",
    "slug": "how-can-i-number-equations-within-sections",
    "posts_count": 6,
    "created_at": "2024-12-01T21:18:38.818Z",
    "last_posted_at": "2024-12-02T14:17:36.638Z",
    "views": 478,
    "like_count": 4,
    "reply_count": 4,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 7,
    "accepted_answer_username": "Sinthoras",
    "tags": [
      "latex-migration",
      "introspection"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 596
  },
  "posts": [
    {
      "id": 6214,
      "post_number": 1,
      "username": "Sinthoras",
      "name": "",
      "created_at": "2024-12-01T21:18:38.977Z",
      "updated_at": "2024-12-30T13:41:03.731Z",
      "cooked": "<p>I want a command similar to LaTeXs <code>\\numberwithin{equation}{section}</code>.</p>\n<p>So e.g. the 5th equation in chapter 2 should have the number (2.5). How can I achieve this? Is there a package that does this?</p>\n<p>On Discord, I found some old code that works, but the compiler gives the warning that this uses the deprecated <code>locate</code> function so I would assume that this is not the canonical way to do this. What is?</p>\n<p>(I feel like the most user friendly would be a package that does this under the hood and gets updated every time a new version of typst deprecates some of the used code. Has anyone written or seen this?)</p>\n<p>The code on Discord as a reference:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#set heading(numbering: \"1.\")\n#let chaptercounter=counter(\"chapter\")\n#let equationcounter=counter(math.equation)\n\n#show heading.where(level:1): it =&gt; {\n  chaptercounter.step()\n  equationcounter.update(0)\n  it\n}\n\n#set math.equation(numbering: it =&gt; {\nlocate(loc =&gt; {\nlet count = chaptercounter.at(loc).first()\nnumbering(\"(1.1)\", count, it)\n})})\n\n= Section\n\n$ 5 + 3 = 8 $\n$ 5 + 3 = 8 $\n\n= New Section\n== Test\n\n$ 5 + 3 = 8 $ &lt;thiseq&gt;\n== Test 2\n$ 5 + 3 = 8 $\n</code></pre>",
      "raw": "I want a command similar to LaTeXs `\\numberwithin{equation}{section}`.\n\nSo e.g. the 5th equation in chapter 2 should have the number (2.5). How can I achieve this? Is there a package that does this?\n\n\n\nOn Discord, I found some old code that works, but the compiler gives the warning that this uses the deprecated `locate` function so I would assume that this is not the canonical way to do this. What is?\n\n (I feel like the most user friendly would be a package that does this under the hood and gets updated every time a new version of typst deprecates some of the used code. Has anyone written or seen this?)\n\nThe code on Discord as a reference:\n```typst\n#set heading(numbering: \"1.\")\n#let chaptercounter=counter(\"chapter\")\n#let equationcounter=counter(math.equation)\n\n#show heading.where(level:1): it => {\n  chaptercounter.step()\n  equationcounter.update(0)\n  it\n}\n\n#set math.equation(numbering: it => {\nlocate(loc => {\nlet count = chaptercounter.at(loc).first()\nnumbering(\"(1.1)\", count, it)\n})})\n\n= Section\n\n$ 5 + 3 = 8 $\n$ 5 + 3 = 8 $\n\n= New Section\n== Test\n\n$ 5 + 3 = 8 $ <thiseq>\n== Test 2\n$ 5 + 3 = 8 $\n```",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 53,
      "score": 1950.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 511
    },
    {
      "id": 6221,
      "post_number": 2,
      "username": "miles-1",
      "name": "miles",
      "created_at": "2024-12-02T01:00:53.643Z",
      "updated_at": "2024-12-04T17:25:52.644Z",
      "cooked": "<p>Try replacing the <code>set</code> rule for <code>math.equation</code> with this:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#set math.equation(numbering: it =&gt; {\n  let count = chaptercounter.get().first()\n  numbering(\"(1.1)\", count, it)\n})\n</code></pre>\n<p>From the docs for <a href=\"https://typst.app/docs/reference/introspection/locate/\"><code>locate</code></a>:</p>\n<blockquote>\n<p>In Typst 0.10 and lower, the <code>locate</code> function took a closure that made the current location in the document available (like <a href=\"https://typst.app/docs/reference/introspection/here/\"><code>here</code></a> does now).</p>\n</blockquote>\n<p>… and <code>.get()</code> is the same as <code>.at(here())</code> (see <a href=\"https://typst.app/docs/reference/introspection/counter/#definitions-get\">documentation for <code>.get()</code></a>)</p>\n<p>I get what you’re saying about this being dropped into a package to be user-friendly, and there very well may be a package that might manage this. However, I find one of the great features of Typst is using <code>set</code> and <code>show</code> rules to precisely style your document. This has the added benefit of having only minimal package dependencies (in contrast to LaTeX).</p>",
      "raw": "Try replacing the `set` rule for `math.equation` with this:\n\n```typst\n#set math.equation(numbering: it => {\n  let count = chaptercounter.get().first()\n  numbering(\"(1.1)\", count, it)\n})\n```\n\nFrom the docs for [`locate`](https://typst.app/docs/reference/introspection/locate/):\n\n> In Typst 0.10 and lower, the `locate` function took a closure that made the current location in the document available (like [`here`](https://typst.app/docs/reference/introspection/here/) does now).\n\n... and `.get()` is the same as `.at(here())` (see [documentation for `.get()`](https://typst.app/docs/reference/introspection/counter/#definitions-get))\n\nI get what you're saying about this being dropped into a package to be user-friendly, and there very well may be a package that might manage this. However, I find one of the great features of Typst is using `set` and `show` rules to precisely style your document. This has the added benefit of having only minimal package dependencies (in contrast to LaTeX).",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 1,
      "reads": 48,
      "score": 154.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 177
    },
    {
      "id": 6224,
      "post_number": 3,
      "username": "jbirnick",
      "name": "Johann Birnick",
      "created_at": "2024-12-02T05:31:02.415Z",
      "updated_at": "2024-12-02T05:32:29.368Z",
      "cooked": "<p>There are counting packages. Both <a href=\"https://typst.app/universe/package/headcount\">headcount</a> and <a href=\"https://typst.app/universe/package/rich-counters\">rich-counters</a> might be useful for your usecase.</p>",
      "raw": "There are counting packages. Both [headcount](https://typst.app/universe/package/headcount) and [rich-counters](https://typst.app/universe/package/rich-counters) might be useful for your usecase.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 46,
      "score": 29.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 218
    },
    {
      "id": 6236,
      "post_number": 5,
      "username": "Ido",
      "name": "",
      "created_at": "2024-12-02T11:33:35.786Z",
      "updated_at": "2024-12-02T11:33:35.786Z",
      "cooked": "<p>I used what you suggested and changed it a bit to be:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#set heading(numbering: \"1.\")\n#show heading.where(level:1): it =&gt; {\n  counter(math.equation).update(0)\n  it\n}\n\n#set math.equation(\n  numbering: it =&gt; {\n    let count = counter(heading.where(level: 1)).at(here()).first()\n    if count &gt;0 {\n      numbering(\"(1.1)\", count, it)\n    } else {\n      numbering(\"(1)\",it)\n    }\n  }\n)\n</code></pre>\n<p>What can be a good way to implement it also for a minimal theorem that is defined in the template like this:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#show figure.where(kind: \"thm\"): it =&gt; [\n  / #it.supplement #context(it.counter.display(it.numbering)).: #it.body\n]\n#let thm(it) = figure(\n  kind: \"thm\",\n  supplement: \"Theorem\",\n  caption: none,\n  placement: none, \n  it\n) \n</code></pre>\n<p>More suggestions are welcomed <img src=\"https://forum.typst.app/images/emoji/apple/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "I used what you suggested and changed it a bit to be:\n```typst\n#set heading(numbering: \"1.\")\n#show heading.where(level:1): it => {\n  counter(math.equation).update(0)\n  it\n}\n\n#set math.equation(\n  numbering: it => {\n    let count = counter(heading.where(level: 1)).at(here()).first()\n    if count >0 {\n      numbering(\"(1.1)\", count, it)\n    } else {\n      numbering(\"(1)\",it)\n    }\n  }\n)\n```\nWhat can be a good way to implement it also for a minimal theorem that is defined in the template like this:\n```typst\n#show figure.where(kind: \"thm\"): it => [\n  / #it.supplement #context(it.counter.display(it.numbering)).: #it.body\n]\n#let thm(it) = figure(\n  kind: \"thm\",\n  supplement: \"Theorem\",\n  caption: none,\n  placement: none, \n  it\n) \n```\nMore suggestions are welcomed :slight_smile:",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 39,
      "score": 87.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 875
    },
    {
      "id": 6243,
      "post_number": 6,
      "username": "Sinthoras",
      "name": "",
      "created_at": "2024-12-02T14:14:03.660Z",
      "updated_at": "2024-12-02T14:14:03.660Z",
      "cooked": "<p>I tried to use both packages but failed to get a correct numbering given the fact, that I start my section numbering at 0, because they assume, that it starts at 1 and therefore give me one too high section counter.</p>",
      "raw": "I tried to use both packages but failed to get a correct numbering given the fact, that I start my section numbering at 0, because they assume, that it starts at 1 and therefore give me one too high section counter.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 35,
      "score": 22.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 511
    },
    {
      "id": 6244,
      "post_number": 7,
      "username": "Sinthoras",
      "name": "",
      "created_at": "2024-12-02T14:17:36.638Z",
      "updated_at": "2024-12-02T16:07:24.364Z",
      "cooked": "<p>Thank you! I changed it a bit to work for my usecase where I start my section numbering at 0 and it works!</p>\n<p>The full code I use is:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#show heading.where(level:1): it =&gt; {\n  counter(math.equation).update(0)\n  it\n}\n\n\n #set math.equation(numbering: it =&gt; {\n    let count = counter(heading.where(level: 1)).at(here()).first()\n    if count &gt; 0 and start_section_numbering_at_0 {\n      numbering(\"(1.1)\", count - 1, it)\n    }\n    else {\n      numbering(\"(1.1)\", count, it)\n    }\n})\n</code></pre>",
      "raw": "Thank you! I changed it a bit to work for my usecase where I start my section numbering at 0 and it works! \n\nThe full code I use is:\n\n```typst\n#show heading.where(level:1): it => {\n  counter(math.equation).update(0)\n  it\n}\n\n\n #set math.equation(numbering: it => {\n    let count = counter(heading.where(level: 1)).at(here()).first()\n    if count > 0 and start_section_numbering_at_0 {\n      numbering(\"(1.1)\", count - 1, it)\n    }\n    else {\n      numbering(\"(1.1)\", count, it)\n    }\n})\n```",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 36,
      "score": 72.2,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 511
    }
  ],
  "scraped_at": "2025-06-10T09:54:15.273182"
}