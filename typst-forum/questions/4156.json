{
  "topic_metadata": {
    "id": 4156,
    "title": "How to generate a dashed stroke in two colours using fletcher?",
    "slug": "how-to-generate-a-dashed-stroke-in-two-colours-using-fletcher",
    "posts_count": 5,
    "created_at": "2025-05-19T10:24:20.765Z",
    "last_posted_at": "2025-05-19T14:01:57.418Z",
    "views": 50,
    "like_count": 6,
    "reply_count": 2,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "janekfleper",
    "tags": [
      "scripting",
      "fletcher"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 457
  },
  "posts": [
    {
      "id": 12736,
      "post_number": 1,
      "username": "Hakkape",
      "name": "Alex H",
      "created_at": "2025-05-19T10:24:20.892Z",
      "updated_at": "2025-05-19T12:31:36.926Z",
      "cooked": "<p>Hi everyone,<br>\ni would like to use a dashed stroke that alternates between two colors. My specific use case is to color the border of a node in fletcher in two colors.<br>\nI have looked into the documentation for strokes (<a href=\"https://typst.app/docs/reference/visualize/stroke/\" class=\"inline-onebox\">Stroke Type – Typst Documentation</a>) and tried using a tiling, but the best i could come up with is as below:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">// pattern that alternates two colors\n#let pat = tiling(size: (20pt, 10pt), relative: \"parent\")[\n  #place(square(size: 10pt, fill: primary_color))\n  #place(dx: 10pt, square(size: 10pt, fill: primary_color.lighten(40%)))\n]\n\n// test: draw diagram with a node that uses the pattern as fill\n#diagram({\n  node((0, 0), text(\"test\"), stroke: 5pt + pat, name: \"test\", shape: circle)\n})\n</code></pre>\n<p>resulting in the following output:<br>\n<img src=\"https://forum.typst.app/uploads/default/original/2X/3/36fcab6490790dfc2cd5ba63e554c60ea2e05f7b.png\" alt=\"Screenshot_2025-05-19_12-23-32\" data-base62-sha1=\"7Qr7LIRhXTXT4H4tT9wU6HhgxCj\" width=\"200\" height=\"181\"></p>\n<p>Would be thankful for any ideas how to achieve a coloring that follows the outline of the circle.</p>",
      "raw": "Hi everyone,\ni would like to use a dashed stroke that alternates between two colors. My specific use case is to color the border of a node in fletcher in two colors. \nI have looked into the documentation for strokes (https://typst.app/docs/reference/visualize/stroke/) and tried using a tiling, but the best i could come up with is as below:\n```typ\n// pattern that alternates two colors\n#let pat = tiling(size: (20pt, 10pt), relative: \"parent\")[\n  #place(square(size: 10pt, fill: primary_color))\n  #place(dx: 10pt, square(size: 10pt, fill: primary_color.lighten(40%)))\n]\n\n// test: draw diagram with a node that uses the pattern as fill\n#diagram({\n  node((0, 0), text(\"test\"), stroke: 5pt + pat, name: \"test\", shape: circle)\n})\n```\nresulting in the following output:\n![Screenshot_2025-05-19_12-23-32|200x181](upload://7Qr7LIRhXTXT4H4tT9wU6HhgxCj.png)\n\nWould be thankful for any ideas how to achieve a coloring that follows the outline of the circle.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 25,
      "score": 95.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1141
    },
    {
      "id": 12741,
      "post_number": 2,
      "username": "janekfleper",
      "name": "Janek Fleper",
      "created_at": "2025-05-19T12:02:37.841Z",
      "updated_at": "2025-05-19T12:41:14.974Z",
      "cooked": "<p>You can use <a href=\"https://typst.app/docs/reference/visualize/gradient/#definitions-conic\"><code>gradient.conic()</code></a> to get the dashed stroke. <a href=\"https://typst.app/docs/reference/visualize/gradient/#definitions-sharp\"><code>gradient.sharp()</code></a> then makes the gradient discrete and <a href=\"https://typst.app/docs/reference/visualize/gradient/#definitions-repeat\"><code>gradient.repeat()</code></a> defines the number of periods around the circle.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/fletcher:0.5.7\" as fletcher: diagram, node, edge\n\n#let pat = gradient.conic(purple, purple.lighten(40%)).sharp(2).repeat(15)\n\n#diagram({\n  node((0, 0), text(\"test\"), stroke: pat, name: \"test\", shape: circle)\n})\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/d/dd0077206469ab88ea10a59debce9f6f773f2c6f.png\" alt=\"forum_4156_two-colored-stroke\" data-base62-sha1=\"vx4w70j4lkHWDQ0HPxrPm8lef1l\" width=\"151\" height=\"151\"></p>\n<p>If you add a code example to your post, please make sure that it compiles without error. It is good that you minimized the example to only show your actual issue, but in this case the variable <code>primary_color</code> and the import of fletcher were missing.</p>",
      "raw": "You can use [`gradient.conic()`](https://typst.app/docs/reference/visualize/gradient/#definitions-conic) to get the dashed stroke. [`gradient.sharp()`](https://typst.app/docs/reference/visualize/gradient/#definitions-sharp) then makes the gradient discrete and [`gradient.repeat()`](https://typst.app/docs/reference/visualize/gradient/#definitions-repeat) defines the number of periods around the circle.\n\n```\n#import \"@preview/fletcher:0.5.7\" as fletcher: diagram, node, edge\n\n#let pat = gradient.conic(purple, purple.lighten(40%)).sharp(2).repeat(15)\n\n#diagram({\n  node((0, 0), text(\"test\"), stroke: pat, name: \"test\", shape: circle)\n})\n```\n\n![forum_4156_two-colored-stroke|151x151](upload://vx4w70j4lkHWDQ0HPxrPm8lef1l.png)\n\nIf you add a code example to your post, please make sure that it compiles without error. It is good that you minimized the example to only show your actual issue, but in this case the variable `primary_color` and the import of fletcher were missing.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 3,
      "reads": 22,
      "score": 64.4,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 69
    },
    {
      "id": 12743,
      "post_number": 3,
      "username": "Hakkape",
      "name": "Alex H",
      "created_at": "2025-05-19T12:42:38.893Z",
      "updated_at": "2025-05-19T12:42:38.893Z",
      "cooked": "<p>Thanks, that works just like i need it!</p>",
      "raw": "Thanks, that works just like i need it!",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 22,
      "score": 9.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1141
    },
    {
      "id": 12748,
      "post_number": 4,
      "username": "Jollywatt",
      "name": "Joseph Wilson",
      "created_at": "2025-05-19T13:57:31.127Z",
      "updated_at": "2025-05-21T00:04:35.353Z",
      "cooked": "<p>An alternative solution could be to use two strokes. Fletcher doesn’t support this with one node, but you can write your own function which adds two nodes and hides the second node’s label/fill.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/fletcher:0.5.7\" as fletcher: diagram, node, edge\n\n#let doublenode(pos, label, ..args, stroke: 1pt + black, secondary: black) = {\n\tnode(pos, label, ..args, stroke: stroke)\n\tnode(pos, hide(label), ..args, fill: none, stroke: (dash: (5pt, 5pt), paint: secondary, thickness: stroke.thickness))\n}\n\n#diagram({\n\tdoublenode((0, 0), text(\"test\"), name: \"test\", shape: circle,\n\t\tstroke: 4pt + purple, secondary: purple.darken(50%))\n})\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/f/f82dc965e01422f456a62976502ce0b1e98015a9.png\" alt=\"Screenshot 2025-05-19 at 14.56.51\" data-base62-sha1=\"zpuvDo4RP5EjJSlS9ZbmL25gPax\" width=\"128\" height=\"132\"></p>",
      "raw": "An alternative solution could be to use two strokes. Fletcher doesn't support this with one node, but you can write your own function which adds two nodes and hides the second node's label/fill.\n\n```typ\n#import \"@preview/fletcher:0.5.7\" as fletcher: diagram, node, edge\n\n#let doublenode(pos, label, ..args, stroke: 1pt + black, secondary: black) = {\n\tnode(pos, label, ..args, stroke: stroke)\n\tnode(pos, hide(label), ..args, fill: none, stroke: (dash: (5pt, 5pt), paint: secondary, thickness: stroke.thickness))\n}\n\n#diagram({\n\tdoublenode((0, 0), text(\"test\"), name: \"test\", shape: circle,\n\t\tstroke: 4pt + purple, secondary: purple.darken(50%))\n})\n```\n![Screenshot 2025-05-19 at 14.56.51|256x264, 50%](upload://zpuvDo4RP5EjJSlS9ZbmL25gPax.png)",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 3,
      "reads": 20,
      "score": 74.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 713
    },
    {
      "id": 12749,
      "post_number": 5,
      "username": "Hakkape",
      "name": "Alex H",
      "created_at": "2025-05-19T14:01:57.418Z",
      "updated_at": "2025-05-19T14:01:57.418Z",
      "cooked": "<p>Thanks, i suppose that is a reasonable workaround and has the benefit of also working with other shapes. I have now run into the problem that the gradient approach does not work for edges in a fletcher graph because the gradient is not oriented along the edge.</p>",
      "raw": "Thanks, i suppose that is a reasonable workaround and has the benefit of also working with other shapes. I have now run into the problem that the gradient approach does not work for edges in a fletcher graph because the gradient is not oriented along the edge.",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 20,
      "score": 9.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1141
    }
  ],
  "scraped_at": "2025-06-10T09:47:41.005653"
}