{
  "topic_metadata": {
    "id": 1731,
    "title": "How Can i add multiple Cetz Plot axes?",
    "slug": "how-can-i-add-multiple-cetz-plot-axes",
    "posts_count": 4,
    "created_at": "2024-11-14T19:44:05.432Z",
    "last_posted_at": "2024-11-26T13:22:45.857Z",
    "views": 365,
    "like_count": 2,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "ParaN3xus",
    "tags": [],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 999
  },
  "posts": [
    {
      "id": 5642,
      "post_number": 1,
      "username": "Flavio",
      "name": "Flavio",
      "created_at": "2024-11-14T19:44:05.566Z",
      "updated_at": "2024-11-14T19:44:05.566Z",
      "cooked": "<p>Hi,<br>\nI’m trying to replicate something similiar to this chart:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/0/0b1cc74fd7ef96cb48f63ee6956a13648a3f290b.png\" data-download-href=\"https://forum.typst.app/uploads/default/0b1cc74fd7ef96cb48f63ee6956a13648a3f290b\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/0/0b1cc74fd7ef96cb48f63ee6956a13648a3f290b_2_488x500.png\" alt=\"image\" data-base62-sha1=\"1AiUpSTLU3AoPEcqxxjO5pxCovF\" width=\"488\" height=\"500\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/0/0b1cc74fd7ef96cb48f63ee6956a13648a3f290b_2_488x500.png, https://forum.typst.app/uploads/default/optimized/2X/0/0b1cc74fd7ef96cb48f63ee6956a13648a3f290b_2_732x750.png 1.5x, https://forum.typst.app/uploads/default/original/2X/0/0b1cc74fd7ef96cb48f63ee6956a13648a3f290b.png 2x\" data-dominant-color=\"F3F4F5\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">747×765 84.3 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>At the moment, I’ve done this, but I don’t know if it’s possibile to add two cetz axes and create a line between them. Any idea? Thanks a lot!</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/2/24649af8ee2df078fc4400202c75d629bb0856c7.png\" alt=\"image\" data-base62-sha1=\"5bWJz3RskKZfbJsVu4jlLLx4SeX\" width=\"642\" height=\"430\"></p>",
      "raw": "Hi, \nI'm trying to replicate something similiar to this chart:\n\n![image|488x500](upload://1AiUpSTLU3AoPEcqxxjO5pxCovF.png)\n\nAt the moment, I've done this, but I don't know if it's possibile to add two cetz axes and create a line between them. Any idea? Thanks a lot!\n\n![image|642x430](upload://5bWJz3RskKZfbJsVu4jlLLx4SeX.png)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 55,
      "score": 1636.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 622
    },
    {
      "id": 5665,
      "post_number": 2,
      "username": "ParaN3xus",
      "name": "ParaN3xus",
      "created_at": "2024-11-15T11:08:00.445Z",
      "updated_at": "2024-11-15T11:08:00.445Z",
      "cooked": "<p>Currently, CeTZ doesn’t support specify position of <code>plot</code>, so we can’t directly add two plots in a single <code>canvas</code>.</p>\n<p>But luckily, this can be done by grouping the second <code>plot</code> and setting it’s <code>origin</code> manually by <code>group</code> and <code>set-origin</code>.</p>\n<p>Here is a example:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/cetz:0.3.1\"\n#import \"@preview/cetz-plot:0.1.0\"\n\n#cetz.canvas(\n  length: 72pt,\n  {\n    import cetz.draw: *\n    import cetz-plot: *\n\n    let common-x = 1\n\n    plot.plot(\n      name: \"p1\",\n      x: 4,\n      y: 4,\n      size: (4, 2),\n      asix-style: \"scientific\",\n      {\n        let f(x) = {\n          if (x &lt; -1.8) {\n            40\n          } else {\n            -0.2 * calc.pow(x + 1.8, 2) + 40\n          }\n        }\n\n        plot.add(\n          domain: (-3, 3),\n          f,\n        )\n\n        plot.add-anchor(\"p\", (common-x, f(common-x)))\n      },\n    )\n\n    group(\n      name: \"g2\",\n      {\n        set-origin((0, -2.5))\n        plot.plot(\n          name: \"plot\",\n          x: 4,\n          y: 4,\n          size: (4, 2),\n          asix-style: \"scientific\",\n          {\n\n            let f(x) = -(calc.pow(calc.e, 2 * x) - 1) / (calc.pow(calc.e, 2 * x) + 1)\n\n            plot.add(\n              domain: (-3, 3),\n              f,\n            )\n\n            plot.add-anchor(\"p\", (common-x, f(common-x)))\n          },\n        )\n      },\n    )\n\n    line(\"p1.p\", \"g2.plot.p\", stroke: (dash: \"dashed\"))\n  },\n)\n</code></pre>\n<details>\n<summary>\nPreview</summary>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/f/f36a5a03d4a4364e4659d0a3951f3458a27474b3.png\" data-download-href=\"https://forum.typst.app/uploads/default/f36a5a03d4a4364e4659d0a3951f3458a27474b3\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/f/f36a5a03d4a4364e4659d0a3951f3458a27474b3_2_479x500.png\" alt=\"image\" data-base62-sha1=\"yJlSIM8EcNxanJTzdczubk1zogX\" width=\"479\" height=\"500\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/f/f36a5a03d4a4364e4659d0a3951f3458a27474b3_2_479x500.png, https://forum.typst.app/uploads/default/optimized/2X/f/f36a5a03d4a4364e4659d0a3951f3458a27474b3_2_718x750.png 1.5x, https://forum.typst.app/uploads/default/original/2X/f/f36a5a03d4a4364e4659d0a3951f3458a27474b3.png 2x\" data-dominant-color=\"FBFBFB\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">950×990 59 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n</details>",
      "raw": "Currently, CeTZ doesn't support specify position of `plot`, so we can't directly add two plots in a single `canvas`. \n\nBut luckily, this can be done by grouping the second `plot` and setting it's `origin` manually by `group` and `set-origin`.\n\nHere is a example:\n```typ\n#import \"@preview/cetz:0.3.1\"\n#import \"@preview/cetz-plot:0.1.0\"\n\n#cetz.canvas(\n  length: 72pt,\n  {\n    import cetz.draw: *\n    import cetz-plot: *\n\n    let common-x = 1\n\n    plot.plot(\n      name: \"p1\",\n      x: 4,\n      y: 4,\n      size: (4, 2),\n      asix-style: \"scientific\",\n      {\n        let f(x) = {\n          if (x < -1.8) {\n            40\n          } else {\n            -0.2 * calc.pow(x + 1.8, 2) + 40\n          }\n        }\n\n        plot.add(\n          domain: (-3, 3),\n          f,\n        )\n\n        plot.add-anchor(\"p\", (common-x, f(common-x)))\n      },\n    )\n\n    group(\n      name: \"g2\",\n      {\n        set-origin((0, -2.5))\n        plot.plot(\n          name: \"plot\",\n          x: 4,\n          y: 4,\n          size: (4, 2),\n          asix-style: \"scientific\",\n          {\n\n            let f(x) = -(calc.pow(calc.e, 2 * x) - 1) / (calc.pow(calc.e, 2 * x) + 1)\n\n            plot.add(\n              domain: (-3, 3),\n              f,\n            )\n\n            plot.add-anchor(\"p\", (common-x, f(common-x)))\n          },\n        )\n      },\n    )\n\n    line(\"p1.p\", \"g2.plot.p\", stroke: (dash: \"dashed\"))\n  },\n)\n```\n\n[details=\"Preview\"]\n![image|479x500](upload://yJlSIM8EcNxanJTzdczubk1zogX.png)\n[/details]",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 50,
      "score": 110.0,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 14
    },
    {
      "id": 5673,
      "post_number": 3,
      "username": "Flavio",
      "name": "Flavio",
      "created_at": "2024-11-15T14:46:27.371Z",
      "updated_at": "2024-11-15T14:46:27.371Z",
      "cooked": "<p>Wonderful, thanks! I Will share the code of the final results later.</p>",
      "raw": "Wonderful, thanks! I Will share the code of the final results later.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 46,
      "score": 29.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 622
    },
    {
      "id": 6115,
      "post_number": 4,
      "username": "Flavio",
      "name": "Flavio",
      "created_at": "2024-11-26T13:22:45.857Z",
      "updated_at": "2024-11-26T13:27:11.147Z",
      "cooked": "<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">    #import \"@preview/cetz:0.3.1\": canvas, draw\n    #import \"@preview/cetz-plot:0.1.0\": plot\n    #import \"@preview/unify:0.6.0\": num, qty, numrange, qtyrange\n    \n    #let phase-margin(\n      xaxis: 1e-2,\n      yaxis: -40,\n      yaxis-scale: 20,\n      points: ((1e-1, 40), (1, 20), (1e1, 20), (1e2, 0), (1e3, -20), (1e4, -60)),\n      phase-yaxis: -180,\n      phase-yaxis-scale: 90,\n      phase-points: ((1e-1, 40), (1, 20), (1e1, 20), (1e2, 0), (1e3, -20), (1e4, -60)),\n      critic-pulsation: 1e-2,\n      critic-phase: -135,\n      color: red,\n    ) = {\n      figure()[\n        #set text(size: 8pt)\n        #canvas(\n          length: 1cm,\n          {\n            import draw: line, scale, content, circle\n            draw.set-style(mark: (fill: black))\n            draw.set-style(axes: (tick: (length:0, offset: -0.1cm)))\n            draw.set-style(axes: (label: (angle:0deg, offset: 1cm)))\n    \n            plot.plot(\n              size: (8, 5),\n              name: \"p1\",\n              axis-style: \"scientific\",\n              y-tick-step: none,\n              x-tick-step: none,\n              x-max: 16,\n              x-min: 0,\n              y-min: 0,\n              y-max: 16,\n              x-label: none,\n              y-label: $abs(overline(G)(j omega))_\"dB\"$,\n              x-ticks: array.range(5).map(x=&gt; (x*4,num(\"e\" + str(calc.log(xaxis) + x).replace(\"−\", \"-\")))),\n              y-ticks: array.range(5).map(x=&gt; (x*4,str(yaxis + yaxis-scale * x).replace(\"−\", \"-\"))),\n              {\n                for i in range(0, 4) {\n                  for j in range(1, 10) {\n                    plot.add(\n                      style: (stroke: (paint: black.lighten(50%), thickness: 0.25pt)),\n                      ((i * 4 + calc.log(j) * 4, 0), (i * 4 + calc.log(j) * 4, 16)),\n                    )\n                  }\n                }\n                for i in range(0, 4) {\n                  plot.add(style: (stroke: (paint: black.lighten(50%), thickness: 0.25pt)), domain: (0, 24), ((0, i * 4), (24, i * 4)))\n                  for j in range(1, 5) {\n                    plot.add(\n                      style: (stroke: (paint: black.lighten(50%), thickness: 0.5pt)),\n                      domain: (0, 24),\n                      ((0, i * 4 + j), (24, i * 4 + j)),\n                    )\n                  }\n                }\n    \n                if (points.len() &gt; 0) {\n                  plot.add(\n                    style: (stroke: (paint: color, thickness: 2pt)),\n                    points.map(p =&gt; {\n                      return ((calc.log(p.at(0) / xaxis)) * 4, ((p.at(1) - yaxis) / yaxis-scale * 4))\n                    }),\n                  )\n                }\n    \n                plot.add(\n                  style: (stroke: (dash: \"dashed\", paint: color, thickness: 1pt)),\n                    ((0,((0 - yaxis) / yaxis-scale * 4)),((calc.log(critic-pulsation / xaxis)) * 4,((0 - yaxis) / yaxis-scale * 4)))\n                )\n    \n                plot.add-anchor(\"p\", ((calc.log(critic-pulsation / xaxis)) * 4, ((0 - yaxis) / yaxis-scale * 4)))\n    \n              },\n            )\n    \n            draw.group(\n              name: \"g2\",\n              {\n                draw.set-origin((0, -6))\n                plot.plot(\n                  size: (8, 5),\n                  name: \"plot\",\n                  axis-style: \"scientific\",\n                  y-tick-step: none,\n                  x-tick-step: none,\n                  x-max: 16,\n                  x-min: 0,\n                  y-min: 0,\n                  y-max: 16,\n                  x-label: none,\n                  y-label: $angle overline(G)(j omega)$,\n                  x-ticks: array.range(5).map(x=&gt; (x*4,num(\"e\" + str(calc.log(xaxis) + x).replace(\"−\", \"-\")))),\n                  y-ticks: array.range(5).map(x=&gt; (x*4,str(phase-yaxis + phase-yaxis-scale * x).replace(\"−\", \"-\"))) + ((((critic-phase - phase-yaxis) / phase-yaxis-scale * 4),$bold(phi_c)$,),),\n                  {\n                    for i in range(0, 4) {\n                      for j in range(1, 10) {\n                        plot.add(\n                          style: (stroke: (paint: black.lighten(50%), thickness: 0.25pt)),\n                          ((i * 4 + calc.log(j) * 4, 0), (i * 4 + calc.log(j) * 4, 16)),\n                        )\n                      }\n                    }\n                    for i in range(0, 4) {\n                      plot.add(style: (stroke: (paint: black.lighten(50%), thickness: 0.25pt)), domain: (0, 24), ((0, i * 4), (24, i * 4)))\n                      for j in range(1, 5) {\n                        plot.add(\n                          style: (stroke: (paint: black.lighten(50%), thickness: 0.5pt)),\n                          domain: (0, 24),\n                          ((0, i * 4 + j), (24, i * 4 + j)),\n                        )\n                      }\n                    }\n    \n                    if (points.len() &gt; 0) {\n                      plot.add(\n                        style: (stroke: (paint: color, thickness: 2pt)),\n                        phase-points.map(p =&gt; {\n                          return ((calc.log(p.at(0) / xaxis)) * 4, ((p.at(1) - phase-yaxis) / phase-yaxis-scale * 4))\n                        }),\n                      )\n                    }\n    \n                    plot.add(\n                      style: (stroke: (dash: \"dashed\", paint: color, thickness: 1pt)),\n                        ((0,((critic-phase - phase-yaxis) / phase-yaxis-scale * 4)),((calc.log(critic-pulsation / xaxis)) * 4,((critic-phase - phase-yaxis) / phase-yaxis-scale * 4)))\n                    )\n    \n                    plot.add-anchor(\"p\", ((calc.log(critic-pulsation / xaxis)) * 4, ((critic-phase - phase-yaxis) / phase-yaxis-scale * 4)))\n    \n                  },\n                )\n              },\n            )\n            line(\"p1.p\", \"g2.plot.p\", stroke: (dash: \"dashed\",paint: color, thickness: 1pt),)\n            circle(\"p1.p\", radius: .075cm, stroke: color, fill: color)\n            circle(\"g2.plot.p\", radius: .075cm, stroke: color, fill: color)\n            content((rel: (0.15,0.15),  to: \"p1.p\"),\n            padding: .05,\n            anchor: \"south-west\",\n            $bold(omega_c)$,\n            frame: \"circle\",\n            fill: white,\n            stroke: none,\n            )\n          },\n        )\n      ]\n    }\n\n#figure()[\n  #phase-margin(xaxis: 1e-3, yaxis: -40, yaxis-scale: 20, points: ((1e-3,40),(1e-2,40),(1e-1,20),(1e-0,-20),(1e1,-60)), phase-yaxis: -180,phase-yaxis-scale:45,phase-points: ((1e-3,0),(1e-2,-45),(1e-1,-135),(1e-0,-180),(1e1,-180)), critic-pulsation: 3e-1, critic-phase: -157.5, color: rgb(\"#275caa\"))\n]\n</code></pre>",
      "raw": "```typst\n    #import \"@preview/cetz:0.3.1\": canvas, draw\n    #import \"@preview/cetz-plot:0.1.0\": plot\n    #import \"@preview/unify:0.6.0\": num, qty, numrange, qtyrange\n    \n    #let phase-margin(\n      xaxis: 1e-2,\n      yaxis: -40,\n      yaxis-scale: 20,\n      points: ((1e-1, 40), (1, 20), (1e1, 20), (1e2, 0), (1e3, -20), (1e4, -60)),\n      phase-yaxis: -180,\n      phase-yaxis-scale: 90,\n      phase-points: ((1e-1, 40), (1, 20), (1e1, 20), (1e2, 0), (1e3, -20), (1e4, -60)),\n      critic-pulsation: 1e-2,\n      critic-phase: -135,\n      color: red,\n    ) = {\n      figure()[\n        #set text(size: 8pt)\n        #canvas(\n          length: 1cm,\n          {\n            import draw: line, scale, content, circle\n            draw.set-style(mark: (fill: black))\n            draw.set-style(axes: (tick: (length:0, offset: -0.1cm)))\n            draw.set-style(axes: (label: (angle:0deg, offset: 1cm)))\n    \n            plot.plot(\n              size: (8, 5),\n              name: \"p1\",\n              axis-style: \"scientific\",\n              y-tick-step: none,\n              x-tick-step: none,\n              x-max: 16,\n              x-min: 0,\n              y-min: 0,\n              y-max: 16,\n              x-label: none,\n              y-label: $abs(overline(G)(j omega))_\"dB\"$,\n              x-ticks: array.range(5).map(x=> (x*4,num(\"e\" + str(calc.log(xaxis) + x).replace(\"−\", \"-\")))),\n              y-ticks: array.range(5).map(x=> (x*4,str(yaxis + yaxis-scale * x).replace(\"−\", \"-\"))),\n              {\n                for i in range(0, 4) {\n                  for j in range(1, 10) {\n                    plot.add(\n                      style: (stroke: (paint: black.lighten(50%), thickness: 0.25pt)),\n                      ((i * 4 + calc.log(j) * 4, 0), (i * 4 + calc.log(j) * 4, 16)),\n                    )\n                  }\n                }\n                for i in range(0, 4) {\n                  plot.add(style: (stroke: (paint: black.lighten(50%), thickness: 0.25pt)), domain: (0, 24), ((0, i * 4), (24, i * 4)))\n                  for j in range(1, 5) {\n                    plot.add(\n                      style: (stroke: (paint: black.lighten(50%), thickness: 0.5pt)),\n                      domain: (0, 24),\n                      ((0, i * 4 + j), (24, i * 4 + j)),\n                    )\n                  }\n                }\n    \n                if (points.len() > 0) {\n                  plot.add(\n                    style: (stroke: (paint: color, thickness: 2pt)),\n                    points.map(p => {\n                      return ((calc.log(p.at(0) / xaxis)) * 4, ((p.at(1) - yaxis) / yaxis-scale * 4))\n                    }),\n                  )\n                }\n    \n                plot.add(\n                  style: (stroke: (dash: \"dashed\", paint: color, thickness: 1pt)),\n                    ((0,((0 - yaxis) / yaxis-scale * 4)),((calc.log(critic-pulsation / xaxis)) * 4,((0 - yaxis) / yaxis-scale * 4)))\n                )\n    \n                plot.add-anchor(\"p\", ((calc.log(critic-pulsation / xaxis)) * 4, ((0 - yaxis) / yaxis-scale * 4)))\n    \n              },\n            )\n    \n            draw.group(\n              name: \"g2\",\n              {\n                draw.set-origin((0, -6))\n                plot.plot(\n                  size: (8, 5),\n                  name: \"plot\",\n                  axis-style: \"scientific\",\n                  y-tick-step: none,\n                  x-tick-step: none,\n                  x-max: 16,\n                  x-min: 0,\n                  y-min: 0,\n                  y-max: 16,\n                  x-label: none,\n                  y-label: $angle overline(G)(j omega)$,\n                  x-ticks: array.range(5).map(x=> (x*4,num(\"e\" + str(calc.log(xaxis) + x).replace(\"−\", \"-\")))),\n                  y-ticks: array.range(5).map(x=> (x*4,str(phase-yaxis + phase-yaxis-scale * x).replace(\"−\", \"-\"))) + ((((critic-phase - phase-yaxis) / phase-yaxis-scale * 4),$bold(phi_c)$,),),\n                  {\n                    for i in range(0, 4) {\n                      for j in range(1, 10) {\n                        plot.add(\n                          style: (stroke: (paint: black.lighten(50%), thickness: 0.25pt)),\n                          ((i * 4 + calc.log(j) * 4, 0), (i * 4 + calc.log(j) * 4, 16)),\n                        )\n                      }\n                    }\n                    for i in range(0, 4) {\n                      plot.add(style: (stroke: (paint: black.lighten(50%), thickness: 0.25pt)), domain: (0, 24), ((0, i * 4), (24, i * 4)))\n                      for j in range(1, 5) {\n                        plot.add(\n                          style: (stroke: (paint: black.lighten(50%), thickness: 0.5pt)),\n                          domain: (0, 24),\n                          ((0, i * 4 + j), (24, i * 4 + j)),\n                        )\n                      }\n                    }\n    \n                    if (points.len() > 0) {\n                      plot.add(\n                        style: (stroke: (paint: color, thickness: 2pt)),\n                        phase-points.map(p => {\n                          return ((calc.log(p.at(0) / xaxis)) * 4, ((p.at(1) - phase-yaxis) / phase-yaxis-scale * 4))\n                        }),\n                      )\n                    }\n    \n                    plot.add(\n                      style: (stroke: (dash: \"dashed\", paint: color, thickness: 1pt)),\n                        ((0,((critic-phase - phase-yaxis) / phase-yaxis-scale * 4)),((calc.log(critic-pulsation / xaxis)) * 4,((critic-phase - phase-yaxis) / phase-yaxis-scale * 4)))\n                    )\n    \n                    plot.add-anchor(\"p\", ((calc.log(critic-pulsation / xaxis)) * 4, ((critic-phase - phase-yaxis) / phase-yaxis-scale * 4)))\n    \n                  },\n                )\n              },\n            )\n            line(\"p1.p\", \"g2.plot.p\", stroke: (dash: \"dashed\",paint: color, thickness: 1pt),)\n            circle(\"p1.p\", radius: .075cm, stroke: color, fill: color)\n            circle(\"g2.plot.p\", radius: .075cm, stroke: color, fill: color)\n            content((rel: (0.15,0.15),  to: \"p1.p\"),\n            padding: .05,\n            anchor: \"south-west\",\n            $bold(omega_c)$,\n            frame: \"circle\",\n            fill: white,\n            stroke: none,\n            )\n          },\n        )\n      ]\n    }\n\n#figure()[\n  #phase-margin(xaxis: 1e-3, yaxis: -40, yaxis-scale: 20, points: ((1e-3,40),(1e-2,40),(1e-1,20),(1e-0,-20),(1e1,-60)), phase-yaxis: -180,phase-yaxis-scale:45,phase-points: ((1e-3,0),(1e-2,-45),(1e-1,-135),(1e-0,-180),(1e1,-180)), critic-pulsation: 3e-1, critic-phase: -157.5, color: rgb(\"#275caa\"))\n]\n```",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 33,
      "score": 46.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 622
    }
  ],
  "scraped_at": "2025-06-10T09:54:54.543087"
}