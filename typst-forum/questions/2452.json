{
  "topic_metadata": {
    "id": 2452,
    "title": "How to modify a raw block without triggering 'maximum show rule depth exceeded'?",
    "slug": "how-to-modify-a-raw-block-without-triggering-maximum-show-rule-depth-exceeded",
    "posts_count": 7,
    "created_at": "2025-01-18T00:16:38.685Z",
    "last_posted_at": "2025-01-22T00:18:26.396Z",
    "views": 258,
    "like_count": 5,
    "reply_count": 4,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 5,
    "accepted_answer_username": "janekfleper",
    "tags": [
      "scripting",
      "styling"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 634
  },
  "posts": [
    {
      "id": 7617,
      "post_number": 1,
      "username": "gpr",
      "name": "Greg",
      "created_at": "2025-01-18T00:16:38.822Z",
      "updated_at": "2025-01-18T19:09:47.762Z",
      "cooked": "<p>I would like to implement Asciidoc-like Callouts (<a href=\"https://docs.asciidoctor.org/asciidoc/latest/verbatim/callouts/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Callouts | Asciidoctor Docs</a>). In order to do so, I process the raw blocks for <code>// 1</code> style comments and replace them with <code>①</code> circled numbers. It’s actually quite straightforward:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show raw.where(block: true): it =&gt; {\n  set text(size: 1.25em) // fix https://github.com/typst/typst/issues/1331\n\n  it = it.text.replace(regex(\"// \\((\\d+)\\)\"),\n      i =&gt; str.from-unicode(9311 + int(i.captures.at(0))))\n\n  // endless loop\n  raw(it, block: true, lang: \"java\")\n}\n</code></pre>\n<p>I get the error <code>maximum show rule depth exceeded</code> which it seems is an endless loop because it tries to reapply the <code>show</code> rule over and over again even after the replacement. With (<code>raw(it, lang: \"java\")</code>) it already works, but this is no code block, it’s inline raw code.</p>\n<p>How to circumvent the endless loop (<code>maximum show rule depth exceeded</code>)?</p>",
      "raw": "I would like to implement Asciidoc-like Callouts (https://docs.asciidoctor.org/asciidoc/latest/verbatim/callouts/). In order to do so, I process the raw blocks for `// 1` style comments and replace them with `①` circled numbers. It's actually quite straightforward:\n\n```typ\n#show raw.where(block: true): it => {\n  set text(size: 1.25em) // fix https://github.com/typst/typst/issues/1331\n\n  it = it.text.replace(regex(\"// \\((\\d+)\\)\"),\n      i => str.from-unicode(9311 + int(i.captures.at(0))))\n\n  // endless loop\n  raw(it, block: true, lang: \"java\")\n}\n```\n\nI get the error `maximum show rule depth exceeded` which it seems is an endless loop because it tries to reapply the `show` rule over and over again even after the replacement. With (`raw(it, lang: \"java\")`) it already works, but this is no code block, it's inline raw code.\n\nHow to circumvent the endless loop (`maximum show rule depth exceeded`)?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 43,
      "score": 928.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1052
    },
    {
      "id": 7619,
      "post_number": 2,
      "username": "janekfleper",
      "name": "Janek Fleper",
      "created_at": "2025-01-18T01:25:56.220Z",
      "updated_at": "2025-01-18T01:33:08.924Z",
      "cooked": "<p>You should use a nested show rule to do the replacement you want. That way you don’t have to call <code>raw()</code> again which will cause an infinite loop, as you already noticed yourself.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show raw.where(block: true): it =&gt; {\n  show regex(\"// \\((\\d+)\\)\"): it =&gt; {\n    // do your string replacement here\n  }\n\n  it\n}\n</code></pre>",
      "raw": "You should use a nested show rule to do the replacement you want. That way you don't have to call `raw()` again which will cause an infinite loop, as you already noticed yourself.\n\n```typ\n#show raw.where(block: true): it => {\n  show regex(\"// \\((\\d+)\\)\"): it => {\n    // do your string replacement here\n  }\n\n  it\n}\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 41,
      "score": 28.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 69
    },
    {
      "id": 7633,
      "post_number": 3,
      "username": "PgBiel",
      "name": "",
      "created_at": "2025-01-18T19:10:45.891Z",
      "updated_at": "2025-01-18T19:10:45.891Z",
      "cooked": "<p>Hey <a class=\"mention\" href=\"/u/gpr\">@gpr</a>, welcome to the forum! I’ve added some tags and also changed your question post’s title to better fit our guidelines: <a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11\">How to post in the Questions category</a></p>\n<p>For future posts, make sure your title is a question you’d ask to a friend about Typst. <img src=\"https://forum.typst.app/images/emoji/apple/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>In addition, if <a class=\"mention\" href=\"/u/janekfleper\">@janekfleper</a>’s answer helped you, make sure to mark it as a solution. If not, let us know if you have further questions!</p>",
      "raw": "Hey @gpr, welcome to the forum! I’ve added some tags and also changed your question post’s title to better fit our guidelines: [How to post in the Questions category](https://forum.typst.app/t/how-to-post-in-the-questions-category/11)\n\nFor future posts, make sure your title is a question you’d ask to a friend about Typst. :wink:\n\nIn addition, if @janekfleper's answer helped you, make sure to mark it as a solution. If not, let us know if you have further questions!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 38,
      "score": 32.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 7647,
      "post_number": 4,
      "username": "gpr",
      "name": "Greg",
      "created_at": "2025-01-18T22:18:10.960Z",
      "updated_at": "2025-01-19T11:27:56.345Z",
      "cooked": "<p>Thanks, it works great for normal raw blocks without syntax highlighting:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show raw.where(block: true): rawblock =&gt; {\n  show regex(\"// &lt;(\\d+)&gt;\"): match =&gt; {\n    match.text.replace(regex(\"// &lt;(\\d+)&gt;\"),\n      i =&gt; str.from-unicode(9311 + int(i.captures.at(0))))\n  }\n  rawblock\n  // repr(rawblock)\n}\n\n```\npublic class HelloWorld {                  // &lt;1&gt;\n  public static void main(String[] args) { // &lt;2&gt;\n    System.out.println(\"Hello, World!\");   // &lt;3&gt;\n  }\n}\n```\n\n#set enum(numbering: \"①\")\n+ The class name is `HelloWorld`\n+ This is the method signature\n+ This is the call to `stdout`\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/9/94ac9ff614cfb42bd8057b75fcebc2021be46be8.png\" alt=\"2025-01-18 23_10_55-admonitions – Typst\" data-base62-sha1=\"ldevMEZmMsgzEbERfID8L4BqXhu\" width=\"476\" height=\"223\"></p>\n<p>I find, it fits nicely with the numbered list with circled numbers <img src=\"https://forum.typst.app/images/emoji/apple/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"> .</p>\n<p>But unfortunately it breaks when trying to use syntax highlighted code:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">```java\npublic class HelloWorld {                  // &lt;1&gt;\n  public static void main(String[] args) { // &lt;2&gt;\n    System.out.println(\"Hello, World!\");   // &lt;3&gt;\n  }\n}\n```\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/9/93e5c67f0ceaa9faff0b2ff41a25ebe6778de4d0.png\" data-download-href=\"https://forum.typst.app/uploads/default/93e5c67f0ceaa9faff0b2ff41a25ebe6778de4d0\" title=\"2025-01-18 23_13_37-admonitions – Typst Kopie\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/9/93e5c67f0ceaa9faff0b2ff41a25ebe6778de4d0_2_650x500.png\" alt=\"2025-01-18 23_13_37-admonitions – Typst Kopie\" data-base62-sha1=\"l6mtJH0E1IpGk5FGNzet6uFWONG\" width=\"650\" height=\"500\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/9/93e5c67f0ceaa9faff0b2ff41a25ebe6778de4d0_2_650x500.png, https://forum.typst.app/uploads/default/original/2X/9/93e5c67f0ceaa9faff0b2ff41a25ebe6778de4d0.png 1.5x, https://forum.typst.app/uploads/default/original/2X/9/93e5c67f0ceaa9faff0b2ff41a25ebe6778de4d0.png 2x\" data-dominant-color=\"F6F8F9\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">2025-01-18 23_13_37-admonitions – Typst Kopie</span><span class=\"informations\">851×654 88 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>The symbols are replaced in <code>raw.text</code> and <code>raw.lines.line.text</code> but not in the last two styled elements.</p>",
      "raw": "Thanks, it works great for normal raw blocks without syntax highlighting:\n\n````typ\n#show raw.where(block: true): rawblock => {\n  show regex(\"// <(\\d+)>\"): match => {\n    match.text.replace(regex(\"// <(\\d+)>\"),\n      i => str.from-unicode(9311 + int(i.captures.at(0))))\n  }\n  rawblock\n  // repr(rawblock)\n}\n\n```\npublic class HelloWorld {                  // <1>\n  public static void main(String[] args) { // <2>\n    System.out.println(\"Hello, World!\");   // <3>\n  }\n}\n```\n\n#set enum(numbering: \"①\")\n+ The class name is `HelloWorld`\n+ This is the method signature\n+ This is the call to `stdout`\n````\n\n![2025-01-18 23_10_55-admonitions – Typst|476x223](upload://ldevMEZmMsgzEbERfID8L4BqXhu.png)\n\nI find, it fits nicely with the numbered list with circled numbers :slight_smile: .\n\nBut unfortunately it breaks when trying to use syntax highlighted code:\n\n````typ\n```java\npublic class HelloWorld {                  // <1>\n  public static void main(String[] args) { // <2>\n    System.out.println(\"Hello, World!\");   // <3>\n  }\n}\n```\n````\n\n![2025-01-18 23_13_37-admonitions – Typst Kopie|650x500](upload://l6mtJH0E1IpGk5FGNzet6uFWONG.png)\n\nThe symbols are replaced in `raw.text` and `raw.lines.line.text` but not in the last two styled elements.",
      "reply_to_post_number": 2,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 0,
      "reads": 38,
      "score": 27.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1052
    },
    {
      "id": 7648,
      "post_number": 5,
      "username": "janekfleper",
      "name": "Janek Fleper",
      "created_at": "2025-01-19T00:34:27.637Z",
      "updated_at": "2025-01-19T00:34:27.637Z",
      "cooked": "<p>The only solution I can think of is to use an additional show rule that hides the forward slashes and to reduce the regex show rule to only match <code> &lt;1&gt;</code>. This is of course far from an elegant solution…</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show raw.where(block: true, lang: \"java\"): it =&gt; {\n  show \"//\": \"\"\n  show regex(\" &lt;(\\d+)&gt;\"): it =&gt; {\n    // do your string replacement here\n  }\n  it\n}\n</code></pre>",
      "raw": "The only solution I can think of is to use an additional show rule that hides the forward slashes and to reduce the regex show rule to only match ` <1>`. This is of course far from an elegant solution...\n\n```typ\n#show raw.where(block: true, lang: \"java\"): it => {\n  show \"//\": \"\"\n  show regex(\" <(\\d+)>\"): it => {\n    // do your string replacement here\n  }\n  it\n}\n```",
      "reply_to_post_number": 4,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 32,
      "score": 36.4,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 69
    },
    {
      "id": 7675,
      "post_number": 6,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-01-19T11:40:34.581Z",
      "updated_at": "2025-01-19T11:40:34.581Z",
      "cooked": "<p>A completely different approach could be to use Codly’s code highlight features:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/3/35eb54fcaa1fa85f0be53a43bd38bbd12365372c.png\" data-download-href=\"https://forum.typst.app/uploads/default/35eb54fcaa1fa85f0be53a43bd38bbd12365372c\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/3/35eb54fcaa1fa85f0be53a43bd38bbd12365372c_2_690x333.png\" alt=\"image\" data-base62-sha1=\"7GZv98mcZ4Wmc2OfCH6lVv0hyGw\" width=\"690\" height=\"333\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/3/35eb54fcaa1fa85f0be53a43bd38bbd12365372c_2_690x333.png, https://forum.typst.app/uploads/default/optimized/2X/3/35eb54fcaa1fa85f0be53a43bd38bbd12365372c_2_1035x499.png 1.5x, https://forum.typst.app/uploads/default/optimized/2X/3/35eb54fcaa1fa85f0be53a43bd38bbd12365372c_2_1380x666.png 2x\" data-dominant-color=\"F3F3F3\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1966×949 157 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://typst.app/universe/package/codly\">\n  <header class=\"source\">\n      <img src=\"https://forum.typst.app/uploads/default/original/1X/098187a593d51c4db99324614e2baeeb1bb355cc.png\" class=\"site-icon\" data-dominant-color=\"3CA8B6\" width=\"32\" height=\"32\">\n\n      <a href=\"https://typst.app/universe/package/codly\" target=\"_blank\" rel=\"noopener\">Typst</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/361;\"><img src=\"https://forum.typst.app/uploads/default/optimized/1X/db1c18ed802fe6841bee62606931f352da10ed09_2_690x362.png\" class=\"thumbnail\" data-dominant-color=\"7CC2C5\" width=\"690\" height=\"362\"></div>\n\n<h3><a href=\"https://typst.app/universe/package/codly\" target=\"_blank\" rel=\"noopener\">codly – Typst Universe</a></h3>\n\n  <p>Codly is a beautiful code presentation template with many features like smart indentation, line numbering, highlighting, etc.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>Or maybe Codly’s implementation can give some pointers on how you could do it in the way you imagined it initially.</p>",
      "raw": "A completely different approach could be to use Codly's code highlight features:\n\n![image|690x333](upload://7GZv98mcZ4Wmc2OfCH6lVv0hyGw.png)\n\nhttps://typst.app/universe/package/codly\n\nOr maybe Codly's implementation can give some pointers on how you could do it in the way you imagined it initially.",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 31,
      "score": 41.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 7755,
      "post_number": 7,
      "username": "gpr",
      "name": "Greg",
      "created_at": "2025-01-22T00:18:26.396Z",
      "updated_at": "2025-01-22T00:18:26.396Z",
      "cooked": "<p>Thanks, so this actually works. Maybe someone finds this via Google, here is the code:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show raw.where(block: true): rawblock =&gt; {\n  show \"//\": \"\"\n  show regex(\" &lt;(\\d+)&gt;\"): match =&gt; {\n    match.text.replace(regex(\" &lt;(\\d+)&gt;\"),\n      i =&gt; str.from-unicode(9311 + int(i.captures.at(0))))\n  }\n  rawblock\n}\n\n'``java\npublic class HelloWorld {                  // &lt;1&gt;\n  public static void main(String[] args) { // &lt;2&gt;\n    System.out.println(\"Hello, World!\");   // &lt;3&gt;\n  } // &lt;4&gt;\n} // &lt;5&gt;\n'``\n\n#set enum(numbering: \"①\")\n+ The class name is `HelloWorld`\n+ This is the method signature\n+ This is the call to `stdout`\n</code></pre>",
      "raw": "Thanks, so this actually works. Maybe someone finds this via Google, here is the code:\n\n```typ\n#show raw.where(block: true): rawblock => {\n  show \"//\": \"\"\n  show regex(\" <(\\d+)>\"): match => {\n    match.text.replace(regex(\" <(\\d+)>\"),\n      i => str.from-unicode(9311 + int(i.captures.at(0))))\n  }\n  rawblock\n}\n\n'``java\npublic class HelloWorld {                  // <1>\n  public static void main(String[] args) { // <2>\n    System.out.println(\"Hello, World!\");   // <3>\n  } // <4>\n} // <5>\n'``\n\n#set enum(numbering: \"①\")\n+ The class name is `HelloWorld`\n+ This is the method signature\n+ This is the call to `stdout`\n```",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 25,
      "score": 20.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1052
    }
  ],
  "scraped_at": "2025-06-10T09:52:43.283135"
}