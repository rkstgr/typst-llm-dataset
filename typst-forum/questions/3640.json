{
  "topic_metadata": {
    "id": 3640,
    "title": "Is there an equivalent `\\input{file.tex}` command (from LaTeX) in Typst?",
    "slug": "is-there-an-equivalent-input-file-tex-command-from-latex-in-typst",
    "posts_count": 5,
    "created_at": "2025-04-14T02:41:38.090Z",
    "last_posted_at": "2025-04-14T22:12:28.472Z",
    "views": 126,
    "like_count": 2,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "quachpas",
    "tags": [
      "scripting"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 360
  },
  "posts": [
    {
      "id": 10998,
      "post_number": 1,
      "username": "ruiantunes",
      "name": "Rui Antunes",
      "created_at": "2025-04-14T02:41:38.184Z",
      "updated_at": "2025-04-14T02:41:38.184Z",
      "cooked": "<p>Consider the following two Typst files.</p>\n<p><strong>config.typ</strong>:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set page(paper: \"a4\")\nThis is the *config.typ* file.\n</code></pre>\n<p><strong>main.typ</strong>:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#include \"config.typ\"\nThis is the *main.typ* file.\n</code></pre>\n<p>I noticed that when previewing the <strong>main.typ</strong> file there’s a page break after the contents of the <strong>config.typ</strong> file. Why? How can this be avoided?</p>\n<p>This is likely not the best way to configure the layout of a document in Typst, however I still think an <code>#input(file.typ)</code> function could be helpful in some scenarios as also suggested in <a href=\"https://github.com/typst/typst/issues/754\" rel=\"noopener nofollow ugc\">this GitHub issue</a>.</p>\n<p>My objective with this functionality (if it exists) would be to split a very long <strong>main.typ</strong> file into several smaller Typst files so that the project could be “organized better”. Is that possible? Any help is appreciated!</p>",
      "raw": "Consider the following two Typst files.\n\n**config.typ**:\n```typ\n#set page(paper: \"a4\")\nThis is the *config.typ* file.\n```\n\n**main.typ**:\n```typ\n#include \"config.typ\"\nThis is the *main.typ* file.\n```\n\nI noticed that when previewing the **main.typ** file there's a page break after the contents of the **config.typ** file. Why? How can this be avoided?\n\nThis is likely not the best way to configure the layout of a document in Typst, however I still think an `#input(file.typ)` function could be helpful in some scenarios as also suggested in [this GitHub issue](https://github.com/typst/typst/issues/754).\n\nMy objective with this functionality (if it exists) would be to split a very long **main.typ** file into several smaller Typst files so that the project could be \"organized better\". Is that possible? Any help is appreciated!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 34,
      "score": 191.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1454
    },
    {
      "id": 11053,
      "post_number": 2,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2025-04-14T06:49:27.872Z",
      "updated_at": "2025-04-14T06:49:27.872Z",
      "cooked": "<p>The correct function is <code>include</code>, but you are setting the <code>page</code> element.</p>\n<p>This behaviour is not very well documented, but you can read at the page setup guide</p>\n<blockquote>\n<p><a href=\"https://typst.app/docs/guides/page-setup-guide/#:~:text=If%20you%20make%20changes%20with%20this%20set%20rule%2C%20Typst%20will%20ensure%20that%20there%20is%20a%20new%20and%20conforming%20empty%20page%20afterward%2C%20so%20it%20may%20insert%20a%20page%20break\">If you make changes with this set rule, Typst will ensure that there is a new and conforming empty page afterward, so it may insert a page break</a>.</p>\n</blockquote>\n<p>A crucial difference to remember is that <code>include</code> evaluates the file and returns <strong><code>content</code></strong>, whereas <code>import</code> will return a <code>module</code> (from which you can select functions, etc.). See <a href=\"https://typst.app/docs/reference/scripting/#modules\" class=\"inline-onebox\">Scripting – Typst Documentation</a>.</p>",
      "raw": "The correct function is `include`, but you are setting the `page` element. \n\nThis behaviour is not very well documented, but you can read at the page setup guide\n\n> [If you make changes with this set rule, Typst will ensure that there is a new and conforming empty page afterward, so it may insert a page break](https://typst.app/docs/guides/page-setup-guide/#:~:text=If%20you%20make%20changes%20with%20this%20set%20rule%2C%20Typst%20will%20ensure%20that%20there%20is%20a%20new%20and%20conforming%20empty%20page%20afterward%2C%20so%20it%20may%20insert%20a%20page%20break).\n\nA crucial difference to remember is that `include` evaluates the file and returns **`content`**, whereas `import` will return a `module` (from which you can select functions, etc.). See https://typst.app/docs/reference/scripting/#modules.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 33,
      "score": 36.6,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 11064,
      "post_number": 3,
      "username": "ruiantunes",
      "name": "Rui Antunes",
      "created_at": "2025-04-14T13:47:10.114Z",
      "updated_at": "2025-04-14T13:47:10.114Z",
      "cooked": "<p>Thank you for the explanation! Though I still find it a bit “confusing” that a page break is blindly inserted even though the page layout is already conforming.</p>",
      "raw": "Thank you for the explanation! Though I still find it a bit \"confusing\" that a page break is blindly inserted even though the page layout is already conforming.",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 29,
      "score": 5.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1454
    },
    {
      "id": 11075,
      "post_number": 4,
      "username": "bluss",
      "name": "Ulrik",
      "created_at": "2025-04-14T17:19:15.959Z",
      "updated_at": "2025-04-14T17:19:15.959Z",
      "cooked": "<p>Are you maybe looking for how to make a template? Page setup could be part of a template, that you define in the template but import and apply in the document.</p>\n<p>See <a href=\"https://typst.app/docs/tutorial/making-a-template/\" class=\"inline-onebox\">Making a Template – Typst Documentation</a></p>",
      "raw": "Are you maybe looking for how to make a template? Page setup could be part of a template, that you define in the template but import and apply in the document.\n\nSee https://typst.app/docs/tutorial/making-a-template/",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 26,
      "score": 20.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 1272
    },
    {
      "id": 11091,
      "post_number": 5,
      "username": "ruiantunes",
      "name": "Rui Antunes",
      "created_at": "2025-04-14T22:12:28.472Z",
      "updated_at": "2025-04-14T22:12:28.472Z",
      "cooked": "<p>Yes, thank you for the clarification! I’ll look into making a template and how to use the <code>#import</code> function.</p>",
      "raw": "Yes, thank you for the clarification! I'll look into making a template and how to use the `#import` function.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 23,
      "score": 4.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1454
    }
  ],
  "scraped_at": "2025-06-10T09:49:14.497977"
}