{
  "topic_metadata": {
    "id": 2065,
    "title": "How to export locations through command line query?",
    "slug": "how-to-export-locations-through-command-line-query",
    "posts_count": 4,
    "created_at": "2024-12-12T14:38:43.723Z",
    "last_posted_at": "2024-12-13T21:53:47.401Z",
    "views": 103,
    "like_count": 3,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "Hannes",
    "tags": [
      "cli",
      "query"
    ],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 241
  },
  "posts": [
    {
      "id": 6558,
      "post_number": 1,
      "username": "jkwchui",
      "name": "Jon Chui",
      "created_at": "2024-12-12T14:38:43.894Z",
      "updated_at": "2024-12-15T10:20:41.900Z",
      "cooked": "<p>I am experimenting with preparing a checklist, and then being able to scan the print and identify whether particular items are checked off.  (Think poor man’s optical multiple choice bubble sheets.)</p>\n<p>To draw and locate the circle is straight-forward:</p>\n<pre><code class=\"lang-auto\">#circle(radius: 10mm)&lt;my_circle&gt;\n\n#context [\n  circle location: #locate(&lt;my_circle&gt;).position()\n]&lt;circle_locator&gt;\n</code></pre>\n<p>However, when I introspect from the command-line using <code>typst query test.typ \"&lt;circle_locator&gt;\"</code>, hoping to be able to pick out a <code>value</code>, it only returns that <code>&lt;circle_locator&gt;</code> is a context.</p>\n<pre><code class=\"lang-auto\">[{\n    \"func\":\"context\", \n    \"label\":\"&lt;circle_locator&gt;\" \n}]\n</code></pre>\n<p>I then tried a variety of more and more contorted wrap in <code>metadata</code> and so on, but it seems what’s inside the context is completely opaque.</p>\n<p><strong>Is there a way to pull out location of objects on the command line query?</strong></p>",
      "raw": "I am experimenting with preparing a checklist, and then being able to scan the print and identify whether particular items are checked off.  (Think poor man's optical multiple choice bubble sheets.)\n\nTo draw and locate the circle is straight-forward:\n\n```\n#circle(radius: 10mm)<my_circle>\n\n#context [\n  circle location: #locate(<my_circle>).position()\n]<circle_locator>\n```\n\nHowever, when I introspect from the command-line using `typst query test.typ \"<circle_locator>\"`, hoping to be able to pick out a `value`, it only returns that `<circle_locator>` is a context.\n\n```\n[{\n    \"func\":\"context\", \n    \"label\":\"<circle_locator>\" \n}]\n```\n\nI then tried a variety of more and more contorted wrap in `metadata` and so on, but it seems what's inside the context is completely opaque.\n\n**Is there a way to pull out location of objects on the command line query?**",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 28,
      "score": 155.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 254
    },
    {
      "id": 6561,
      "post_number": 2,
      "username": "Hannes",
      "name": "Hannes",
      "created_at": "2024-12-12T17:45:59.599Z",
      "updated_at": "2024-12-12T19:36:18.645Z",
      "cooked": "<p>Hi, the following should work:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#circle(radius: 10mm)&lt;my_circle&gt;\n\n#context [\n  // Just wrap it inside anything that can be queried\n  #metadata(\n    (\n      circle-location: locate(&lt;my_circle&gt;).position()\n    )\n  )&lt;circle_locator&gt; // Moved the label inside of the context block\n]\n</code></pre>\n<p>Giving the following output:</p>\n<pre data-code-wrap=\"bash\"><code class=\"lang-bash\">typst query tmp.typ '&lt;circle_locator&gt;'\n[{\n  \"func\" : \"metadata\",\n  \"value\" : {\n    \"circle-location\" : {\n      \"page\" : 1,\n      \"x\" : \"70.87pt\",\n      \"y\" : \"70.87pt\"\n    }\n  },\n  \"label\" : \"&lt;circle_locator&gt;\"\n}]\n</code></pre>",
      "raw": "Hi, the following should work:\n```typ\n#circle(radius: 10mm)<my_circle>\n\n#context [\n  // Just wrap it inside anything that can be queried\n  #metadata(\n    (\n      circle-location: locate(<my_circle>).position()\n    )\n  )<circle_locator> // Moved the label inside of the context block\n]\n```\nGiving the following output:\n```bash\ntypst query tmp.typ '<circle_locator>'\n[{\n  \"func\" : \"metadata\",\n  \"value\" : {\n    \"circle-location\" : {\n      \"page\" : 1,\n      \"x\" : \"70.87pt\",\n      \"y\" : \"70.87pt\"\n    }\n  },\n  \"label\" : \"<circle_locator>\"\n}]\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 25,
      "score": 75.0,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 922
    },
    {
      "id": 6573,
      "post_number": 3,
      "username": "jkwchui",
      "name": "Jon Chui",
      "created_at": "2024-12-13T01:32:23.834Z",
      "updated_at": "2024-12-13T01:32:23.834Z",
      "cooked": "<p>Thank you!</p>\n<p>What is the inner parenthesis doing inside the <code>metatdata()</code>?</p>",
      "raw": "Thank you!\n\nWhat is the inner parenthesis doing inside the `metatdata()`?",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 14.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 254
    },
    {
      "id": 6613,
      "post_number": 4,
      "username": "Hannes",
      "name": "Hannes",
      "created_at": "2024-12-13T21:53:47.401Z",
      "updated_at": "2024-12-13T21:53:47.401Z",
      "cooked": "<p>The inner expression creates a <a href=\"https://typst.app/docs/reference/foundations/dictionary/\">dictionary</a>, in this case with the single key <code>circle-location</code>. I was just mimicking the text you had before. You could also put the location directly into the metadata.</p>",
      "raw": "The inner expression creates a [dictionary](https://typst.app/docs/reference/foundations/dictionary/), in this case with the single key `circle-location`. I was just mimicking the text you had before. You could also put the location directly into the metadata.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 19,
      "score": 23.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 922
    }
  ],
  "scraped_at": "2025-06-10T09:53:41.811512"
}