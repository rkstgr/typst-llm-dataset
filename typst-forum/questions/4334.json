{
  "topic_metadata": {
    "id": 4334,
    "title": "How to place a state update key at every page without using header or footer?",
    "slug": "how-to-place-a-state-update-key-at-every-page-without-using-header-or-footer",
    "posts_count": 9,
    "created_at": "2025-05-27T15:23:58.325Z",
    "last_posted_at": "2025-05-30T13:51:07.732Z",
    "views": 62,
    "like_count": 2,
    "reply_count": 5,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 6,
    "accepted_answer_username": "bluss",
    "tags": [
      "scripting"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 386
  },
  "posts": [
    {
      "id": 13284,
      "post_number": 1,
      "username": "Pakorn",
      "name": "Pakorn",
      "created_at": "2025-05-27T15:23:58.403Z",
      "updated_at": "2025-05-27T15:23:58.403Z",
      "cooked": "<p>I am creating a template that has a state update at the footer of the page to store some values. However, the current method to do this is using set rules. As the <code>set page(footer: ..)</code>  can be overridden by user, my state update will be gone if they set their own footer. How I can do this?</p>",
      "raw": "I am creating a template that has a state update at the footer of the page to store some values. However, the current method to do this is using set rules. As the `set page(footer: ..)`  can be overridden by user, my state update will be gone if they set their own footer. How I can do this?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 19.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 819
    },
    {
      "id": 13299,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-27T17:33:56.812Z",
      "updated_at": "2025-05-27T17:33:56.812Z",
      "cooked": "<p>Depending on how a new page is being added. You have footer, header, background, foreground.</p>",
      "raw": "Depending on how a new page is being added. You have footer, header, background, foreground.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 22,
      "score": 4.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 13378,
      "post_number": 3,
      "username": "Pakorn",
      "name": "Pakorn",
      "created_at": "2025-05-29T05:04:03.916Z",
      "updated_at": "2025-05-29T05:04:03.916Z",
      "cooked": "<p>I came up with  a solution that’s quite close to <a class=\"mention\" href=\"/u/andrew\">@Andrew</a> 's idea, the foreground. However, to keep user not to overwrite this accidentally, I did this</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">show: rest =&gt; context {\n   set page(foreground: page.foreground + my-counter.step())\n   rest\n}\n</code></pre>\n<p>which, in my opinion, is very cursed. It is prone to convergence problem.</p>",
      "raw": "I came up with  a solution that's quite close to @Andrew 's idea, the foreground. However, to keep user not to overwrite this accidentally, I did this\n```typst\nshow: rest => context {\n   set page(foreground: page.foreground + my-counter.step())\n   rest\n}\n```\nwhich, in my opinion, is very cursed. It is prone to convergence problem.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 20,
      "score": 24.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 819
    },
    {
      "id": 13414,
      "post_number": 4,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-30T02:42:35.786Z",
      "updated_at": "2025-05-30T02:42:35.786Z",
      "cooked": "<p>What is this state for? Or I guess a counter.</p>",
      "raw": "What is this state for? Or I guess a counter.",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 14,
      "score": 7.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 13420,
      "post_number": 5,
      "username": "Pakorn",
      "name": "Pakorn",
      "created_at": "2025-05-30T03:44:10.597Z",
      "updated_at": "2025-05-30T03:45:16.002Z",
      "cooked": "<p>It is a literal page counter (like an index that must count for every page). I am creating a package for making slides, and default page counter I have used it for page number, which must be frozen during the subslide animations.</p>",
      "raw": "It is a literal page counter (like an index that must count for every page). I am creating a package for making slides, and default page counter I have used it for page number, which must be frozen during the subslide animations.",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 14,
      "score": 7.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 819
    },
    {
      "id": 13434,
      "post_number": 6,
      "username": "bluss",
      "name": "Ulrik",
      "created_at": "2025-05-30T10:47:53.947Z",
      "updated_at": "2025-05-30T10:47:53.947Z",
      "cooked": "<p>Can you use <code>here().page()</code>, the “physical page count”? It’s not a counter but it seems to have the same value as your current counter, and you can query that kind of page number from many kinds of elements.</p>\n<p>Otherwise if you have a state update that’s critical for the package you might expose it in a function and explain to the user that they need to place it in the page header (if they configure the page header).</p>",
      "raw": "Can you use `here().page()`, the \"physical page count\"? It's not a counter but it seems to have the same value as your current counter, and you can query that kind of page number from many kinds of elements.\n\nOtherwise if you have a state update that's critical for the package you might expose it in a function and explain to the user that they need to place it in the page header (if they configure the page header).",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 14,
      "score": 52.8,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 1272
    },
    {
      "id": 13435,
      "post_number": 7,
      "username": "Pakorn",
      "name": "Pakorn",
      "created_at": "2025-05-30T10:55:57.898Z",
      "updated_at": "2025-05-30T10:55:57.898Z",
      "cooked": "<p>‘Literal page’ means we count all of the pages whatever they are slides, subslides, title page, or any animation frames. While normal page number only counts the actual ‘content’ i.e. it does not count the subslide, title page, nor the animation frames.</p>\n<p>Yeah, telling users might be the best option rn. Thank you!</p>",
      "raw": "'Literal page' means we count all of the pages whatever they are slides, subslides, title page, or any animation frames. While normal page number only counts the actual 'content' i.e. it does not count the subslide, title page, nor the animation frames. \n\nYeah, telling users might be the best option rn. Thank you!",
      "reply_to_post_number": 6,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 13,
      "score": 7.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 819
    },
    {
      "id": 13437,
      "post_number": 8,
      "username": "sijo",
      "name": "",
      "created_at": "2025-05-30T11:22:23.601Z",
      "updated_at": "2025-05-30T11:24:18.548Z",
      "cooked": "<p><code>here().page()</code> is exactly this literal page counter: it gives the physical page number of the <code>context</code> used when calling `here():</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set page(width: 3cm, height: 3cm, margin: 1cm, numbering: \"1\")\n#context here().page()\n#pagebreak()\n#counter(page).update(5)\n#context here().page()\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/6/6bc4720c2e60cc03cdc94681083ea362f3880fd8.png\" data-download-href=\"https://forum.typst.app/uploads/default/6bc4720c2e60cc03cdc94681083ea362f3880fd8\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/original/2X/6/6bc4720c2e60cc03cdc94681083ea362f3880fd8.png\" alt=\"image\" data-base62-sha1=\"fnlYfTyiL4nHve0GqX8NU3hKL5C\" width=\"162\" height=\"80\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">324×160 1.58 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "`here().page()` is exactly this literal page counter: it gives the physical page number of the `context` used when calling `here():\n\n```\n#set page(width: 3cm, height: 3cm, margin: 1cm, numbering: \"1\")\n#context here().page()\n#pagebreak()\n#counter(page).update(5)\n#context here().page()\n```\n![image|324x160, 50%](upload://fnlYfTyiL4nHve0GqX8NU3hKL5C.png)",
      "reply_to_post_number": 7,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 13,
      "score": 7.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 13440,
      "post_number": 9,
      "username": "Pakorn",
      "name": "Pakorn",
      "created_at": "2025-05-30T13:51:07.732Z",
      "updated_at": "2025-05-30T13:51:07.732Z",
      "cooked": "<p>Oh, I’ve just tried this and it really solved my page counter problem. I haven’t known this before. Thank you very much!</p>",
      "raw": "Oh, I've just tried this and it really solved my page counter problem. I haven't known this before. Thank you very much!",
      "reply_to_post_number": 8,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 12,
      "score": 2.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 819
    }
  ],
  "scraped_at": "2025-06-10T09:47:09.696721"
}