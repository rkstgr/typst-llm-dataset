{
  "topic_metadata": {
    "id": 3769,
    "title": "How to set different spacing for multi-line equations?",
    "slug": "how-to-set-different-spacing-for-multi-line-equations",
    "posts_count": 9,
    "created_at": "2025-04-23T08:51:20.049Z",
    "last_posted_at": "2025-04-23T10:59:10.044Z",
    "views": 77,
    "like_count": 7,
    "reply_count": 4,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 8,
    "accepted_answer_username": "aarnent",
    "tags": [
      "layout",
      "math",
      "spacing"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 497
  },
  "posts": [
    {
      "id": 11473,
      "post_number": 1,
      "username": "joffdd",
      "name": "Joff",
      "created_at": "2025-04-23T08:51:20.236Z",
      "updated_at": "2025-04-26T20:00:35.310Z",
      "cooked": "<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show math.equation.where(block: true): set block(spacing: 1.3em)\n\n$\nx=y\n$&lt;eq:somemath&gt;\n</code></pre>\n<p>I currently use the line above to adjust spacing around equation blocks.<br>\nHowever, I would like to differentiate between equation blocks with one line vs. more than one line of formulas, where also the set up subnumbering with <code>equate</code> looks entirely different. In the multi-line case, I would like to increase the spacing to 2em.</p>\n<p>I’m trying to understand how to use a <code>where</code> query or a selector to apply something similar to the following rule only for multi-line equations:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show math.equation.where(block: true, ...?): set block(spacing: 2em)\n\n$\nx &amp;= y \\\ny &amp;= z \\\n$&lt;eq:someothermath&gt;\n</code></pre>\n<p>I feel like I cannot use a label such as <code>&lt;multiline-eq&gt;</code> since I need unique labels for document referencing. I would like to avoid wrapping multiline formulas inside a function in the markup.</p>",
      "raw": "```typ\n#show math.equation.where(block: true): set block(spacing: 1.3em)\n\n$\nx=y\n$<eq:somemath>\n```\n\nI currently use the line above to adjust spacing around equation blocks.\nHowever, I would like to differentiate between equation blocks with one line vs. more than one line of formulas, where also the set up subnumbering with `equate` looks entirely different. In the multi-line case, I would like to increase the spacing to 2em.\n\nI'm trying to understand how to use a `where` query or a selector to apply something similar to the following rule only for multi-line equations:\n\n```typ\n#show math.equation.where(block: true, ...?): set block(spacing: 2em)\n\n$\nx &= y \\\ny &= z \\\n$<eq:someothermath>\n```\n\nI feel like I cannot use a label such as `<multiline-eq>` since I need unique labels for document referencing. I would like to avoid wrapping multiline formulas inside a function in the markup.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 25,
      "score": 130.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1494
    },
    {
      "id": 11475,
      "post_number": 2,
      "username": "aarnent",
      "name": "",
      "created_at": "2025-04-23T09:30:40.144Z",
      "updated_at": "2025-04-23T09:30:40.144Z",
      "cooked": "<p>I think that solving this using just queries or selectors is currently not possible, but i’d love to be proven wrong. The way i’d solve this instead would be to check if the equation contains a linebreak, like so:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#show math.equation.where(block: true): it =&gt; {\n  if linebreak() in it.body.children {\n    set block(spacing: 2em)\n    it\n  }\n  else {\n    set block(spacing: 1.3em)\n    it\n  }\n}\n</code></pre>",
      "raw": "I think that solving this using just queries or selectors is currently not possible, but i'd love to be proven wrong. The way i'd solve this instead would be to check if the equation contains a linebreak, like so:\n\n```typst\n#show math.equation.where(block: true): it => {\n  if linebreak() in it.body.children {\n    set block(spacing: 2em)\n    it\n  }\n  else {\n    set block(spacing: 1.3em)\n    it\n  }\n}\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 20,
      "score": 24.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 501
    },
    {
      "id": 11478,
      "post_number": 3,
      "username": "joffdd",
      "name": "Joff",
      "created_at": "2025-04-23T10:33:06.483Z",
      "updated_at": "2025-04-23T10:41:46.961Z",
      "cooked": "<p>Thanks <a class=\"mention\" href=\"/u/aarnent\">@aarnent</a>, that approach seems to work!</p>\n<p>Strangely, when using <code>equate</code> and the document contains at least one equation that uses <code>{}</code>, it breaks.</p>\n<p>In my case I get the following error messages:</p>\n<pre><code class=\"lang-auto\">symbol does not have field \"children\"\nstretch does not have field \"children\"\nlr does not have field \"children\"\nfigure does not have field \"children\"\n</code></pre>\n<p><a href=\"https://typst.app/project/rFDy8ACmoenAc1kl8gcUp6\">typst example</a></p>\n<p>I noticed that I can make it work when using escaped <code>\\{\\}</code> but I don’t understand why. Am I missing something regarding the use of  <code>{}</code> or should I report this as a bug? Maybe <a class=\"mention\" href=\"/u/eric\">@Eric</a> can tell.</p>",
      "raw": "Thanks @aarnent, that approach seems to work! \n\nStrangely, when using `equate` and the document contains at least one equation that uses `{}`, it breaks.\n\nIn my case I get the following error messages:\n\n```\nsymbol does not have field \"children\"\nstretch does not have field \"children\"\nlr does not have field \"children\"\nfigure does not have field \"children\"\n```\n\n[typst example](https://typst.app/project/rFDy8ACmoenAc1kl8gcUp6)\n\nI noticed that I can make it work when using escaped `\\{\\}` but I don't understand why. Am I missing something regarding the use of  `{}` or should I report this as a bug? Maybe @Eric can tell.",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 0,
      "reads": 21,
      "score": 14.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1494
    },
    {
      "id": 11479,
      "post_number": 4,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-23T10:34:01.294Z",
      "updated_at": "2025-04-23T10:34:01.294Z",
      "cooked": "<p>I don’t think there is a more simple solution. But this one can be simplified like this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show math.equation.where(block: true): it =&gt; {\n  let is-multiline = linebreak() in it.body.children\n  set block(spacing: 2em) if is-multiline\n  set block(spacing: 1.3em) if not is-multiline\n  it\n}\n</code></pre>",
      "raw": "I don't think there is a more simple solution. But this one can be simplified like this:\n\n```typ\n#show math.equation.where(block: true): it => {\n  let is-multiline = linebreak() in it.body.children\n  set block(spacing: 2em) if is-multiline\n  set block(spacing: 1.3em) if not is-multiline\n  it\n}\n```",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 20,
      "score": 34.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11480,
      "post_number": 5,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-23T10:35:14.234Z",
      "updated_at": "2025-04-23T10:40:23.873Z",
      "cooked": "<p>Your link is private.</p>\n<p>The package splits the equation element into many parts, so it’s not straightforward to adapt the show rule to that. At least if you don’t know how it works under the hood.</p>",
      "raw": "Your link is private.\n\nThe package splits the equation element into many parts, so it's not straightforward to adapt the show rule to that. At least if you don't know how it works under the hood.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 19,
      "score": 18.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11481,
      "post_number": 6,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2025-04-23T10:41:33.651Z",
      "updated_at": "2025-04-23T10:41:33.651Z",
      "cooked": "<p>The body of an equation doesn’t necessarily have to be a sequence, so you should first check that before accessing the <code>children</code> field, as it may not exist.</p>",
      "raw": "The body of an equation doesn't necessarily have to be a sequence, so you should first check that before accessing the `children` field, as it may not exist.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 19,
      "score": 3.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 11482,
      "post_number": 7,
      "username": "joffdd",
      "name": "Joff",
      "created_at": "2025-04-23T10:42:27.851Z",
      "updated_at": "2025-04-23T10:42:27.851Z",
      "cooked": "<p><a class=\"mention\" href=\"/u/andrew\">@Andrew</a> thanks for the heads up, link updated</p>",
      "raw": "@Andrew thanks for the heads up, link updated",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 19,
      "score": 23.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1494
    },
    {
      "id": 11483,
      "post_number": 8,
      "username": "aarnent",
      "name": "",
      "created_at": "2025-04-23T10:50:18.462Z",
      "updated_at": "2025-04-23T10:50:18.462Z",
      "cooked": "<p>as <a class=\"mention\" href=\"/u/eric\">@Eric</a> mentioned, the fix is just checking if the equation body is a sequence or not:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#show math.equation.where(block: true): it =&gt; {\n  if it.body.func() == [].func() and linebreak() in it.body.children {\n    set block(spacing: 5em)\n    it\n  }\n  else {\n    set block(spacing: 1.3em)\n    it\n  }\n}\n</code></pre>",
      "raw": "as @Eric mentioned, the fix is just checking if the equation body is a sequence or not:\n```typst\n#show math.equation.where(block: true): it => {\n  if it.body.func() == [].func() and linebreak() in it.body.children {\n    set block(spacing: 5em)\n    it\n  }\n  else {\n    set block(spacing: 1.3em)\n    it\n  }\n}\n```",
      "reply_to_post_number": 7,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 19,
      "score": 43.8,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 501
    },
    {
      "id": 11484,
      "post_number": 9,
      "username": "joffdd",
      "name": "Joff",
      "created_at": "2025-04-23T10:59:10.044Z",
      "updated_at": "2025-04-23T10:59:10.044Z",
      "cooked": "<p>Thanks to you all! Works now.</p>",
      "raw": "Thanks to you all! Works now.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 19,
      "score": 3.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1494
    }
  ],
  "scraped_at": "2025-06-10T09:48:49.506478"
}