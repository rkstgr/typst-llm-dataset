{
  "topic_metadata": {
    "id": 2093,
    "title": "How to add colored underline in the math mode?",
    "slug": "how-to-add-colored-underline-in-the-math-mode",
    "posts_count": 5,
    "created_at": "2024-12-14T12:27:52.998Z",
    "last_posted_at": "2024-12-15T11:48:41.735Z",
    "views": 216,
    "like_count": 4,
    "reply_count": 2,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 5,
    "accepted_answer_username": "sjfhsjfh",
    "tags": [
      "math",
      "graphics"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 278
  },
  "posts": [
    {
      "id": 6625,
      "post_number": 1,
      "username": "Ignat",
      "name": "Ignat",
      "created_at": "2024-12-14T12:27:53.396Z",
      "updated_at": "2024-12-14T12:27:53.396Z",
      "cooked": "<p>Hello, I want to underline parts of math equation with colorful strokes but sadly function <a class=\"hashtag-cooked\" href=\"/tag/math\" data-type=\"tag\" data-slug=\"math\" data-id=\"74\"><span class=\"hashtag-icon-placeholder\"><svg class=\"fa d-icon d-icon-square-full svg-icon svg-node\"><use href=\"#square-full\"></use></svg></span><span>math</span></a>.underline only accepts body as a parameter. Is there a way to do it or a package implementing it?</p>",
      "raw": "Hello, I want to underline parts of math equation with colorful strokes but sadly function #math.underline only accepts body as a parameter. Is there a way to do it or a package implementing it?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 31,
      "score": 766.2,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 934
    },
    {
      "id": 6634,
      "post_number": 2,
      "username": "sjfhsjfh",
      "name": "sjfhsjfh",
      "created_at": "2024-12-14T18:21:35.896Z",
      "updated_at": "2024-12-14T18:21:35.896Z",
      "cooked": "<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show math.underline: set text(fill: red)\n</code></pre>",
      "raw": "```typ\n#show math.underline: set text(fill: red)\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 28,
      "score": 30.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 120
    },
    {
      "id": 6643,
      "post_number": 3,
      "username": "Ignat",
      "name": "Ignat",
      "created_at": "2024-12-15T10:08:13.831Z",
      "updated_at": "2024-12-15T10:08:13.831Z",
      "cooked": "<p>Thanks, this has particially helped me.<br>\nHow can I filter different math content for underline? Cause I want to have underlines of different color in one equation.</p>\n<p>That is what I’ve tried to do:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#show math.underline.where([$2 A_2$]): set text(fill: blue)\n$ underline(2 A_2) + A_2 x^2 + A_1 x + A_0 = x^2 - 1 $\n$ cases(A_2 = 1\\ A_1 = 0\\ 2 A_2 + A_0 = -1) &lt;=&gt; cases(A_2 = 1\\ A_1 = 0\\ A_0 = -3) $\n</code></pre>\n<p>But I can’t understand how to manage with “where” if the function(“math.underline”) has only one unnamed argument “content” and it has kind of mathematical type.</p>",
      "raw": "Thanks, this has particially helped me.\nHow can I filter different math content for underline? Cause I want to have underlines of different color in one equation.\n\nThat is what I've tried to do:\n```typst\n#show math.underline.where([$2 A_2$]): set text(fill: blue)\n$ underline(2 A_2) + A_2 x^2 + A_1 x + A_0 = x^2 - 1 $\n$ cases(A_2 = 1\\ A_1 = 0\\ 2 A_2 + A_0 = -1) <=> cases(A_2 = 1\\ A_1 = 0\\ A_0 = -3) $\n```\nBut I can't understand how to manage with \"where\" if the function(\"math.underline\") has only one unnamed argument \"content\" and it has kind of mathematical type.",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 23,
      "score": 14.6,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 934
    },
    {
      "id": 6645,
      "post_number": 4,
      "username": "flokl",
      "name": "",
      "created_at": "2024-12-15T10:29:04.067Z",
      "updated_at": "2024-12-15T10:30:04.718Z",
      "cooked": "<p>I wanted to do something similar in the past but gave up in the end. The code splits the equation, which causes misalignments. Perhaps you can find a way to make it work.</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let colorunderline(color: black, equation) = block(\n  stroke: (bottom: .5pt + color), \n  outset: (bottom: 1.5pt), \n  $ equation $\n)\n\n$\n  colorunderline(a =) colorunderline(color: #red, a +) colorunderline(color: #green, b / c ) \\\n  \n  colorunderline(color: #orange, a =) colorunderline(color: #gradient.linear(..color.map.rainbow), a + b / c) \\\n  \n  sum_i x_i/2 = colorunderline(sum_i x_i )\\\n$\n</code></pre>\n<details>\n<summary>\nOutput</summary>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/d/d64e7f4e156993ff33b5a7434d1a0b51880265d7.png\" data-download-href=\"https://forum.typst.app/uploads/default/d64e7f4e156993ff33b5a7434d1a0b51880265d7\" title=\"test\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/d/d64e7f4e156993ff33b5a7434d1a0b51880265d7_2_441x500.png\" alt=\"test\" data-base62-sha1=\"uzQmdr1ZjAH8TOdLkN2FFa3mgvl\" width=\"441\" height=\"500\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/d/d64e7f4e156993ff33b5a7434d1a0b51880265d7_2_441x500.png, https://forum.typst.app/uploads/default/optimized/2X/d/d64e7f4e156993ff33b5a7434d1a0b51880265d7_2_661x750.png 1.5x, https://forum.typst.app/uploads/default/optimized/2X/d/d64e7f4e156993ff33b5a7434d1a0b51880265d7_2_882x1000.png 2x\" data-dominant-color=\"F8F7F7\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">test</span><span class=\"informations\">1007×1141 77.9 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n</details>",
      "raw": "I wanted to do something similar in the past but gave up in the end. The code splits the equation, which causes misalignments. Perhaps you can find a way to make it work.\n\n```typst\n#let colorunderline(color: black, equation) = block(\n  stroke: (bottom: .5pt + color), \n  outset: (bottom: 1.5pt), \n  $ equation $\n)\n\n$\n  colorunderline(a =) colorunderline(color: #red, a +) colorunderline(color: #green, b / c ) \\\n  \n  colorunderline(color: #orange, a =) colorunderline(color: #gradient.linear(..color.map.rainbow), a + b / c) \\\n  \n  sum_i x_i/2 = colorunderline(sum_i x_i )\\\n$\n```\n\n[details=\"Output\"]\n![test|441x500](upload://uzQmdr1ZjAH8TOdLkN2FFa3mgvl.png)\n[/details]",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 19,
      "score": 23.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 8
    },
    {
      "id": 6648,
      "post_number": 5,
      "username": "sjfhsjfh",
      "name": "sjfhsjfh",
      "created_at": "2024-12-15T11:48:41.735Z",
      "updated_at": "2024-12-15T11:48:41.735Z",
      "cooked": "<p>In that case, you might define some custom underline functions, e.g.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let myuline(fill: black, it) = {\n  set text(fill: fill)\n  math.underline(it)\n}\n</code></pre>\n<p>Then you can have</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">$ myuline(fill: #blue, A + B) = myuline(fill: #red, C + D) $\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/4/4b4664098c3cf69e594328b75824cc8d03c35738.png\" alt=\"Result\" data-base62-sha1=\"aJUCyfLEDGZjho6jenoNKWUWXfW\" width=\"359\" height=\"88\"></p>",
      "raw": "In that case, you might define some custom underline functions, e.g.\n```typ\n#let myuline(fill: black, it) = {\n  set text(fill: fill)\n  math.underline(it)\n}\n```\n\nThen you can have\n\n```typ\n$ myuline(fill: #blue, A + B) = myuline(fill: #red, C + D) $\n```\n\n![Result|359x88](upload://aJUCyfLEDGZjho6jenoNKWUWXfW.png)",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 19,
      "score": 53.8,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 120
    }
  ],
  "scraped_at": "2025-06-10T09:53:38.053529"
}