{
  "topic_metadata": {
    "id": 2450,
    "title": "Why does 'set' not affect the output of a user defined function?",
    "slug": "why-does-set-not-affect-the-output-of-a-user-defined-function",
    "posts_count": 9,
    "created_at": "2025-01-17T16:48:50.348Z",
    "last_posted_at": "2025-01-18T19:05:30.552Z",
    "views": 124,
    "like_count": 3,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 7,
    "accepted_answer_username": "flokl",
    "tags": [
      "scripting",
      "styling"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 806
  },
  "posts": [
    {
      "id": 7610,
      "post_number": 1,
      "username": "Simon",
      "name": "Simon",
      "created_at": "2025-01-17T16:48:50.512Z",
      "updated_at": "2025-01-18T19:04:34.180Z",
      "cooked": "<p>Hi, folks!</p>\n<p>I’m trying to understand <em>set</em> with user defined functions and I’m confused about this behavour as I’m not able to use <em>set</em> to alter the width of the block created in the function <em>opening</em>.</p>\n<p>Any ideas? Thanks in advance, Simon</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let opening(txt)=block(width:400pt, text(size: 40pt,txt))\n\n//sets on document level\n#set text(size: 20pt) //as expected, changes only font size of document scoped block\n#set block(width:200pt) //as expected, changes only width of document scoped block\n\n//function call\n#opening([\n//sets in the scope of the function\n#set text(size: 10pt) //as expected, changes only font size of functional created text \n#set block(width:800pt) //not working, does not change width of functional created block\n#lorem(30)]\n)\n\n//a block created in document scope\n#block(\n  inset: 12pt,\n  radius: 4pt,\n  lorem(30),\n)\n\n\n</code></pre>",
      "raw": "Hi, folks! \n\nI'm trying to understand *set* with user defined functions and I'm confused about this behavour as I'm not able to use *set* to alter the width of the block created in the function *opening*. \n\nAny ideas? Thanks in advance, Simon\n\n```typ //function with ist own scope?\n#let opening(txt)=block(width:400pt, text(size: 40pt,txt))\n\n//sets on document level\n#set text(size: 20pt) //as expected, changes only font size of document scoped block\n#set block(width:200pt) //as expected, changes only width of document scoped block\n\n//function call\n#opening([\n//sets in the scope of the function\n#set text(size: 10pt) //as expected, changes only font size of functional created text \n#set block(width:800pt) //not working, does not change width of functional created block\n#lorem(30)]\n)\n\n//a block created in document scope\n#block(\n  inset: 12pt,\n  radius: 4pt,\n  lorem(30),\n)\n\n\n ```",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 33,
      "score": 241.6,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1062
    },
    {
      "id": 7613,
      "post_number": 2,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2025-01-17T19:59:57.622Z",
      "updated_at": "2025-01-17T20:16:56.399Z",
      "cooked": "<p>Please give some more information on the problem at hand. What outcome do you expect and how does the actual output differ from that?</p>\n<p>[ To me everything seems to be working es expected. ]</p>\n<p>PS: you should probably adjust your title according to the guidlines of this forum. Therefore please reformulate it as a question. Thanks ;)</p>",
      "raw": "Please give some more information on the problem at hand. What outcome do you expect and how does the actual output differ from that?\n\n[ To me everything seems to be working es expected. ]\n\n\nPS: you should probably adjust your title according to the guidlines of this forum. Therefore please reformulate it as a question. Thanks ;)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 29,
      "score": 5.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 7614,
      "post_number": 3,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2025-01-17T20:12:42.369Z",
      "updated_at": "2025-01-17T20:14:49.642Z",
      "cooked": "<p>Maybe you should have a look at this slightly changed example. Here I added strokes to the three different calls to <code>block</code> to clarify where you use all of them.</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let opening(txt)=block(width:200pt, stroke: black, text(size: 40pt,txt))\n\n//sets on document level\n#set text(size: 20pt) //as expected, changes only font size of document scoped block\n#set block(width:300pt, stroke: blue) //as expected, changes only width of document scoped block\n\n//function call\n#opening(\n  [\n    //sets in the scope of the function\n    #set text(size: 10pt) //as expected, changes only font size of functional created text \n    #set block(width:400pt) //not working, does not change width of functional created block\n    \n    #lorem(30)\n    #block(stroke: red, lorem(50))\n    #lorem(30)\n  ]\n)\n\n//a block created in document scope\n#block(\n  inset: 12pt,\n  radius: 4pt,\n  lorem(30),\n)\n</code></pre>\n<p>This is the output:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/7/774def3626365917fb5da4bb001f5ee20afff4a0.png\" data-download-href=\"https://forum.typst.app/uploads/default/774def3626365917fb5da4bb001f5ee20afff4a0\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/7/774def3626365917fb5da4bb001f5ee20afff4a0_2_497x500.png\" alt=\"image\" data-base62-sha1=\"h1pN9ayYhl16NfZVUEJIqYpj0je\" width=\"497\" height=\"500\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/7/774def3626365917fb5da4bb001f5ee20afff4a0_2_497x500.png, https://forum.typst.app/uploads/default/original/2X/7/774def3626365917fb5da4bb001f5ee20afff4a0.png 1.5x, https://forum.typst.app/uploads/default/original/2X/7/774def3626365917fb5da4bb001f5ee20afff4a0.png 2x\" data-dominant-color=\"EFEFEF\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">727×731 157 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>If you want to see the affected text sequences of your calls to text more clearly (e.g. where the size is actually adjusted) you can also use the color parameter for text.</p>",
      "raw": "Maybe you should have a look at this slightly changed example. Here I added strokes to the three different calls to `block` to clarify where you use all of them.\n\n```typst\n#let opening(txt)=block(width:200pt, stroke: black, text(size: 40pt,txt))\n\n//sets on document level\n#set text(size: 20pt) //as expected, changes only font size of document scoped block\n#set block(width:300pt, stroke: blue) //as expected, changes only width of document scoped block\n\n//function call\n#opening(\n  [\n    //sets in the scope of the function\n    #set text(size: 10pt) //as expected, changes only font size of functional created text \n    #set block(width:400pt) //not working, does not change width of functional created block\n    \n    #lorem(30)\n    #block(stroke: red, lorem(50))\n    #lorem(30)\n  ]\n)\n\n//a block created in document scope\n#block(\n  inset: 12pt,\n  radius: 4pt,\n  lorem(30),\n)\n```\n\nThis is the output:\n![image|497x500](upload://h1pN9ayYhl16NfZVUEJIqYpj0je.png)\n\n\nIf you want to see the affected text sequences of your calls to text more clearly (e.g. where the size is actually adjusted) you can also use the color parameter for text.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 29,
      "score": 25.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 7615,
      "post_number": 4,
      "username": "Simon",
      "name": "Simon",
      "created_at": "2025-01-17T20:36:47.364Z",
      "updated_at": "2025-01-17T20:37:42.008Z",
      "cooked": "<p>Hi there,</p>\n<p>okay, you pass a new block to the <em>opening</em> function. So now two blocks are nested. Its interesting for me that now <em><span class=\"hashtag-raw\">#set</span> block</em> inside the call of <em>opening</em> is effecting only the most nested block.</p>\n<p>My main question is: why can I change the text size by including a <em>set text(size: …)</em> in the content of the <em>opening</em> function call, but I can not change the width of the block created in that function by using a identical <em>set block(width: …)</em>?</p>\n<p>Regards Simon</p>",
      "raw": "Hi there,\n\nokay, you pass a new block to the *opening* function. So now two blocks are nested. Its interesting for me that now *#set block* inside the call of *opening* is effecting only the most nested block.\n\nMy main question is: why can I change the text size by including a *set text(size: ...)* in the content of the *opening* function call, but I can not change the width of the block created in that function by using a identical *set block(width: ...)*?\n\nRegards Simon",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 25,
      "score": 5.0,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1062
    },
    {
      "id": 7618,
      "post_number": 5,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2025-01-18T00:25:58.600Z",
      "updated_at": "2025-01-18T00:25:58.600Z",
      "cooked": "<p>The width of the block is indeed changed by the your <code>set block ...</code> statement. See the red block, it has width 400 instead of 300. (if you remove the <code>set block()</code> the red block will have width 300.</p>\n<p>It works the same as the text size.</p>\n<p>You are defining a function <code>opening</code> which creates a block with a specific size. Why would instructions inside the body of this block affect the outer block ??? (think about it for a second, this would be an absolute nightmare … xD)</p>",
      "raw": "The width of the block is indeed changed by the your `set block ...` statement. See the red block, it has width 400 instead of 300. (if you remove the `set block()` the red block will have width 300.\n\n\nIt works the same as the text size.\n\n\nYou are defining a function `opening` which creates a block with a specific size. Why would instructions inside the body of this block affect the outer block ??? (think about it for a second, this would be an absolute nightmare ... xD)",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 26,
      "score": 10.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 7623,
      "post_number": 6,
      "username": "Simon",
      "name": "Simon",
      "created_at": "2025-01-18T08:58:26.146Z",
      "updated_at": "2025-01-18T09:00:43.618Z",
      "cooked": "<p>but <em>set text(size …)</em> on line 11 in your example inside the <em>opening</em> function <strong>does</strong> change the font size in the red AND the black surrounded block…</p>",
      "raw": "but *set text(size ...)* on line 11 in your example inside the *opening* function **does** change the font size in the red AND the black surrounded block...",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 26,
      "score": 10.2,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1062
    },
    {
      "id": 7624,
      "post_number": 7,
      "username": "flokl",
      "name": "",
      "created_at": "2025-01-18T09:56:13.606Z",
      "updated_at": "2025-01-18T09:57:11.792Z",
      "cooked": "<p>Hi <a class=\"mention\" href=\"/u/simon\">@Simon</a>,<br>\nas <a class=\"mention\" href=\"/u/xodarap\">@Xodarap</a> already showed with the <code>block</code>s, set rules do only affect elements after the rule and inside the same or a nested scope. It does <strong>not</strong> change the surrounding elements.<br>\nMaybe this makes it clear for you, I have inlined your <code>opening(txt)</code> function:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">//sets on document level\n#set text(size: 20pt)\n#set block(width:200pt) \n\n// Inlined \"opening(txt)\" function\n#block(\n  width:400pt, \n  text(\n    size: 40pt, \n    [\n      This is some text // Added additional text\n      //sets in the scope of the function\n      #set text(size: 10pt)\n      #set block(width:800pt) ) // There is no block below, that can be affected by the set rule\n\n      #lorem(40) // Effected by the above text set rule\n      // Equal to #text(lorem(40)) \n      // Equal to #text(size: 10pt, lorem(40)) with the above set rule applied\n    ]\n  )\n)\n\n//a block created in document scope\n#block(\n  inset: 12pt,\n  radius: 4pt,\n  lorem(30),\n)\n</code></pre>\n<details>\n<summary>\nOutput</summary>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/9/97e224b73f805cd37cc9bc86aa3074ab1fbf67eb.jpeg\" data-download-href=\"https://forum.typst.app/uploads/default/97e224b73f805cd37cc9bc86aa3074ab1fbf67eb\" title=\"1\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/9/97e224b73f805cd37cc9bc86aa3074ab1fbf67eb_2_487x499.jpeg\" alt=\"1\" data-base62-sha1=\"lFCBHtdLiQQLoPM2iv4XKpvX6wr\" width=\"487\" height=\"499\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/9/97e224b73f805cd37cc9bc86aa3074ab1fbf67eb_2_487x499.jpeg, https://forum.typst.app/uploads/default/optimized/2X/9/97e224b73f805cd37cc9bc86aa3074ab1fbf67eb_2_730x748.jpeg 1.5x, https://forum.typst.app/uploads/default/optimized/2X/9/97e224b73f805cd37cc9bc86aa3074ab1fbf67eb_2_974x998.jpeg 2x\" data-dominant-color=\"F8F8F8\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">1</span><span class=\"informations\">1134×1164 98.4 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n</details>",
      "raw": "Hi @Simon, \nas @Xodarap already showed with the `block`s, set rules do only affect elements after the rule and inside the same or a nested scope. It does **not** change the surrounding elements.\nMaybe this makes it clear for you, I have inlined your `opening(txt)` function:\n```typ\n//sets on document level\n#set text(size: 20pt)\n#set block(width:200pt) \n\n// Inlined \"opening(txt)\" function\n#block(\n  width:400pt, \n  text(\n    size: 40pt, \n    [\n      This is some text // Added additional text\n      //sets in the scope of the function\n      #set text(size: 10pt)\n      #set block(width:800pt) ) // There is no block below, that can be affected by the set rule\n\n      #lorem(40) // Effected by the above text set rule\n      // Equal to #text(lorem(40)) \n      // Equal to #text(size: 10pt, lorem(40)) with the above set rule applied\n    ]\n  )\n)\n\n//a block created in document scope\n#block(\n  inset: 12pt,\n  radius: 4pt,\n  lorem(30),\n)\n```\n\n[details=\"Output\"]\n![1|487x499](upload://lFCBHtdLiQQLoPM2iv4XKpvX6wr.jpeg)\n[/details]",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 26,
      "score": 50.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 8
    },
    {
      "id": 7627,
      "post_number": 8,
      "username": "Simon",
      "name": "Simon",
      "created_at": "2025-01-18T12:49:46.188Z",
      "updated_at": "2025-01-18T12:49:46.188Z",
      "cooked": "<p>thanks,</p>\n<blockquote>\n<p>There is no block below, that can be affected by the set rule</p>\n</blockquote>\n<p>now its clear</p>",
      "raw": "thanks,\n\n> There is no block below, that can be affected by the set rule\n\nnow its clear",
      "reply_to_post_number": 7,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 23,
      "score": 4.6,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1062
    },
    {
      "id": 7632,
      "post_number": 9,
      "username": "PgBiel",
      "name": "",
      "created_at": "2025-01-18T19:05:30.552Z",
      "updated_at": "2025-01-18T19:05:30.552Z",
      "cooked": "<p>Hey <a class=\"mention\" href=\"/u/simon\">@Simon</a>, welcome to the forum! I’ve changed your question post’s title to better fit our guidelines: <a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11\">How to post in the Questions category</a></p>\n<p>For future posts, make sure your title is a question you’d ask to a friend about Typst. <img src=\"https://forum.typst.app/images/emoji/apple/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Hey @Simon, welcome to the forum! I’ve changed your question post’s title to better fit our guidelines: [How to post in the Questions category](https://forum.typst.app/t/how-to-post-in-the-questions-category/11)\n\nFor future posts, make sure your title is a question you’d ask to a friend about Typst. :wink:",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 21,
      "score": 24.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    }
  ],
  "scraped_at": "2025-06-10T09:52:44.020138"
}