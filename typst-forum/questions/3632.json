{
  "topic_metadata": {
    "id": 3632,
    "title": "How to use function to automatically calculate in table?",
    "slug": "how-to-use-function-to-automatically-calculate-in-table",
    "posts_count": 4,
    "created_at": "2025-04-13T11:44:19.992Z",
    "last_posted_at": "2025-04-13T14:57:27.669Z",
    "views": 78,
    "like_count": 4,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "bluss",
    "tags": [
      "tables"
    ],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 302
  },
  "posts": [
    {
      "id": 10980,
      "post_number": 1,
      "username": "Kasmir",
      "name": "Chen Chen",
      "created_at": "2025-04-13T11:44:20.163Z",
      "updated_at": "2025-04-13T11:45:00.357Z",
      "cooked": "<p>I want a command to automatically add the first and second columns, and put the result into the third column.</p>\n<p>Someting wrong as below:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let mytable(data) = table(\n  columns: 3,\n  stroke: 1pt black,\n  [X value], [Y value], [X+Y],\n  ..data.map((x, y) =&gt; [x, y, x + y])\n)\n\n#mytable((\n  (1, 2),\n  (3, 4),\n  (5, 6)\n))\n</code></pre>\n<p>Maybe I misunderstand the <code>map</code> or something else… How can I do? Thanks!</p>",
      "raw": "I want a command to automatically add the first and second columns, and put the result into the third column.\n\nSometing wrong as below:\n```typst\n#let mytable(data) = table(\n  columns: 3,\n  stroke: 1pt black,\n  [X value], [Y value], [X+Y],\n  ..data.map((x, y) => [x, y, x + y])\n)\n\n#mytable((\n  (1, 2),\n  (3, 4),\n  (5, 6)\n))\n```\n\nMaybe I misunderstand the `map` or something else.... How can I do? Thanks!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 32,
      "score": 101.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1450
    },
    {
      "id": 10984,
      "post_number": 2,
      "username": "bluss",
      "name": "Ulrik",
      "created_at": "2025-04-13T13:19:18.573Z",
      "updated_at": "2025-04-13T13:20:45.146Z",
      "cooked": "<p>Fixing the function calling syntax like this is the first step:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let mytable(data) = table(\n  columns: 3,\n  stroke: 1pt + black,\n  [X value], [Y value], [X+Y],\n  ..data.map(((x, y)) =&gt; [x, y, x + y])\n)\n</code></pre>\n<p>That makes</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/f/ffcbd375017144028ed52ce5e7bb7bc098f7b9b5.png\" alt=\"image\" data-base62-sha1=\"AuSrUqL3aM3gXPaSEFMroFwplQN\" width=\"288\" height=\"78\"></p>\n<p>Need to use <code>#x</code> to use a variable inside content, and also need to give one content value per table cell. The complete fix:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let mytable(data) = table(\n  columns: 3,\n  stroke: 1pt + black,\n  [X value], [Y value], [X+Y],\n  ..data.map(((x, y)) =&gt; ([#x], [#y], [#(x + y)])).flatten()\n)\n\n#mytable((\n  (1, 2),\n  (3, 4),\n  (5, 6),\n))\n</code></pre>\n<p>Every call to the <code>map(f)</code> function <code>f</code> creates one table row, but in the end the table wants all cells in a single array, so we <code>.flatten()</code> the result.</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/9/9c833ee80676d79b662d2ea2840d31f76a83b348.png\" alt=\"image\" data-base62-sha1=\"mkzG2tWsrrbIUip6NCa6CwHFD3a\" width=\"219\" height=\"140\"></p>",
      "raw": "Fixing the function calling syntax like this is the first step:\n\n```typ\n#let mytable(data) = table(\n  columns: 3,\n  stroke: 1pt + black,\n  [X value], [Y value], [X+Y],\n  ..data.map(((x, y)) => [x, y, x + y])\n)\n```\n\nThat makes\n\n![image|288x78](upload://AuSrUqL3aM3gXPaSEFMroFwplQN.png)\n\n\nNeed to use `#x` to use a variable inside content, and also need to give one content value per table cell. The complete fix:\n\n```typ\n#let mytable(data) = table(\n  columns: 3,\n  stroke: 1pt + black,\n  [X value], [Y value], [X+Y],\n  ..data.map(((x, y)) => ([#x], [#y], [#(x + y)])).flatten()\n)\n\n#mytable((\n  (1, 2),\n  (3, 4),\n  (5, 6),\n))\n```\n\nEvery call to the `map(f)` function `f` creates one table row, but in the end the table wants all cells in a single array, so we `.flatten()` the result.\n\n![image|219x140](upload://mkzG2tWsrrbIUip6NCa6CwHFD3a.png)",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 31,
      "score": 51.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 1272
    },
    {
      "id": 10987,
      "post_number": 3,
      "username": "Kasmir",
      "name": "Chen Chen",
      "created_at": "2025-04-13T14:33:50.144Z",
      "updated_at": "2025-04-13T14:33:50.144Z",
      "cooked": "<p>Thanks! But I am still a little currious about why there need two <code>((x,y))</code> here? the <strong>inner stand</strong> for the input <code>(1,2)</code>, and the <strong>outer one</strong> stand for the parameter of this anonymous function?</p>",
      "raw": "Thanks! But I am still a little currious about why there need two `((x,y))` here? the **inner stand** for the input `(1,2)`, and the **outer one** stand for the parameter of this anonymous function?",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 27,
      "score": 5.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1450
    },
    {
      "id": 10992,
      "post_number": 4,
      "username": "bluss",
      "name": "Ulrik",
      "created_at": "2025-04-13T14:57:27.669Z",
      "updated_at": "2025-04-13T14:57:27.669Z",
      "cooked": "<p>Each element in the data array is itself an array <code>(1, 2)</code> and so on. I guess it’s like this</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">data.map( ( (x, y) ) =&gt; none)\n             \\_ Unpack first argument into two values.\n           \\_ The function arguments (of anonymous function)\n</code></pre>\n<p>Without the extra layer of <code>()</code> it would be ambiguous if the unnamed function takes 2 parameters or if it takes 1 and unpacks it.</p>",
      "raw": "Each element in the data array is itself an array `(1, 2)` and so on. I guess it's like this\n\n```typ\ndata.map( ( (x, y) ) => none)\n             \\_ Unpack first argument into two values.\n           \\_ The function arguments (of anonymous function)\n```\n\nWithout the extra layer of `()` it would be ambiguous if the unnamed function takes 2 parameters or if it takes 1 and unpacks it.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 28,
      "score": 35.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 1272
    }
  ],
  "scraped_at": "2025-06-10T09:49:15.416427"
}