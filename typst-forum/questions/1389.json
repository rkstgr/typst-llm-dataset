{
  "topic_metadata": {
    "id": 1389,
    "title": "Can I define $⊂=$ to show as $subset.eq$?",
    "slug": "can-i-define-to-show-as-subset-eq",
    "posts_count": 6,
    "created_at": "2024-10-28T08:25:45.867Z",
    "last_posted_at": "2024-10-28T10:44:20.957Z",
    "views": 197,
    "like_count": 6,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 5,
    "accepted_answer_username": "Eric",
    "tags": [
      "math"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 259
  },
  "posts": [
    {
      "id": 4749,
      "post_number": 1,
      "username": "heptocat",
      "name": "",
      "created_at": "2024-10-28T08:25:46.017Z",
      "updated_at": "2024-10-28T08:25:46.017Z",
      "cooked": "<p>I am wondering if defining own shortcuts by linking operators (analogously to how  &lt;= is lt.eq) is possible, and if so how. Clearly I can’t simply write</p>\n<pre><code class=\"lang-auto\">let ⊂= = subset.eq\n</code></pre>\n<p>Cheers!</p>",
      "raw": "I am wondering if defining own shortcuts by linking operators (analogously to how  <= is lt.eq) is possible, and if so how. Clearly I can't simply write\n\n```\nlet ⊂= = subset.eq\n```\n\nCheers!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 33,
      "score": 651.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 659
    },
    {
      "id": 4750,
      "post_number": 2,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-10-28T09:10:32.501Z",
      "updated_at": "2024-10-28T09:11:09.848Z",
      "cooked": "<p>Hello!<br>\nTo define a shortcut for ⊆, you can simply define a variable</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let sse = math.subset.eq\n$\n  sse\n  subset.eq\n$\n</code></pre>\n<p>As you said, writing a variable can only be defined within specific naming constraints. See</p>\n<ul>\n<li><a href=\"https://forum.typst.app/t/what-characters-may-the-names-of-variables-and-functions-consist-of/1133\" class=\"inline-onebox\">What characters may the names of variables and functions consist of?</a>.</li>\n<li><a href=\"https://forum.typst.app/t/what-are-the-rules-for-identifiers-in-typst/665/2\" class=\"inline-onebox\">What are the rules for identifiers in Typst? - #2 by xkevio</a></li>\n</ul>",
      "raw": "Hello!\nTo define a shortcut for ⊆, you can simply define a variable\n```typ\n#let sse = math.subset.eq\n$\n  sse\n  subset.eq\n$\n```\nAs you said, writing a variable can only be defined within specific naming constraints. See \n- https://forum.typst.app/t/what-characters-may-the-names-of-variables-and-functions-consist-of/1133.\n- https://forum.typst.app/t/what-are-the-rules-for-identifiers-in-typst/665/2",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 33,
      "score": 46.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 4751,
      "post_number": 3,
      "username": "heptocat",
      "name": "",
      "created_at": "2024-10-28T09:23:34.768Z",
      "updated_at": "2024-10-28T09:23:34.768Z",
      "cooked": "<p>Thanks for your reply! I’m aware of how to define variables, I was just wondering if defining a composition of operators similarly to &lt;= but ⊂= would be possible in some way. Thanks for the link to the naming constraints, that’s useful. But perhaps there is another way to do this?</p>",
      "raw": "Thanks for your reply! I'm aware of how to define variables, I was just wondering if defining a composition of operators similarly to <= but ⊂= would be possible in some way. Thanks for the link to the naming constraints, that's useful. But perhaps there is another way to do this?",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 30,
      "score": 21.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 659
    },
    {
      "id": 4753,
      "post_number": 4,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-10-28T10:04:35.793Z",
      "updated_at": "2024-10-28T10:04:35.793Z",
      "cooked": "<p>hmmm, I don’t think it’s possible in Typst, but you can open an issue at the Typst repo to add new shorthands!</p>",
      "raw": "hmmm, I don't think it's possible in Typst, but you can open an issue at the Typst repo to add new shorthands!",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 29,
      "score": 25.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 4755,
      "post_number": 5,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2024-10-28T10:18:55.606Z",
      "updated_at": "2024-10-28T10:20:21.660Z",
      "cooked": "<p>You can use the <a href=\"https://typst.app/universe/package/quick-maths/\"><code>quick-maths</code></a> package which traverses the equation content and replaces any direct occurrences of given shorthands with their respective symbols. This method is relatively naive, so it may break when defining more complex shorthands.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/quick-maths:0.1.0\": shorthands\n\n#show: shorthands.with(\n  ($⊂=$, $subset.eq$)\n)\n\n$ A ⊂= B $\n</code></pre>\n<p><em>(Note: I am the author of that package)</em></p>",
      "raw": "You can use the [`quick-maths`](https://typst.app/universe/package/quick-maths/) package which traverses the equation content and replaces any direct occurrences of given shorthands with their respective symbols. This method is relatively naive, so it may break when defining more complex shorthands.\n\n```typ\n#import \"@preview/quick-maths:0.1.0\": shorthands\n\n#show: shorthands.with(\n  ($⊂=$, $subset.eq$)\n)\n\n$ A ⊂= B $\n```\n\n_(Note: I am the author of that package)_",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 3,
      "reads": 30,
      "score": 81.0,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 4759,
      "post_number": 6,
      "username": "heptocat",
      "name": "",
      "created_at": "2024-10-28T10:44:20.957Z",
      "updated_at": "2024-10-28T10:44:20.957Z",
      "cooked": "<p>This is great :-) thanks for the info and your work on the package</p>",
      "raw": "This is great :-) thanks for the info and your work on the package",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 26,
      "score": 10.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 659
    }
  ],
  "scraped_at": "2025-06-10T09:55:52.374252"
}