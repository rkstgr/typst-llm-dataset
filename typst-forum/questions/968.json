{
  "topic_metadata": {
    "id": 968,
    "title": "How to put different page numbering in outline?",
    "slug": "how-to-put-different-page-numbering-in-outline",
    "posts_count": 5,
    "created_at": "2024-10-07T10:29:34.483Z",
    "last_posted_at": "2024-12-27T22:38:24.536Z",
    "views": 588,
    "like_count": 3,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 3,
    "accepted_answer_username": "xkevio",
    "tags": [
      "outline",
      "numbering"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 525
  },
  "posts": [
    {
      "id": 3519,
      "post_number": 1,
      "username": "alex180500",
      "name": "Alessandro",
      "created_at": "2024-10-07T10:29:34.623Z",
      "updated_at": "2024-10-10T16:08:52.365Z",
      "cooked": "<p>While creating the outline like this</p>\n<pre><code class=\"lang-auto\">set page(numbering: \"— 1 / 2 —\")\nshow outline.entry.where(level: 1): it =&gt; {\n    set text(13pt, font: title-font)\n    v(12pt, weak: true)\n    strong(it)\n}\n</code></pre>\n<p>I get the outline with the following page numbering</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/7a6946dbd10a4eddb69cd426bb9be341e6d58665.png\" alt=\"image\" data-base62-sha1=\"hsTNXNUKrpklxzZDur18r4bw4mh\" width=\"486\" height=\"86\"></p>\n<p>Is there a way to get the page numbering in the outline just with the page number (2 in this case)? instead of having the full page numbering?</p>",
      "raw": "While creating the outline like this\n\n```\nset page(numbering: \"— 1 / 2 —\")\nshow outline.entry.where(level: 1): it => {\n    set text(13pt, font: title-font)\n    v(12pt, weak: true)\n    strong(it)\n}\n```\n\nI get the outline with the following page numbering\n\n![image|648x115, 75%](upload://hsTNXNUKrpklxzZDur18r4bw4mh.png)\n\nIs there a way to get the page numbering in the outline just with the page number (2 in this case)? instead of having the full page numbering?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 82,
      "score": 2531.4,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 550
    },
    {
      "id": 3521,
      "post_number": 3,
      "username": "xkevio",
      "name": "Kevio",
      "created_at": "2024-10-07T11:34:41.123Z",
      "updated_at": "2024-10-07T11:36:03.470Z",
      "cooked": "<p>You can use the “state-outline” trick (<a href=\"https://sitandr.github.io/typst-examples-book/book/snippets/chapters/outlines.html?highlight=outline#long-and-short-captions-for-the-outline\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Outlines - Typst Examples Book</a>) which detects if your element is in the outline or not via a <code>state</code>.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let in-outline = state(\"in-outline\", false)\n\n#set heading(numbering: \"1.1\")\n#set text(font: \"DM Sans\")\n\n#set page(numbering: (..n) =&gt; context {\n  if in-outline.get() {\n    numbering(\"1\", ..n)\n  } else {\n    numbering(\"1 / 1\", ..n)\n  }\n})\n\n#show outline: it =&gt; {\n  in-outline.update(true)\n  it\n  in-outline.update(false)\n}\n\n\n#show outline.entry.where(level: 1): it =&gt; {\n  set text(13pt, font: \"DM Sans\")\n  v(12pt, weak: true)\n  strong(it)\n}\n\n#outline()\n\n= Introduction\n\n== Don't Know\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/ee488795887ec438427a541b24e63a41707fba3b.png\" alt=\"image\" data-base62-sha1=\"xZX1YTZG5jWAlExm4sUv1k5hyb1\" width=\"444\" height=\"274\"></p>\n<p>The alternative would be to completely recreate the outline entry via the show-rule which is possible but tedious.</p>",
      "raw": "You can use the \"state-outline\" trick (https://sitandr.github.io/typst-examples-book/book/snippets/chapters/outlines.html?highlight=outline#long-and-short-captions-for-the-outline) which detects if your element is in the outline or not via a `state`.\n\n```typ\n#let in-outline = state(\"in-outline\", false)\n\n#set heading(numbering: \"1.1\")\n#set text(font: \"DM Sans\")\n\n#set page(numbering: (..n) => context {\n  if in-outline.get() {\n    numbering(\"1\", ..n)\n  } else {\n    numbering(\"1 / 1\", ..n)\n  }\n})\n\n#show outline: it => {\n  in-outline.update(true)\n  it\n  in-outline.update(false)\n}\n\n\n#show outline.entry.where(level: 1): it => {\n  set text(13pt, font: \"DM Sans\")\n  v(12pt, weak: true)\n  strong(it)\n}\n\n#outline()\n\n= Introduction\n\n== Don't Know\n```\n\n![image|444x274](upload://xZX1YTZG5jWAlExm4sUv1k5hyb1.png)\n\nThe alternative would be to completely recreate the outline entry via the show-rule which is possible but tedious.",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 2,
      "reads": 81,
      "score": 131.2,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 21
    },
    {
      "id": 3528,
      "post_number": 4,
      "username": "alex180500",
      "name": "Alessandro",
      "created_at": "2024-10-07T15:04:13.658Z",
      "updated_at": "2024-10-07T15:04:13.658Z",
      "cooked": "<p>Thank you a lot! This is a perfect solution for the outline, but I was trying to implement something similar for references (as I also have a custom entry for the header) but this works for the first time I reference something but not for the second time.</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let in-ref = state(\"in-ref\", false)\n\n#show ref: it =&gt; {\n    in-ref.update(true)\n    set text(font-color)\n    it\n    in-ref.update(false)\n  }\n\n#set heading(numbering: (..n) =&gt; context {\n    if in-ref.get() {numbering(\"1.1\", ..n)} else {[\n      #numbering(\"1.1\", ..n)\n      #h(0.3em)\n      #box(width: 1.2pt, height: 1.1em, fill: gray.darken(20%), baseline: 20%)\n      #h(0.2em)\n    ]}\n  })\n</code></pre>\n<p>But this result in a behaviour like this</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/68ac1a95a63f2f19de2c2adc69fe4271258a50b0.png\" alt=\"image\" data-base62-sha1=\"eVYo2nBG70ARfL7L3JVenh6Z0vm\" width=\"387\" height=\"99\"></p>\n<p>What is going on?</p>",
      "raw": "Thank you a lot! This is a perfect solution for the outline, but I was trying to implement something similar for references (as I also have a custom entry for the header) but this works for the first time I reference something but not for the second time.\n\n```typst\n#let in-ref = state(\"in-ref\", false)\n\n#show ref: it => {\n    in-ref.update(true)\n    set text(font-color)\n    it\n    in-ref.update(false)\n  }\n\n#set heading(numbering: (..n) => context {\n    if in-ref.get() {numbering(\"1.1\", ..n)} else {[\n      #numbering(\"1.1\", ..n)\n      #h(0.3em)\n      #box(width: 1.2pt, height: 1.1em, fill: gray.darken(20%), baseline: 20%)\n      #h(0.2em)\n    ]}\n  })\n```\n\nBut this result in a behaviour like this\n\n![image|516x132, 75%](upload://eVYo2nBG70ARfL7L3JVenh6Z0vm.png)\n\nWhat is going on?",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 66,
      "score": 43.2,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 550
    },
    {
      "id": 3530,
      "post_number": 5,
      "username": "xkevio",
      "name": "Kevio",
      "created_at": "2024-10-07T17:05:01.396Z",
      "updated_at": "2024-10-07T18:07:52.198Z",
      "cooked": "<p>I am not sure what is going on there specifically but here I would just recommend a normal show-rule instead:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show ref: r =&gt; if r.element.func() == heading [\n  #let vert-line = box(width: 1.2pt, height: 1.1em, fill: gray.darken(20%), baseline: 20%)\n  #r#h(0.3em)#vert-line#h(0.2em)\n] else { r }\n</code></pre>\n<p><strong>EDIT:</strong> Misread and realized you want it the other way around, whoops. See</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show ref: r =&gt; if r.element.func() == heading [\n  #link(r.element.location())[\n    #r.element.supplement #counter(heading).display(\"1.1\")\n  ]\n] else { r }\n</code></pre>",
      "raw": "I am not sure what is going on there specifically but here I would just recommend a normal show-rule instead:\n\n```typ\n#show ref: r => if r.element.func() == heading [\n  #let vert-line = box(width: 1.2pt, height: 1.1em, fill: gray.darken(20%), baseline: 20%)\n  #r#h(0.3em)#vert-line#h(0.2em)\n] else { r }\n```\n\n**EDIT:** Misread and realized you want it the other way around, whoops. See \n```typ\n#show ref: r => if r.element.func() == heading [\n  #link(r.element.location())[\n    #r.element.supplement #counter(heading).display(\"1.1\")\n  ]\n] else { r }\n```",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 65,
      "score": 28.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 21
    },
    {
      "id": 6948,
      "post_number": 6,
      "username": "Roland_Schatzle",
      "name": "Roland Schätzle",
      "created_at": "2024-12-27T22:38:24.536Z",
      "updated_at": "2024-12-27T22:40:46.371Z",
      "cooked": "<p>I’ve tried the “state-outline” trick shown by <a class=\"mention\" href=\"/u/xkevio\">@xkevio</a> . But in my case it works only, if I set the initial value of <code>in-outline</code> to <code>true</code>. This seems a bit strange to me. Shouldn’t it work, no matter, what the initial value is?</p>\n<p>BTW: I’m using it in the <code>header</code>-definition of the page as follows:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">header:  \n      grid(\n        ...\n        text(font: heading-font, size: 9pt, \n          number-type: \"lining\",\n          context {if in-outline.get() {\n              counter(page).display(\"i\")\n            } else {\n              counter(page).display(\"1\")\n            }\n          }\n        ),\n        ...\n      ),\n</code></pre>\n<p>Could that be the cause of the strange behavior?</p>",
      "raw": "I've tried the \"state-outline\" trick shown by @xkevio . But in my case it works only, if I set the initial value of `in-outline` to `true`. This seems a bit strange to me. Shouldn't it work, no matter, what the initial value is?\n\nBTW: I'm using it in the `header`-definition of the page as follows:\n```typ \nheader:  \n      grid(\n        ...\n        text(font: heading-font, size: 9pt, \n          number-type: \"lining\",\n          context {if in-outline.get() {\n              counter(page).display(\"i\")\n            } else {\n              counter(page).display(\"1\")\n            }\n          }\n        ),\n        ...\n      ),\n```\n\nCould that be the cause of the strange behavior?",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 43,
      "score": 68.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 966
    }
  ],
  "scraped_at": "2025-06-10T09:57:15.383954"
}