{
  "topic_metadata": {
    "id": 1769,
    "title": "How to achieve this figure in Typst from LaTeX?",
    "slug": "how-to-achieve-this-figure-in-typst-from-latex",
    "posts_count": 6,
    "created_at": "2024-11-17T21:24:19.919Z",
    "last_posted_at": "2024-11-17T22:10:28.176Z",
    "views": 428,
    "like_count": 2,
    "reply_count": 2,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 6,
    "accepted_answer_username": "SillyFreak",
    "tags": [
      "graphics",
      "cetz",
      "latex-migration"
    ],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 1205
  },
  "posts": [
    {
      "id": 5741,
      "post_number": 1,
      "username": "AhmedSalih",
      "name": "",
      "created_at": "2024-11-17T21:24:20.051Z",
      "updated_at": "2024-11-17T21:45:56.361Z",
      "cooked": "<p>Hello!</p>\n<p>I got the following code in Typst:</p>\n<details>\n<summary>\nCode to Generate Plot</summary>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#import \"@preview/cetz:0.3.1\"\n#import \"@preview/cetz-plot:0.1.0\": *\n\n \n#cetz.canvas({\n    import cetz.draw: *\n\n    let style = (stroke: black, fill: rgb(0, 0, 200, 75))\n\n    let f1(x) = calc.sin(x)\n    let nonum(eq) = math.equation(block: true, numbering: none, eq)\n    let fn = (\n      (blue, nonum($ \"Cubic Spline\" $),     q =&gt; float(q &gt;= 0) * float(q &lt;= 1) * (1 - ((3/2) * q * q) + ((3/4) * q*q*q)) + float(q &gt; 1) * float(q &lt;= 2) * (1/4 * (2 - q) * (2 - q) * (2 - q))),\n      (orange, nonum($ \"Wendland Quintic\" $), q =&gt; float(q &gt;= 0) * float(q &lt;= 2) * ((1-q/2)*(1-q/2)*(1-q/2)*(1-q/2)*(2*q + 1))),\n    )\n      let fn_der = (\n      (blue, nonum($ \"Cubic Spline - dWdq\" $),     q =&gt; float(q &gt;= 0) * float(q &lt;= 1) * (-3*q + (9/4)*q*q) + float(q &gt; 1) * float(q &lt;= 2) * (-(3/4)*(q - 2)*(q - 2))),\n      (orange, nonum($ \"Wendland Quintic - dWdq\" $), q =&gt; float(q &gt;= 0) * float(q &lt;= 2) * ((5/8)*q*(q - 2)*(q - 2)*(q - 2))),\n    )\n\n    // Set-up a thin axis style\n    set-style(axes: (stroke: .5pt, tick: (stroke: .5pt), ),\n              legend: (stroke: none, orientation: ttb, item: (spacing: .3), scale: 80%))\n\n    // Draw x-line at 0, in a terrible way\n    line((0, 4.4375 ), (12, 4.4375),    mark: (end: none), name: \"long_line\")\n\n\n    // Define W(q) box\n    content(\n      (-3.35, 7),\n      (-1.25, 5),\n      box(\n        par(justify: false)[#nonum($ W(q) $)],\n        stroke: 1pt,\n        width: 100%,\n        height: 75%,\n        inset: 1em\n      )\n    )\n\n    // define dW(q)/dq box\n    content(\n      (-3.35, 1),\n      (-1.25, 3),\n      box(\n        par(justify: false)[#nonum($ (dif W(q)) / (dif q) $)],\n        stroke: 1pt,\n        width: 100%,\n        height: 75%,\n        inset: 1em\n      )\n    )\n\n\n    // Perform plot\n    plot.plot(size: (12, 8),\n      x-label: \"q\",\n      y-label: none,\n      x-tick-step: 1,\n      // x-format: plot.formats.multiple-of,\n      y-tick-step: 0.25, y-min: -1.25, y-max: 1,\n      legend: \"inner-north\",\n      {\n        let domain = (0, 3)\n\n        for ((paint, title, f)) in fn {\n          plot.add(f, style: (stroke: (paint: paint)), domain: domain, label: title)\n        }\n        for ((paint, title, f)) in fn_der {\n          plot.add(f, style: (stroke: (paint: paint, dash: \"dashed\")), domain: domain, label: title)\n        }\n        \n      })\n  })\n</code></pre>\n</details>\n<p>This gives me the following result:</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/1/12e0cd9a74afee2278260d71039d1c156919b0f8.png\" alt=\"image\" data-base62-sha1=\"2H0erxibIlm9xlE1N3CU0AL2Oo0\" width=\"623\" height=\"388\"></p>\n<p>I wish to remake the following graph:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/6/69b481a91069002a0a08dbdb1eee215aab4f3056.png\" data-download-href=\"https://forum.typst.app/uploads/default/69b481a91069002a0a08dbdb1eee215aab4f3056\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/6/69b481a91069002a0a08dbdb1eee215aab4f3056_2_690x418.png\" alt=\"image\" data-base62-sha1=\"f56RNFrmVgb5i9hj4l8VMXAeWeq\" width=\"690\" height=\"418\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/6/69b481a91069002a0a08dbdb1eee215aab4f3056_2_690x418.png, https://forum.typst.app/uploads/default/original/2X/6/69b481a91069002a0a08dbdb1eee215aab4f3056.png 1.5x, https://forum.typst.app/uploads/default/original/2X/6/69b481a91069002a0a08dbdb1eee215aab4f3056.png 2x\" data-dominant-color=\"FAF9FA\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">835×506 35.6 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>What I specifically want to do is at a minimum:</p>\n<ol>\n<li>Remove the square axes and use the similar visualisation</li>\n<li>I want to make xline much easier, I had to “guess” coordinates, I do not want to do so</li>\n<li>Likewise with the boxes to write W(q), dW(q)/dq etc. I had to guess coordinates, instead of being able to put it relatively to y-axis</li>\n</ol>\n<p>Hope you can help me level up my skills and achieve my goal in Typst!</p>\n<p>Kind regards</p>",
      "raw": "Hello!\n\nI got the following code in Typst:\n\n\n[details=\"Code to Generate Plot\"]\n```typst\n#import \"@preview/cetz:0.3.1\"\n#import \"@preview/cetz-plot:0.1.0\": *\n\n \n#cetz.canvas({\n    import cetz.draw: *\n\n    let style = (stroke: black, fill: rgb(0, 0, 200, 75))\n\n    let f1(x) = calc.sin(x)\n    let nonum(eq) = math.equation(block: true, numbering: none, eq)\n    let fn = (\n      (blue, nonum($ \"Cubic Spline\" $),     q => float(q >= 0) * float(q <= 1) * (1 - ((3/2) * q * q) + ((3/4) * q*q*q)) + float(q > 1) * float(q <= 2) * (1/4 * (2 - q) * (2 - q) * (2 - q))),\n      (orange, nonum($ \"Wendland Quintic\" $), q => float(q >= 0) * float(q <= 2) * ((1-q/2)*(1-q/2)*(1-q/2)*(1-q/2)*(2*q + 1))),\n    )\n      let fn_der = (\n      (blue, nonum($ \"Cubic Spline - dWdq\" $),     q => float(q >= 0) * float(q <= 1) * (-3*q + (9/4)*q*q) + float(q > 1) * float(q <= 2) * (-(3/4)*(q - 2)*(q - 2))),\n      (orange, nonum($ \"Wendland Quintic - dWdq\" $), q => float(q >= 0) * float(q <= 2) * ((5/8)*q*(q - 2)*(q - 2)*(q - 2))),\n    )\n\n    // Set-up a thin axis style\n    set-style(axes: (stroke: .5pt, tick: (stroke: .5pt), ),\n              legend: (stroke: none, orientation: ttb, item: (spacing: .3), scale: 80%))\n\n    // Draw x-line at 0, in a terrible way\n    line((0, 4.4375 ), (12, 4.4375),    mark: (end: none), name: \"long_line\")\n\n\n    // Define W(q) box\n    content(\n      (-3.35, 7),\n      (-1.25, 5),\n      box(\n        par(justify: false)[#nonum($ W(q) $)],\n        stroke: 1pt,\n        width: 100%,\n        height: 75%,\n        inset: 1em\n      )\n    )\n\n    // define dW(q)/dq box\n    content(\n      (-3.35, 1),\n      (-1.25, 3),\n      box(\n        par(justify: false)[#nonum($ (dif W(q)) / (dif q) $)],\n        stroke: 1pt,\n        width: 100%,\n        height: 75%,\n        inset: 1em\n      )\n    )\n\n\n    // Perform plot\n    plot.plot(size: (12, 8),\n      x-label: \"q\",\n      y-label: none,\n      x-tick-step: 1,\n      // x-format: plot.formats.multiple-of,\n      y-tick-step: 0.25, y-min: -1.25, y-max: 1,\n      legend: \"inner-north\",\n      {\n        let domain = (0, 3)\n\n        for ((paint, title, f)) in fn {\n          plot.add(f, style: (stroke: (paint: paint)), domain: domain, label: title)\n        }\n        for ((paint, title, f)) in fn_der {\n          plot.add(f, style: (stroke: (paint: paint, dash: \"dashed\")), domain: domain, label: title)\n        }\n        \n      })\n  })\n```\n[/details]\n\nThis gives me the following result:\n\n![image|623x388](upload://2H0erxibIlm9xlE1N3CU0AL2Oo0.png)\n\nI wish to remake the following graph:\n\n![image|690x418](upload://f56RNFrmVgb5i9hj4l8VMXAeWeq.png)\n\nWhat I specifically want to do is at a minimum:\n\n1. Remove the square axes and use the similar visualisation\n2. I want to make xline much easier, I had to \"guess\" coordinates, I do not want to do so\n3. Likewise with the boxes to write W(q), dW(q)/dq etc. I had to guess coordinates, instead of being able to put it relatively to y-axis\n\nHope you can help me level up my skills and achieve my goal in Typst!\n\nKind regards",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 80,
      "score": 1196.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 786
    },
    {
      "id": 5742,
      "post_number": 2,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2024-11-17T21:42:58.331Z",
      "updated_at": "2024-11-17T21:42:58.331Z",
      "cooked": "<p>Hi <a class=\"mention\" href=\"/u/ahmedsalih\">@AhmedSalih</a>, thanks for your question! A few things I noticed:</p>\n<ul>\n<li>\n<p>could you try to revise your post’s title to be a complete question as per the <a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11\">question guidelines</a>:</p>\n<blockquote>\n<p><strong>Good titles are questions you would ask your friend about Typst.</strong></p>\n</blockquote>\n<p>We hope by adhering to this, we make the information in this forum easy to find in the future.</p>\n</li>\n<li>\n<p>likewise, if you add tags such as <a class=\"hashtag-cooked\" href=\"/tag/graphics\" data-type=\"tag\" data-slug=\"graphics\" data-id=\"85\"><span class=\"hashtag-icon-placeholder\"><svg class=\"fa d-icon d-icon-square-full svg-icon svg-node\"><use href=\"#square-full\"></use></svg></span><span>graphics</span></a>, <a class=\"hashtag-cooked\" href=\"/tag/cetz\" data-type=\"tag\" data-slug=\"cetz\" data-id=\"1\"><span class=\"hashtag-icon-placeholder\"><svg class=\"fa d-icon d-icon-square-full svg-icon svg-node\"><use href=\"#square-full\"></use></svg></span><span>cetz</span></a>, <a class=\"hashtag-cooked\" href=\"/tag/latex-migration\" data-type=\"tag\" data-slug=\"latex-migration\" data-id=\"92\"><span class=\"hashtag-icon-placeholder\"><svg class=\"fa d-icon d-icon-square-full svg-icon svg-node\"><use href=\"#square-full\"></use></svg></span><span>latex-migration</span></a> this will help with discoverability</p>\n</li>\n<li>\n<p>finally, if you use <code>```typ ... ```</code> for your code block, the syntax highlighting will work properly</p>\n</li>\n</ul>\n<p>Thanks!</p>",
      "raw": "Hi @AhmedSalih, thanks for your question! A few things I noticed:\n- could you try to revise your post’s title to be a complete question as per the [question guidelines](https://forum.typst.app/t/how-to-post-in-the-questions-category/11):\n\n  > **Good titles are questions you would ask your friend about Typst.**\n\n  We hope by adhering to this, we make the information in this forum easy to find in the future.\n- likewise, if you add tags such as #graphics, #cetz, #latex-migration this will help with discoverability\n- finally, if you use ` ```typ ... ``` ` for your code block, the syntax highlighting will work properly\n\nThanks!",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 73,
      "score": 34.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 5743,
      "post_number": 3,
      "username": "AhmedSalih",
      "name": "",
      "created_at": "2024-11-17T21:45:35.510Z",
      "updated_at": "2024-11-17T21:46:10.404Z",
      "cooked": "<ol>\n<li>Done</li>\n<li>Done :-)</li>\n<li>Done</li>\n</ol>",
      "raw": "1. Done\n2. Done :-)\n3. Done",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 69,
      "score": 63.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 786
    },
    {
      "id": 5744,
      "post_number": 4,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2024-11-17T21:49:44.950Z",
      "updated_at": "2024-11-17T21:49:57.844Z",
      "cooked": "<p>Thanks!</p>\n<p>Your first requirement can be achieved with <code>plot.plot(axis-style: \"school-book\")</code>. What do you mean by “I want to make xline much easier”?</p>",
      "raw": "Thanks!\n\nYour first requirement can be achieved with `plot.plot(axis-style: \"school-book\")`. What do you mean by \"I want to make xline much easier\"?",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 66,
      "score": 23.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 5745,
      "post_number": 5,
      "username": "AhmedSalih",
      "name": "",
      "created_at": "2024-11-17T21:52:09.327Z",
      "updated_at": "2024-11-17T21:52:30.720Z",
      "cooked": "<p>Amazing now I have:</p>\n<details>\n<summary>\nCode Update 1</summary>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#import \"@preview/cetz:0.3.1\"\n#import \"@preview/cetz-plot:0.1.0\": *\n\n \n#cetz.canvas({\n    import cetz.draw: *\n\n    let style = (stroke: black, fill: rgb(0, 0, 200, 75))\n\n    let f1(x) = calc.sin(x)\n    let nonum(eq) = math.equation(block: true, numbering: none, eq)\n    let fn = (\n      (blue, nonum($ \"Cubic Spline\" $),     q =&gt; float(q &gt;= 0) * float(q &lt;= 1) * (1 - ((3/2) * q * q) + ((3/4) * q*q*q)) + float(q &gt; 1) * float(q &lt;= 2) * (1/4 * (2 - q) * (2 - q) * (2 - q))),\n      (orange, nonum($ \"Wendland Quintic\" $), q =&gt; float(q &gt;= 0) * float(q &lt;= 2) * ((1-q/2)*(1-q/2)*(1-q/2)*(1-q/2)*(2*q + 1))),\n    )\n      let fn_der = (\n      (blue, nonum($ \"Cubic Spline - dWdq\" $),     q =&gt; float(q &gt;= 0) * float(q &lt;= 1) * (-3*q + (9/4)*q*q) + float(q &gt; 1) * float(q &lt;= 2) * (-(3/4)*(q - 2)*(q - 2))),\n      (orange, nonum($ \"Wendland Quintic - dWdq\" $), q =&gt; float(q &gt;= 0) * float(q &lt;= 2) * ((5/8)*q*(q - 2)*(q - 2)*(q - 2))),\n    )\n\n    // Set-up a thin axis style\n    set-style(axes: (stroke: .5pt, tick: (stroke: .5pt), ),\n              legend: (stroke: none, orientation: ttb, item: (spacing: .3), scale: 80%))\n\n    // Draw x-line at 0, in a terrible way\n    line((0, 4.4375 ), (12, 4.4375),    mark: (end: none), name: \"long_line\")\n\n\n    // Define W(q) box\n    content(\n      (-3.35, 7),\n      (-1.25, 5),\n      box(\n        par(justify: false)[#nonum($ W(q) $)],\n        stroke: 1pt,\n        width: 100%,\n        height: 75%,\n        inset: 1em\n      )\n    )\n\n    // define dW(q)/dq box\n    content(\n      (-3.35, 1),\n      (-1.25, 3),\n      box(\n        par(justify: false)[#nonum($ (dif W(q)) / (dif q) $)],\n        stroke: 1pt,\n        width: 100%,\n        height: 75%,\n        inset: 1em\n      )\n    )\n\n\n    // Perform plot\n    plot.plot(size: (12, 8),\n      x-label: \"q\",\n      y-label: none,\n      x-tick-step: 1,\n      axis-style: \"school-book\",\n      // x-format: plot.formats.multiple-of,\n      y-tick-step: 0.25, y-min: -1.25, y-max: 1,\n      legend: \"inner-north\",\n      {\n        let domain = (0, 3)\n\n        for ((paint, title, f)) in fn {\n          plot.add(f, style: (stroke: (paint: paint)), domain: domain, label: title)\n        }\n        for ((paint, title, f)) in fn_der {\n          plot.add(f, style: (stroke: (paint: paint, dash: \"dashed\")), domain: domain, label: title)\n        }\n        \n      })\n  })\n</code></pre>\n</details>\n<p>In regards to making <code>xline</code> easier, I just don’t understand how to make it use the actual plot coordinates instead of the CeTZ canvas I assume it is using? I have to put some weird coordinates in where I just really want to put in (0,0) and (3,0) tbh</p>\n<p>Image:</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/4/4e0dc4ec95c3c7ad08a30d640fee5a18374d30fa.png\" alt=\"image\" data-base62-sha1=\"b8uK4EfDDz3Dn92Z8R9i1sq5J8u\" width=\"680\" height=\"384\"></p>\n<p>Kind regards</p>",
      "raw": "Amazing now I have:\n\n\n[details=\"Code Update 1\"]\n```typst\n#import \"@preview/cetz:0.3.1\"\n#import \"@preview/cetz-plot:0.1.0\": *\n\n \n#cetz.canvas({\n    import cetz.draw: *\n\n    let style = (stroke: black, fill: rgb(0, 0, 200, 75))\n\n    let f1(x) = calc.sin(x)\n    let nonum(eq) = math.equation(block: true, numbering: none, eq)\n    let fn = (\n      (blue, nonum($ \"Cubic Spline\" $),     q => float(q >= 0) * float(q <= 1) * (1 - ((3/2) * q * q) + ((3/4) * q*q*q)) + float(q > 1) * float(q <= 2) * (1/4 * (2 - q) * (2 - q) * (2 - q))),\n      (orange, nonum($ \"Wendland Quintic\" $), q => float(q >= 0) * float(q <= 2) * ((1-q/2)*(1-q/2)*(1-q/2)*(1-q/2)*(2*q + 1))),\n    )\n      let fn_der = (\n      (blue, nonum($ \"Cubic Spline - dWdq\" $),     q => float(q >= 0) * float(q <= 1) * (-3*q + (9/4)*q*q) + float(q > 1) * float(q <= 2) * (-(3/4)*(q - 2)*(q - 2))),\n      (orange, nonum($ \"Wendland Quintic - dWdq\" $), q => float(q >= 0) * float(q <= 2) * ((5/8)*q*(q - 2)*(q - 2)*(q - 2))),\n    )\n\n    // Set-up a thin axis style\n    set-style(axes: (stroke: .5pt, tick: (stroke: .5pt), ),\n              legend: (stroke: none, orientation: ttb, item: (spacing: .3), scale: 80%))\n\n    // Draw x-line at 0, in a terrible way\n    line((0, 4.4375 ), (12, 4.4375),    mark: (end: none), name: \"long_line\")\n\n\n    // Define W(q) box\n    content(\n      (-3.35, 7),\n      (-1.25, 5),\n      box(\n        par(justify: false)[#nonum($ W(q) $)],\n        stroke: 1pt,\n        width: 100%,\n        height: 75%,\n        inset: 1em\n      )\n    )\n\n    // define dW(q)/dq box\n    content(\n      (-3.35, 1),\n      (-1.25, 3),\n      box(\n        par(justify: false)[#nonum($ (dif W(q)) / (dif q) $)],\n        stroke: 1pt,\n        width: 100%,\n        height: 75%,\n        inset: 1em\n      )\n    )\n\n\n    // Perform plot\n    plot.plot(size: (12, 8),\n      x-label: \"q\",\n      y-label: none,\n      x-tick-step: 1,\n      axis-style: \"school-book\",\n      // x-format: plot.formats.multiple-of,\n      y-tick-step: 0.25, y-min: -1.25, y-max: 1,\n      legend: \"inner-north\",\n      {\n        let domain = (0, 3)\n\n        for ((paint, title, f)) in fn {\n          plot.add(f, style: (stroke: (paint: paint)), domain: domain, label: title)\n        }\n        for ((paint, title, f)) in fn_der {\n          plot.add(f, style: (stroke: (paint: paint, dash: \"dashed\")), domain: domain, label: title)\n        }\n        \n      })\n  })\n```\n[/details]\n\nIn regards to making `xline` easier, I just don't understand how to make it use the actual plot coordinates instead of the CeTZ canvas I assume it is using? I have to put some weird coordinates in where I just really want to put in (0,0) and (3,0) tbh\n\nImage:\n\n![image|680x384](upload://b8uK4EfDDz3Dn92Z8R9i1sq5J8u.png)\n\n\nKind regards",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 65,
      "score": 48.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 786
    },
    {
      "id": 5748,
      "post_number": 6,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2024-11-17T22:10:28.176Z",
      "updated_at": "2024-11-17T22:36:42.077Z",
      "cooked": "<p>oh, I searched the code for <code>xline</code> and missed that there was an <code>x-line</code> <img src=\"https://forum.typst.app/images/emoji/apple/stuck_out_tongue.png?v=12\" title=\":stuck_out_tongue:\" class=\"emoji\" alt=\":stuck_out_tongue:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>the plot coordinates are only defined within <code>plot</code>, but you can use <code>add-hline()</code> (see <a href=\"https://raw.githubusercontent.com/cetz-package/cetz-plot/refs/heads/stable/manual.pdf\">the manual</a> for details):</p>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">plot.add-hline(0, min: 0, max: 3)\n</code></pre>\n<p>That means to put the boxes aligned around the x axis, you’ll also need to somehow put them within <code>plot</code>, but there it’s a bit less obvious. cetz-plot has an <code>annotate()</code> function:</p>\n<blockquote>\n<p>An annotation is a sub-canvas that uses the plots coordinates specified by its x and y axis</p>\n</blockquote>\n<p>So you can do the following:</p>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">plot.annotate(resize: false, {\n  let (x, y) = (-0.55, 0.5)\n  let ann(body) = block(\n    stroke: 1pt,\n    width: 15mm,\n    height: 14mm,\n    align(center+horizon, body)\n  )\n  \n  // Define W(q) box\n  content((x, y), ann(nonum($ W(q) $)))\n\n  // define dW(q)/dq box\n  content((x, -y), ann(nonum($ (dif W(q)) / (dif q) $)))\n})\n</code></pre>\n<p>And to have all the information in one post: <code>plot.plot(axis-style: \"school-book\")</code> is how you configure the axis as desired <img src=\"https://forum.typst.app/images/emoji/apple/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "oh, I searched the code for `xline` and missed that there was an `x-line` :stuck_out_tongue: \n\nthe plot coordinates are only defined within `plot`, but you can use `add-hline()` (see [the manual](https://raw.githubusercontent.com/cetz-package/cetz-plot/refs/heads/stable/manual.pdf) for details):\n```typc\nplot.add-hline(0, min: 0, max: 3)\n```\nThat means to put the boxes aligned around the x axis, you'll also need to somehow put them within `plot`, but there it's a bit less obvious. cetz-plot has an `annotate()` function:\n> An annotation is a sub-canvas that uses the plots coordinates specified by its x and y axis\n\nSo you can do the following:\n```typc\nplot.annotate(resize: false, {\n  let (x, y) = (-0.55, 0.5)\n  let ann(body) = block(\n    stroke: 1pt,\n    width: 15mm,\n    height: 14mm,\n    align(center+horizon, body)\n  )\n  \n  // Define W(q) box\n  content((x, y), ann(nonum($ W(q) $)))\n\n  // define dW(q)/dq box\n  content((x, -y), ann(nonum($ (dif W(q)) / (dif q) $)))\n})\n```\n\nAnd to have all the information in one post: `plot.plot(axis-style: \"school-book\")` is how you configure the axis as desired :slight_smile:",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 61,
      "score": 62.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 32
    }
  ],
  "scraped_at": "2025-06-10T09:54:49.181745"
}