{
  "topic_metadata": {
    "id": 4106,
    "title": "How can I update the figure counter ignoring the figures with `supplement: none`?",
    "slug": "how-can-i-update-the-figure-counter-ignoring-the-figures-with-supplement-none",
    "posts_count": 8,
    "created_at": "2025-05-15T16:24:22.668Z",
    "last_posted_at": "2025-05-17T05:19:23.061Z",
    "views": 81,
    "like_count": 5,
    "reply_count": 4,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 8,
    "accepted_answer_username": "Andrew",
    "tags": [
      "scripting",
      "layout"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 1303
  },
  "posts": [
    {
      "id": 12542,
      "post_number": 1,
      "username": "ivaquero",
      "name": "ivaquero",
      "created_at": "2025-05-15T16:24:22.828Z",
      "updated_at": "2025-05-16T07:34:19.786Z",
      "cooked": "<p>Hi friends, I create two figures using <code>supbar</code> and <code>lilaq</code> package, but I want counter to ignore the first one (I want the caption to be Figure 1 …), what should I do?</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/b/b76bd89dfcb0e8436f69b5863c134855ade62b10.png\" data-download-href=\"https://forum.typst.app/uploads/default/b76bd89dfcb0e8436f69b5863c134855ade62b10\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/b/b76bd89dfcb0e8436f69b5863c134855ade62b10_2_690x251.png\" alt=\"image\" data-base62-sha1=\"qaCr3CuBZfYLKcazKjBJug9y9yM\" width=\"690\" height=\"251\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/b/b76bd89dfcb0e8436f69b5863c134855ade62b10_2_690x251.png, https://forum.typst.app/uploads/default/original/2X/b/b76bd89dfcb0e8436f69b5863c134855ade62b10.png 1.5x, https://forum.typst.app/uploads/default/original/2X/b/b76bd89dfcb0e8436f69b5863c134855ade62b10.png 2x\" data-dominant-color=\"F9F9FA\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">730×266 18.2 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>The complete code is as follows</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#import \"@preview/lilaq:0.3.0\" as lq\n#import \"@preview/tiptoe:0.3.0\"\n#import \"@preview/subpar:0.2.2\": grid as sgrid\n\n#let (x, y, y2) = lq.load-txt(read(\"data/homegeneity.csv\"))\n\n\n#let peak(value, distance) = value &gt; 0 and distance &lt; 5pt\n\n#let trans-linear(\n  x,\n  y,\n  y2,\n  ylim-base,\n  supplement: none,\n  caption: none,\n  width: 100pt,\n  column: 60pt,\n  gutter: 50pt,\n) = sgrid(\n  figure(\n    ..if caption == none { (numbering: it =&gt; 0) },\n    lq.diagram(\n      width: width,\n      height: width * .5,\n      lq.plot(x, y, mark: none),\n      xlim: (x.at(0), x.at(-1)),\n      ylim: (ylim-base.at(0), ylim-base.at(-1) + ylim-base.at(-1) / 10),\n      xaxis: (position: 0, tip: none, ticks: none),\n      yaxis: (position: 0, tip: none, filter: peak),\n    ),\n  ),\n  figure(\n    ..if caption == none { (numbering: it =&gt; 0) },\n    lq.diagram(\n      width: width,\n      height: width * .5,\n      lq.place(x.at(-1) * .5, y.at(-1) * .5)[$h(x)$],\n      lq.rect(\n        x.at(-1) * .3,\n        y.at(-1) * .3,\n        width: x.at(-1) * .4,\n        height: y.at(-1) * .4,\n      ),\n      lq.line(\n        tip: tiptoe.stealth,\n        (x.at(-1) * .7, y.at(-1) * .5),\n        (x.at(-1) * .9, y.at(-1) * .5),\n      ),\n      lq.line(\n        tip: tiptoe.stealth,\n        (x.at(-1) * .1, y.at(-1) * .5),\n        (x.at(-1) * .3, y.at(-1) * .5),\n      ),\n      xlim: (x.at(0), x.at(-1)),\n      ylim: (y.at(0), y.at(-1) + y.at(-1) / 10),\n      xaxis: (stroke: none, ticks: none),\n      yaxis: (stroke: none, ticks: none),\n    ),\n  ),\n  figure(\n    lq.diagram(\n      width: width,\n      height: width * .5,\n      lq.plot(x, y2, mark: none),\n      xlim: (x.at(0), x.at(-1)),\n      ylim: (ylim-base.at(0), ylim-base.at(-1) + ylim-base.at(-1) / 10),\n      xaxis: (position: 0, tip: none, ticks: none),\n      yaxis: (position: 0, tip: none, filter: peak),\n    ),\n  ),\n  columns: (column,) * 3,\n  gutter: gutter,\n  kind: \"\",\n  supplement: supplement,\n  caption: caption,\n)\n\n\n#trans-linear(\n  x,\n  y,\n  y2,\n  lq.vec.multiply(y2, 2),\n  supplement: none,\n  caption: none,\n)\n#trans-linear(\n  x,\n  lq.vec.multiply(y, 2),\n  lq.vec.multiply(y2, 2),\n  lq.vec.multiply(y2, 2),\n  supplement: \"Figure\",\n  caption: \"Homegeneity\",\n)\n</code></pre>\n<p>The data is in csv format</p>\n<pre data-code-wrap=\"csv\"><code class=\"lang-csv\">0,0,0\n1,0,0\n2,0,0\n3,0,0\n4,0,0\n5,0,0\n5.5,0.95,0.8\n6,1,1\n7,1,0.9\n8,1,0.6\n9,1,0.9\n10,1,1\n11,1,0.7\n12,1,0.65\n13,1,0.8\n14,1,1\n15,1,0.9\n16,1,1\n17,1,1\n18,1,1\n19,1,1\n20,1,1\n</code></pre>",
      "raw": "Hi friends, I create two figures using `supbar` and `lilaq` package, but I want counter to ignore the first one (I want the caption to be Figure 1 ...), what should I do?\n\n![image|690x251](upload://qaCr3CuBZfYLKcazKjBJug9y9yM.png)\n\nThe complete code is as follows\n\n```typst\n#import \"@preview/lilaq:0.3.0\" as lq\n#import \"@preview/tiptoe:0.3.0\"\n#import \"@preview/subpar:0.2.2\": grid as sgrid\n\n#let (x, y, y2) = lq.load-txt(read(\"data/homegeneity.csv\"))\n\n\n#let peak(value, distance) = value > 0 and distance < 5pt\n\n#let trans-linear(\n  x,\n  y,\n  y2,\n  ylim-base,\n  supplement: none,\n  caption: none,\n  width: 100pt,\n  column: 60pt,\n  gutter: 50pt,\n) = sgrid(\n  figure(\n    ..if caption == none { (numbering: it => 0) },\n    lq.diagram(\n      width: width,\n      height: width * .5,\n      lq.plot(x, y, mark: none),\n      xlim: (x.at(0), x.at(-1)),\n      ylim: (ylim-base.at(0), ylim-base.at(-1) + ylim-base.at(-1) / 10),\n      xaxis: (position: 0, tip: none, ticks: none),\n      yaxis: (position: 0, tip: none, filter: peak),\n    ),\n  ),\n  figure(\n    ..if caption == none { (numbering: it => 0) },\n    lq.diagram(\n      width: width,\n      height: width * .5,\n      lq.place(x.at(-1) * .5, y.at(-1) * .5)[$h(x)$],\n      lq.rect(\n        x.at(-1) * .3,\n        y.at(-1) * .3,\n        width: x.at(-1) * .4,\n        height: y.at(-1) * .4,\n      ),\n      lq.line(\n        tip: tiptoe.stealth,\n        (x.at(-1) * .7, y.at(-1) * .5),\n        (x.at(-1) * .9, y.at(-1) * .5),\n      ),\n      lq.line(\n        tip: tiptoe.stealth,\n        (x.at(-1) * .1, y.at(-1) * .5),\n        (x.at(-1) * .3, y.at(-1) * .5),\n      ),\n      xlim: (x.at(0), x.at(-1)),\n      ylim: (y.at(0), y.at(-1) + y.at(-1) / 10),\n      xaxis: (stroke: none, ticks: none),\n      yaxis: (stroke: none, ticks: none),\n    ),\n  ),\n  figure(\n    lq.diagram(\n      width: width,\n      height: width * .5,\n      lq.plot(x, y2, mark: none),\n      xlim: (x.at(0), x.at(-1)),\n      ylim: (ylim-base.at(0), ylim-base.at(-1) + ylim-base.at(-1) / 10),\n      xaxis: (position: 0, tip: none, ticks: none),\n      yaxis: (position: 0, tip: none, filter: peak),\n    ),\n  ),\n  columns: (column,) * 3,\n  gutter: gutter,\n  kind: \"\",\n  supplement: supplement,\n  caption: caption,\n)\n\n\n#trans-linear(\n  x,\n  y,\n  y2,\n  lq.vec.multiply(y2, 2),\n  supplement: none,\n  caption: none,\n)\n#trans-linear(\n  x,\n  lq.vec.multiply(y, 2),\n  lq.vec.multiply(y2, 2),\n  lq.vec.multiply(y2, 2),\n  supplement: \"Figure\",\n  caption: \"Homegeneity\",\n)\n```\n\nThe data is in csv format\n\n```csv\n0,0,0\n1,0,0\n2,0,0\n3,0,0\n4,0,0\n5,0,0\n5.5,0.95,0.8\n6,1,1\n7,1,0.9\n8,1,0.6\n9,1,0.9\n10,1,1\n11,1,0.7\n12,1,0.65\n13,1,0.8\n14,1,1\n15,1,0.9\n16,1,1\n17,1,1\n18,1,1\n19,1,1\n20,1,1\n```",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 23,
      "score": 134.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1204
    },
    {
      "id": 12544,
      "post_number": 2,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2025-05-15T18:08:46.276Z",
      "updated_at": "2025-05-15T21:17:21.517Z",
      "cooked": "<p>You can set the first figure’s numbering to <code>none</code> as unnumbered figures won’t step the counter. To put this in the <code>trans-linear</code> function, you can make this conditional based on whether the <code>caption</code> parameter is <code>none</code>.</p>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">figure(\n  ..if caption == none { (numbering: none) },\n  lq.diagram(..)\n)\n</code></pre>\n<p>This may look a bit odd because of the <a href=\"https://typst.app/docs/reference/foundations/arguments/#spreading\">spread operator</a>, but it’s necessary as it allows the default figure numbering to still be used when the caption is not <code>none</code>.</p>\n<hr>\n<p>Edit: I kind of missed the <code>subpar</code> part of the question, but it turns out that this answer still works. Ideally, you would set the numbering of the <code>sgrid</code> to <code>none</code>, but that’s not allowed by the package. Also, I’m wondering if the <code>trans-linear</code> function couldn’t just return a single figure containing a grid, since this doesn’t seem to be using any subfigure features like sub-numbering.</p>",
      "raw": "You can set the first figure's numbering to `none` as unnumbered figures won't step the counter. To put this in the `trans-linear` function, you can make this conditional based on whether the `caption` parameter is `none`.\n```typc\nfigure(\n  ..if caption == none { (numbering: none) },\n  lq.diagram(..)\n)\n```\nThis may look a bit odd because of the [spread operator](https://typst.app/docs/reference/foundations/arguments/#spreading), but it's necessary as it allows the default figure numbering to still be used when the caption is not `none`.\n\n---\n\nEdit: I kind of missed the `subpar` part of the question, but it turns out that this answer still works. Ideally, you would set the numbering of the `sgrid` to `none`, but that's not allowed by the package. Also, I'm wondering if the `trans-linear` function couldn't just return a single figure containing a grid, since this doesn't seem to be using any subfigure features like sub-numbering.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 22,
      "score": 39.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 12552,
      "post_number": 3,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-15T21:02:05.694Z",
      "updated_at": "2025-05-15T21:02:05.694Z",
      "cooked": "<p>See <a href=\"https://sscce.org/\">https://sscce.org/</a>.</p>\n<aside class=\"quote no-group\" data-username=\"reknih\" data-post=\"1\" data-topic=\"11\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/reknih/48/3_2.png\" class=\"avatar\"><a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11/1\">How to post in the Questions category</a></div>\n<blockquote>\n<p>It would be great if you could post the <strong>smallest possible code samples</strong> that allow people to see what your problem is.</p>\n</blockquote>\n</aside>\n<p>Your example is big and incomplete, therefore doesn’t compile. The question is about figure numbers, so the figure content should be removed completely. You can use simple text or <code>rect()</code> instead.</p>",
      "raw": "See https://sscce.org/.\n\n[quote=\"reknih, post:1, topic:11\"]\nIt would be great if you could post the **smallest possible code samples** that allow people to see what your problem is.\n[/quote]\n\nYour example is big and incomplete, therefore doesn't compile. The question is about figure numbers, so the figure content should be removed completely. You can use simple text or `rect()` instead.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 21,
      "score": 29.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12570,
      "post_number": 5,
      "username": "ivaquero",
      "name": "ivaquero",
      "created_at": "2025-05-16T07:35:45.058Z",
      "updated_at": "2025-05-16T07:35:45.058Z",
      "cooked": "<p>Thank you, I tried, however, <code>supbar</code> requires the number &gt;=0</p>\n<p>Can this be achieved by show rules?</p>",
      "raw": "Thank you, I tried, however, `supbar` requires the number >=0\n\nCan this be achieved by show rules?",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 18,
      "score": 3.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1204
    },
    {
      "id": 12572,
      "post_number": 6,
      "username": "ivaquero",
      "name": "ivaquero",
      "created_at": "2025-05-16T07:46:15.067Z",
      "updated_at": "2025-05-16T07:48:54.943Z",
      "cooked": "<p>Thanks for advice. I updated the code, it’s complete now. (My first thought was my goal can be achieved by some show rules, which might not be involved with the data or the imported packages).</p>\n<p>The current code is based on <code>supar</code> package for a sub-figure layout,  <code>supar</code> uses figure objects, so using <code>rect()</code> does not change the things.</p>",
      "raw": "Thanks for advice. I updated the code, it’s complete now. (My first thought was my goal can be achieved by some show rules, which might not be involved with the data or the imported packages).\n\nThe current code is based on `supar` package for a sub-figure layout,  `supar` uses figure objects, so using `rect()` does not change the things.",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 18,
      "score": 8.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1204
    },
    {
      "id": 12604,
      "post_number": 7,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-16T19:14:15.450Z",
      "updated_at": "2025-05-16T19:25:46.803Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"ivaquero\" data-post=\"6\" data-topic=\"4106\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/i/0A3649/48.png\" class=\"avatar\"> ivaquero:</div>\n<blockquote>\n<p>The current code is based on <code>supar</code> package for a sub-figure layout, <code>supar</code> uses figure objects, so using <code>rect()</code> does not change the things.</p>\n</blockquote>\n</aside>\n<p>It does change the things. The context is providing the <strong>smallest possible code samples</strong>.</p>\n<aside class=\"quote no-group\" data-username=\"reknih\" data-post=\"1\" data-topic=\"11\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/reknih/48/3_2.png\" class=\"avatar\"><a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11/1\">How to post in the Questions category</a></div>\n<blockquote>\n<p>It would be great if you could post the <strong>smallest possible code samples</strong> that allow people to see what your problem is.</p>\n</blockquote>\n</aside>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/subpar:0.2.2\": grid as sgrid\n\n#let trans-linear(caption: none, column: 60pt) = sgrid(\n  columns: (column,) * 3,\n  caption: caption,\n  figure(rect[left]),\n  figure(rect[center]),\n  figure(rect[right]),\n)\n\n#trans-linear(caption: none)\n#trans-linear(caption: \"Homegeneity\")\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/9/9b4042301a28bd80df6b7896705069c264f43766.png\" alt=\"image\" data-base62-sha1=\"m9pGeBUWDBiMivgvK8JVkrnr9zg\" width=\"224\" height=\"95\"></p>\n<p>This is much more manageable and easy to understand.</p>",
      "raw": "[quote=\"ivaquero, post:6, topic:4106\"]\nThe current code is based on `supar` package for a sub-figure layout, `supar` uses figure objects, so using `rect()` does not change the things.\n[/quote]\n\nIt does change the things. The context is providing the **smallest possible code samples**.\n\n[quote=\"reknih, post:1, topic:11\"]\nIt would be great if you could post the **smallest possible code samples** that allow people to see what your problem is.\n[/quote]\n\n```typ\n#import \"@preview/subpar:0.2.2\": grid as sgrid\n\n#let trans-linear(caption: none, column: 60pt) = sgrid(\n  columns: (column,) * 3,\n  caption: caption,\n  figure(rect[left]),\n  figure(rect[center]),\n  figure(rect[right]),\n)\n\n#trans-linear(caption: none)\n#trans-linear(caption: \"Homegeneity\")\n```\n\n![image|299x127, 75%](upload://m9pGeBUWDBiMivgvK8JVkrnr9zg.png)\n\nThis is much more manageable and easy to understand.",
      "reply_to_post_number": 6,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 0,
      "reads": 15,
      "score": 8.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12605,
      "post_number": 8,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-16T19:24:59.948Z",
      "updated_at": "2025-05-16T19:25:59.150Z",
      "cooked": "<p>I didn’t dive deep into this, but since some direct changes are impossible, there is also an explicit counter update:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/subpar:0.2.2\": grid as sgrid\n\n#let trans-linear(caption: none, column: 60pt) = {\n  sgrid(\n    columns: (column,) * 3,\n    caption: caption,\n    figure(rect[left]),\n    figure(rect[center]),\n    figure(rect[right]),\n  )\n  if caption == none { counter(figure.where(kind: image)).update(n =&gt; n - 1) }\n}\n\n#trans-linear(caption: none)\n#trans-linear(caption: \"Homegeneity\")\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/4/461863a1f34a2eb13ee7375d8025f31db372fe12.png\" alt=\"image\" data-base62-sha1=\"a05FWA0cDiR6jTxmuzXUGmNvI6m\" width=\"229\" height=\"100\"></p>\n<p>I just don’t know about the kind. If it’s just the standard <code>image</code> kind, then it’s all should be good, otherwise you might need some additional tweaking.</p>",
      "raw": "I didn't dive deep into this, but since some direct changes are impossible, there is also an explicit counter update:\n\n```typ\n#import \"@preview/subpar:0.2.2\": grid as sgrid\n\n#let trans-linear(caption: none, column: 60pt) = {\n  sgrid(\n    columns: (column,) * 3,\n    caption: caption,\n    figure(rect[left]),\n    figure(rect[center]),\n    figure(rect[right]),\n  )\n  if caption == none { counter(figure.where(kind: image)).update(n => n - 1) }\n}\n\n#trans-linear(caption: none)\n#trans-linear(caption: \"Homegeneity\")\n```\n\n![image|306x134, 75%](upload://a05FWA0cDiR6jTxmuzXUGmNvI6m.png)\n\nI just don't know about the kind. If it's just the standard `image` kind, then it's all should be good, otherwise you might need some additional tweaking.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 15,
      "score": 23.0,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12649,
      "post_number": 9,
      "username": "ivaquero",
      "name": "ivaquero",
      "created_at": "2025-05-17T05:19:23.061Z",
      "updated_at": "2025-05-17T07:27:56.655Z",
      "cooked": "<p><a class=\"mention\" href=\"/u/andrew\">@Andrew</a>, thank you for your investigation, it gives me some helpful hints.</p>\n<p>I solved the problem by counting a different kind</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let trans-linear(\n  x,\n  y,\n  y2,\n  ylim-base,\n  kind: image,\n  supplement: \"Figure\",\n  caption: none,\n  width: 100pt,\n  column: 60pt,\n  gutter: 50pt,\n) = {\n  sgrid(\n    lq.diagram(\n      width: width,\n      height: width * .5,\n      lq.plot(x, y, mark: none),\n      xlim: (x.at(0), x.at(-1)),\n      ylim: (ylim-base.at(0), ylim-base.at(-1) + ylim-base.at(-1) / 10),\n      xaxis: (position: 0, tip: none, ticks: none),\n      yaxis: (position: 0, tip: none, filter: peak),\n    ),\n    lq.diagram(\n      width: width,\n      height: width * .5,\n      lq.place(x.at(-1) * .5, y.at(-1) * .5)[$h(x)$],\n      lq.rect(\n        x.at(-1) * .3,\n        y.at(-1) * .3,\n        width: x.at(-1) * .4,\n        height: y.at(-1) * .4,\n      ),\n      lq.line(\n        tip: tiptoe.stealth,\n        (x.at(-1) * .7, y.at(-1) * .5),\n        (x.at(-1) * .9, y.at(-1) * .5),\n      ),\n      lq.line(\n        tip: tiptoe.stealth,\n        (x.at(-1) * .1, y.at(-1) * .5),\n        (x.at(-1) * .3, y.at(-1) * .5),\n      ),\n      xlim: (x.at(0), x.at(-1)),\n      ylim: (y.at(0), y.at(-1) + y.at(-1) / 10),\n      xaxis: (stroke: none, ticks: none),\n      yaxis: (stroke: none, ticks: none),\n    ),\n    lq.diagram(\n      width: width,\n      height: width * .5,\n      lq.plot(x, y2, mark: none),\n      xlim: (x.at(0), x.at(-1)),\n      ylim: (ylim-base.at(0), ylim-base.at(-1) + ylim-base.at(-1) / 10),\n      xaxis: (position: 0, tip: none, ticks: none),\n      yaxis: (position: 0, tip: none, filter: peak),\n    ),\n    columns: (column,) * 3,\n    gutter: gutter,\n    kind: kind,\n    supplement: supplement,\n    caption: caption,\n  )\n  if caption == none { counter(figure.where(kind: \"skip\")).update(n =&gt; n - 1) }\n}\n</code></pre>\n<p>then calling</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#trans-linear(\n  x,\n  y,\n  y2,\n  lq.vec.multiply(y2, 2),\n  kind: \"skip\",\n)\n#trans-linear(\n  x,\n  lq.vec.multiply(y, 2),\n  lq.vec.multiply(y2, 2),\n  lq.vec.multiply(y2, 2),\n  caption: \"Homegeneity\",\n)\n</code></pre>",
      "raw": "@Andrew, thank you for your investigation, it gives me some helpful hints. \n\nI solved the problem by counting a different kind\n\n```typst\n#let trans-linear(\n  x,\n  y,\n  y2,\n  ylim-base,\n  kind: image,\n  supplement: \"Figure\",\n  caption: none,\n  width: 100pt,\n  column: 60pt,\n  gutter: 50pt,\n) = {\n  sgrid(\n    lq.diagram(\n      width: width,\n      height: width * .5,\n      lq.plot(x, y, mark: none),\n      xlim: (x.at(0), x.at(-1)),\n      ylim: (ylim-base.at(0), ylim-base.at(-1) + ylim-base.at(-1) / 10),\n      xaxis: (position: 0, tip: none, ticks: none),\n      yaxis: (position: 0, tip: none, filter: peak),\n    ),\n    lq.diagram(\n      width: width,\n      height: width * .5,\n      lq.place(x.at(-1) * .5, y.at(-1) * .5)[$h(x)$],\n      lq.rect(\n        x.at(-1) * .3,\n        y.at(-1) * .3,\n        width: x.at(-1) * .4,\n        height: y.at(-1) * .4,\n      ),\n      lq.line(\n        tip: tiptoe.stealth,\n        (x.at(-1) * .7, y.at(-1) * .5),\n        (x.at(-1) * .9, y.at(-1) * .5),\n      ),\n      lq.line(\n        tip: tiptoe.stealth,\n        (x.at(-1) * .1, y.at(-1) * .5),\n        (x.at(-1) * .3, y.at(-1) * .5),\n      ),\n      xlim: (x.at(0), x.at(-1)),\n      ylim: (y.at(0), y.at(-1) + y.at(-1) / 10),\n      xaxis: (stroke: none, ticks: none),\n      yaxis: (stroke: none, ticks: none),\n    ),\n    lq.diagram(\n      width: width,\n      height: width * .5,\n      lq.plot(x, y2, mark: none),\n      xlim: (x.at(0), x.at(-1)),\n      ylim: (ylim-base.at(0), ylim-base.at(-1) + ylim-base.at(-1) / 10),\n      xaxis: (position: 0, tip: none, ticks: none),\n      yaxis: (position: 0, tip: none, filter: peak),\n    ),\n    columns: (column,) * 3,\n    gutter: gutter,\n    kind: kind,\n    supplement: supplement,\n    caption: caption,\n  )\n  if caption == none { counter(figure.where(kind: \"skip\")).update(n => n - 1) }\n}\n```\n\nthen calling\n\n```typst\n#trans-linear(\n  x,\n  y,\n  y2,\n  lq.vec.multiply(y2, 2),\n  kind: \"skip\",\n)\n#trans-linear(\n  x,\n  lq.vec.multiply(y, 2),\n  lq.vec.multiply(y2, 2),\n  lq.vec.multiply(y2, 2),\n  caption: \"Homegeneity\",\n)\n```",
      "reply_to_post_number": 8,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 13,
      "score": 17.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1204
    }
  ],
  "scraped_at": "2025-06-10T09:47:47.535718"
}