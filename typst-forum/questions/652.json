{
  "topic_metadata": {
    "id": 652,
    "title": "How can I instantiate a dictionary with a variable key name?",
    "slug": "how-can-i-instantiate-a-dictionary-with-a-variable-key-name",
    "posts_count": 4,
    "created_at": "2024-09-24T20:24:18.546Z",
    "last_posted_at": "2024-09-25T09:38:40.067Z",
    "views": 374,
    "like_count": 4,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 3,
    "accepted_answer_username": "SillyFreak",
    "tags": [
      "scripting"
    ],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 453
  },
  "posts": [
    {
      "id": 2493,
      "post_number": 1,
      "username": "gezepi",
      "name": "",
      "created_at": "2024-09-24T20:24:18.728Z",
      "updated_at": "2024-09-25T08:07:08.069Z",
      "cooked": "<p>I feel like I’m missing something obvious, but for all my looking and attempts I haven’t been able to find the answer.</p>\n<p>I am loading data from a text file and after some processing adding it to a dictionary.  I want a dictionary where the keys are user names and the values are dictionaries describing the user.   On the docs page for dictionaries it shows how to create a dictionary with key value pairs:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let dict = (\n  name: \"Typst\",\n  born: 2019,\n)\n</code></pre>\n<p>But because the keys I will be using are variables I can’t type them in like this.</p>\n<p>Here are the methods I’ve tried.  Only the fourth version achieves what I want, however, I cant help but think there is a more elegant way of doing it.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let userName = \"joe\"\n#let userData = (birthday: 1, phone: 123)\n\n//Doesn't work - key is the name of the userName variable, not its value\n#let dict1 = (userName: userData)\n#dict1\n//(userName: (birthday: 1, phone: 123))\n\n//Error at 'userName'\n#let dict2 = dictionary(userName, userData)\n#dict2\n//expected module, found string\n\n//Error at 'userName'\n#let dict3 = ()\n#dict3.insert(userName, userData)\n#dict3\n//expected integer, found string\n\n//Works\n#let dict4 = (x: none)\n#dict4.insert(userName, userData)\n//Only remove if the value remains unchanged - shouldn't remove a user with \"x\" as a name\n#if dict4.at(\"x\") == none { dict4.remove(\"x\") }\n#dict4\n//(joe: (birthday: 1, phone: 123))\n</code></pre>\n<p>To give a bit more context, l am creating a variable that is set to <code>none</code>, then when I get my first user data I set that variable to a new dictionary.  Any further users are simply added to the existing dictionary with <code>.insert(keyName, value)</code>.</p>",
      "raw": "I feel like I'm missing something obvious, but for all my looking and attempts I haven't been able to find the answer.\n\nI am loading data from a text file and after some processing adding it to a dictionary.  I want a dictionary where the keys are user names and the values are dictionaries describing the user.   On the docs page for dictionaries it shows how to create a dictionary with key value pairs:\n```typ\n#let dict = (\n  name: \"Typst\",\n  born: 2019,\n)\n```\nBut because the keys I will be using are variables I can't type them in like this.\n\nHere are the methods I've tried.  Only the fourth version achieves what I want, however, I cant help but think there is a more elegant way of doing it.\n```typ\n#let userName = \"joe\"\n#let userData = (birthday: 1, phone: 123)\n\n//Doesn't work - key is the name of the userName variable, not its value\n#let dict1 = (userName: userData)\n#dict1\n//(userName: (birthday: 1, phone: 123))\n\n//Error at 'userName'\n#let dict2 = dictionary(userName, userData)\n#dict2\n//expected module, found string\n\n//Error at 'userName'\n#let dict3 = ()\n#dict3.insert(userName, userData)\n#dict3\n//expected integer, found string\n\n//Works\n#let dict4 = (x: none)\n#dict4.insert(userName, userData)\n//Only remove if the value remains unchanged - shouldn't remove a user with \"x\" as a name\n#if dict4.at(\"x\") == none { dict4.remove(\"x\") }\n#dict4\n//(joe: (birthday: 1, phone: 123))\n```\n\nTo give a bit more context, l am creating a variable that is set to `none`, then when I get my first user data I set that variable to a new dictionary.  Any further users are simply added to the existing dictionary with `.insert(keyName, value)`.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 43,
      "score": 1923.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 326
    },
    {
      "id": 2495,
      "post_number": 2,
      "username": "gezepi",
      "name": "",
      "created_at": "2024-09-24T20:33:35.244Z",
      "updated_at": "2024-09-25T08:07:19.321Z",
      "cooked": "<p>While editing my initial post I found another way which provides the correct result.  It still doesn’t answer the question of how to create a dictionary with a variable key name, however.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let userName = \"joe\"\n#let userData = (birthday: 1, phone: 123)\n\n//Works\n#let dict5 = (:)\n#dict5.insert(userName, userData)\n#dict5\n//(joe: (birthday: 1, phone: 123))\n</code></pre>",
      "raw": "While editing my initial post I found another way which provides the correct result.  It still doesn't answer the question of how to create a dictionary with a variable key name, however.\n\n```typ\n#let userName = \"joe\"\n#let userData = (birthday: 1, phone: 123)\n\n//Works\n#let dict5 = (:)\n#dict5.insert(userName, userData)\n#dict5\n//(joe: (birthday: 1, phone: 123))\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 36,
      "score": 17.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 326
    },
    {
      "id": 2496,
      "post_number": 3,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2024-09-24T20:38:31.689Z",
      "updated_at": "2024-09-24T20:40:51.086Z",
      "cooked": "<p>You’re looking for this syntax:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let userName = \"joe\"\n#let userData = (birthday: 1, phone: 123)\n\n#let dict1 = ((userName): userData)\n#dict1\n</code></pre>\n<p>This is not really special syntax, it’s just a parenthesized expression. As you’ve seen, a bare identifier will be directly used as the key – but any other expression will be evaluated to get the key. By putting the identifier in parentheses, you make sure that a variable access is performed.</p>",
      "raw": "You're looking for this syntax:\n```typ\n#let userName = \"joe\"\n#let userData = (birthday: 1, phone: 123)\n\n#let dict1 = ((userName): userData)\n#dict1\n```\nThis is not really special syntax, it's just a parenthesized expression. As you've seen, a bare identifier will be directly used as the key -- but any other expression will be evaluated to get the key. By putting the identifier in parentheses, you make sure that a variable access is performed.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 3,
      "reads": 35,
      "score": 87.0,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 2533,
      "post_number": 4,
      "username": "gezepi",
      "name": "",
      "created_at": "2024-09-25T09:38:40.067Z",
      "updated_at": "2024-09-25T09:38:40.067Z",
      "cooked": "<p>Thanks, that’s what I was missing.  So this uses a similar syntax when you have a function defined as the value of a dictionary:</p>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">#let funcs = (\"add1\": x =&gt; x + 1)\n#funcs.add1(0) //Doesn't work\n#(funcs.add1)(0) //Works\n</code></pre>\n<p>Thanks for the help!</p>",
      "raw": "Thanks, that's what I was missing.  So this uses a similar syntax when you have a function defined as the value of a dictionary:\n```typc\n#let funcs = (\"add1\": x => x + 1)\n#funcs.add1(0) //Doesn't work\n#(funcs.add1)(0) //Works\n```\n\nThanks for the help!",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 30,
      "score": 71.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 326
    }
  ],
  "scraped_at": "2025-06-10T09:58:08.324895"
}