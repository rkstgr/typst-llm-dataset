{
  "topic_metadata": {
    "id": 4020,
    "title": "How to define a color gradient over multiple paragraphs?",
    "slug": "how-to-define-a-color-gradient-over-multiple-paragraphs",
    "posts_count": 3,
    "created_at": "2025-05-10T23:59:24.433Z",
    "last_posted_at": "2025-05-13T18:49:31.014Z",
    "views": 58,
    "like_count": 2,
    "reply_count": 0,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "Andrew",
    "tags": [
      "styling"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 711
  },
  "posts": [
    {
      "id": 12239,
      "post_number": 1,
      "username": "AprilGrimoire",
      "name": "AprilGrimoire",
      "created_at": "2025-05-10T23:59:24.836Z",
      "updated_at": "2025-05-12T06:49:11.112Z",
      "cooked": "<p>Hi.</p>\n<p>Here is an example given in <a href=\"https://typst.app/universe/package/derive-it/\">derive-it</a>:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/2/2ec8db8c4210ab5863ea39c7233bc47744bb6298.png\" data-download-href=\"https://forum.typst.app/uploads/default/2ec8db8c4210ab5863ea39c7233bc47744bb6298\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/2/2ec8db8c4210ab5863ea39c7233bc47744bb6298_2_690x411.png\" alt=\"image\" data-base62-sha1=\"6FSixFS3hyJbQOO4Apl9iPZgj5C\" width=\"690\" height=\"411\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/2/2ec8db8c4210ab5863ea39c7233bc47744bb6298_2_690x411.png, https://forum.typst.app/uploads/default/optimized/2X/2/2ec8db8c4210ab5863ea39c7233bc47744bb6298_2_1035x616.png 1.5x, https://forum.typst.app/uploads/default/original/2X/2/2ec8db8c4210ab5863ea39c7233bc47744bb6298.png 2x\" data-dominant-color=\"FAF9FA\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">1045×623 135 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>The color looks cool, but different texts have their individual color gradients. How to achieve the effect of a total overall color gradient independent of what text part some character belongs to?</p>\n<p>Thanks!</p>",
      "raw": "Hi.\n\nHere is an example given in [derive-it](https://typst.app/universe/package/derive-it/):\n\n![image|690x411](upload://6FSixFS3hyJbQOO4Apl9iPZgj5C.png)\n\nThe color looks cool, but different texts have their individual color gradients. How to achieve the effect of a total overall color gradient independent of what text part some character belongs to?\n\nThanks!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 25,
      "score": 20.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1309
    },
    {
      "id": 12250,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-11T11:58:58.489Z",
      "updated_at": "2025-05-13T19:51:00.333Z",
      "cooked": "<p>Hi, do you want this?</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set par(justify: true)\n#set text(gradient.linear(red, blue, angle: 45deg))\n#range(11).map(_ =&gt; lorem(55)).intersperse(parbreak()).join()\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/9/95907fd294bc091dc74fad73511a66735b4c3be9.png\" data-download-href=\"https://forum.typst.app/uploads/default/95907fd294bc091dc74fad73511a66735b4c3be9\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/9/95907fd294bc091dc74fad73511a66735b4c3be9_2_167x250.png\" alt=\"image\" data-base62-sha1=\"ll6JlDgu8VoATpC5z4mDomRc1hn\" width=\"167\" height=\"250\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/9/95907fd294bc091dc74fad73511a66735b4c3be9_2_167x250.png, https://forum.typst.app/uploads/default/optimized/2X/9/95907fd294bc091dc74fad73511a66735b4c3be9_2_250x375.png 1.5x, https://forum.typst.app/uploads/default/optimized/2X/9/95907fd294bc091dc74fad73511a66735b4c3be9_2_334x500.png 2x\" data-dominant-color=\"221E22\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">589×878 387 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://typst.app/docs/reference/visualize/gradient/#relativeness\">\n  <header class=\"source\">\n      <img src=\"https://forum.typst.app/uploads/default/original/1X/098187a593d51c4db99324614e2baeeb1bb355cc.png\" class=\"site-icon\" data-dominant-color=\"3CA8B6\" width=\"32\" height=\"32\">\n\n      <a href=\"https://typst.app/docs/reference/visualize/gradient/#relativeness\" target=\"_blank\" rel=\"noopener\">Typst</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/361;\"><img src=\"https://forum.typst.app/uploads/default/optimized/1X/db1c18ed802fe6841bee62606931f352da10ed09_2_690x362.png\" class=\"thumbnail\" data-dominant-color=\"7CC2C5\" width=\"690\" height=\"362\"></div>\n\n<h3><a href=\"https://typst.app/docs/reference/visualize/gradient/#relativeness\" target=\"_blank\" rel=\"noopener\">Gradient Type – Typst Documentation</a></h3>\n\n  <p>Documentation for the Gradient type.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<hr>\n<p>The package uses a lot of containers, so, if you remove most of them:</p>\n<details><summary>Code</summary>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">    let index = [#(i+1).]\n\n    let tmpWidth = 0pt\n    let dependency = \"\"\n    if hasDependencies {\n      dependency = text(style: \"italic\", weight: \"regular\", [#dep])\n      tmpWidth = measure[#dependency #index #bl].width\n    } else {\n      tmpWidth = measure[#index #bl].width\n    }\n\n    if tmpWidth &gt; maxWidth {\n      maxWidth = tmpWidth\n    }\n\n    let ins = if indent == 0 {(x: 0pt, y: 0.5em)} else {(x: 0pt, y: 0pt)}\n    let numInset = if indent == 0 {(x: 0pt, y: 0.0pt)} else {(x: 0pt, y: 5pt)}\n\n    let line = \"\"\n    if hasDependencies {\n      line = [#[#dependency #index] #bl]\n    }\n\n    tupArr.push((line, rule))\n  }\n  tupArr = tupArr.map(a =&gt; [#box(width: maxWidth + 0em, a.at(0)) #h(1em) #a.at(1)])\n\n  text(weight: \"bold\",\n    block(\n      align(start,\n        stack(dir: ttb, spacing: 1em, ..tupArr)\n      )\n    )\n  )\n</code></pre>\n</details>\n<p>Then it looks more or less correct:</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/8/814f8143cb777a90b095c44d54b766498cb92312.png\" alt=\"image\" data-base62-sha1=\"irVVNwnfXgwr0CzpAbEZOwMMdGO\" width=\"190\" height=\"211\"></p>\n<p>If all boxes are removed from <code>ded-nat()</code>, then you can get a single source of gradient color:</p>\n<details><summary>Code</summary>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let ded-nat(stcolor: black, arr: array) = context {\n  let strart = (top: 0em, right: 0em, bottom: 0em, left: 1pt + stcolor)\n  let strend = (\n    top: 0em,\n    right: 0em,\n    bottom: 1pt + stcolor,\n    left: 1pt + stcolor,\n  )\n\n  // check if the first line's array has 4 items (w/dependencies) or not\n  let (hasDependencies, lineSize) = if arr.at(0).len() == 4 { (true, 4) } else {\n    (false, 3)\n  }\n\n  let maxDepWidth = if hasDependencies {\n    arr.fold(0pt, (accum, it) =&gt; {\n      let sz = measure[#it.at(0)].width\n      if sz &gt; accum { sz } else { accum }\n    })\n  } else {\n    0pt\n  }\n\n  let maxWidth = 0pt\n  let tupArr = ()\n\n  for (i, line) in arr.enumerate(start: 0) {\n    if i == 0 {\n      derive-it-internal-validate-line(line, i + 1)\n    }\n\n    let (dep, indent, formula, rule) = if hasDependencies {\n      line\n    } else {\n      (\"\", line.at(0), line.at(1), line.at(2))\n    }\n\n\n    let isLastIndented = (\n      (arr.len() &gt; i + 1)\n        and (\n          {\n            let ix = if hasDependencies { 1 } else { 0 }\n            let next-line = arr.at(i + 1)\n            derive-it-internal-validate-line(\n              next-line,\n              i + 1,\n              line-size: lineSize,\n            )\n            next-line.at(ix)\n          }\n            &lt; indent\n        )\n    )\n\n    let bl = formula\n\n    for i in range(0, indent) {\n      let inset = if i != 0 { 0pt } else { 0pt }\n\n      let str = if i == 0 and isLastIndented {\n        strend\n      } else { strart }\n\n      if indent &gt; 0 and i &lt; indent - 1 {\n        inset = -5pt\n      }\n    }\n    let index = [#(i + 1).]\n\n    let tmpWidth = 0pt\n    let dependency = \"\"\n    if hasDependencies {\n      dependency = text(style: \"italic\", weight: \"regular\", [#dep])\n      tmpWidth = measure[#dependency #index #bl].width\n    } else {\n      tmpWidth = measure[#index #bl].width\n    }\n\n    if tmpWidth &gt; maxWidth {\n      maxWidth = tmpWidth\n    }\n\n    let ins = if indent == 0 { (x: 0pt, y: 0.5em) } else { (x: 0pt, y: 0pt) }\n    let numInset = if indent == 0 { (x: 0pt, y: 0.0pt) } else {\n      (x: 0pt, y: 5pt)\n    }\n\n    tupArr.push(([#dependency #index #bl], rule))\n  }\n  tupArr = tupArr.map(a =&gt; [#a.at(0) #h(1em) #a.at(1)])\n\n  text(weight: \"bold\", align(start, stack(dir: ttb, spacing: 1em, ..tupArr)))\n}\n</code></pre>\n</details>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/derive-it:0.1.3\": *\n\n#set text(weight: \"bold\", fill: gradient.linear(red, blue, angle: 45deg))\n#ded-nat-boxed(stcolor: gradient.linear(red, blue), arr: (\n  (\"1\", 0, $forall x (P x) and forall x (Q x)$, \"PR\"),\n  (\"2\", 0, $forall x (P x -&gt; R x)$, \"PR\"),\n  (\"1\", 0, $forall x (P x)$, \"S 1\"),\n  (\"1\", 0, $P a$, \"IU 3\"),\n  (\"2\", 0, $P a -&gt; R a$, \"IU 2\"),\n  (\"1,2\", 0, $R a$, \"MP 4, 5\"),\n  (\"1,2\", 0, $forall x (R x)$, \"GU 6\"),\n))\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/7/767913fca88978095c73f04ccbc1d30277858794.png\" alt=\"image\" data-base62-sha1=\"gU3KvlutfRFTTY6u72i9b4SFiio\" width=\"201\" height=\"259\"></p>\n<p>So, you either fork it, or ask author for gradient to be able to be uniform.</p>",
      "raw": "Hi, do you want this?\n\n```typ\n#set par(justify: true)\n#set text(gradient.linear(red, blue, angle: 45deg))\n#range(11).map(_ => lorem(55)).intersperse(parbreak()).join()\n```\n\n![image|335x500, 50%](upload://ll6JlDgu8VoATpC5z4mDomRc1hn.png)\n\nhttps://typst.app/docs/reference/visualize/gradient/#relativeness\n\n---\n\nThe package uses a lot of containers, so, if you remove most of them:\n\n<details><summary>Code</summary>\n\n```typc\n    let index = [#(i+1).]\n\n    let tmpWidth = 0pt\n    let dependency = \"\"\n    if hasDependencies {\n      dependency = text(style: \"italic\", weight: \"regular\", [#dep])\n      tmpWidth = measure[#dependency #index #bl].width\n    } else {\n      tmpWidth = measure[#index #bl].width\n    }\n\n    if tmpWidth > maxWidth {\n      maxWidth = tmpWidth\n    }\n\n    let ins = if indent == 0 {(x: 0pt, y: 0.5em)} else {(x: 0pt, y: 0pt)}\n    let numInset = if indent == 0 {(x: 0pt, y: 0.0pt)} else {(x: 0pt, y: 5pt)}\n\n    let line = \"\"\n    if hasDependencies {\n      line = [#[#dependency #index] #bl]\n    }\n\n    tupArr.push((line, rule))\n  }\n  tupArr = tupArr.map(a => [#box(width: maxWidth + 0em, a.at(0)) #h(1em) #a.at(1)])\n\n  text(weight: \"bold\",\n    block(\n      align(start,\n        stack(dir: ttb, spacing: 1em, ..tupArr)\n      )\n    )\n  )\n```\n\n</details>\n\nThen it looks more or less correct:\n\n![image|380x422, 50%](upload://irVVNwnfXgwr0CzpAbEZOwMMdGO.png)\n\nIf all boxes are removed from `ded-nat()`, then you can get a single source of gradient color:\n\n<details><summary>Code</summary>\n\n```typ\n#let ded-nat(stcolor: black, arr: array) = context {\n  let strart = (top: 0em, right: 0em, bottom: 0em, left: 1pt + stcolor)\n  let strend = (\n    top: 0em,\n    right: 0em,\n    bottom: 1pt + stcolor,\n    left: 1pt + stcolor,\n  )\n\n  // check if the first line's array has 4 items (w/dependencies) or not\n  let (hasDependencies, lineSize) = if arr.at(0).len() == 4 { (true, 4) } else {\n    (false, 3)\n  }\n\n  let maxDepWidth = if hasDependencies {\n    arr.fold(0pt, (accum, it) => {\n      let sz = measure[#it.at(0)].width\n      if sz > accum { sz } else { accum }\n    })\n  } else {\n    0pt\n  }\n\n  let maxWidth = 0pt\n  let tupArr = ()\n\n  for (i, line) in arr.enumerate(start: 0) {\n    if i == 0 {\n      derive-it-internal-validate-line(line, i + 1)\n    }\n\n    let (dep, indent, formula, rule) = if hasDependencies {\n      line\n    } else {\n      (\"\", line.at(0), line.at(1), line.at(2))\n    }\n\n\n    let isLastIndented = (\n      (arr.len() > i + 1)\n        and (\n          {\n            let ix = if hasDependencies { 1 } else { 0 }\n            let next-line = arr.at(i + 1)\n            derive-it-internal-validate-line(\n              next-line,\n              i + 1,\n              line-size: lineSize,\n            )\n            next-line.at(ix)\n          }\n            < indent\n        )\n    )\n\n    let bl = formula\n\n    for i in range(0, indent) {\n      let inset = if i != 0 { 0pt } else { 0pt }\n\n      let str = if i == 0 and isLastIndented {\n        strend\n      } else { strart }\n\n      if indent > 0 and i < indent - 1 {\n        inset = -5pt\n      }\n    }\n    let index = [#(i + 1).]\n\n    let tmpWidth = 0pt\n    let dependency = \"\"\n    if hasDependencies {\n      dependency = text(style: \"italic\", weight: \"regular\", [#dep])\n      tmpWidth = measure[#dependency #index #bl].width\n    } else {\n      tmpWidth = measure[#index #bl].width\n    }\n\n    if tmpWidth > maxWidth {\n      maxWidth = tmpWidth\n    }\n\n    let ins = if indent == 0 { (x: 0pt, y: 0.5em) } else { (x: 0pt, y: 0pt) }\n    let numInset = if indent == 0 { (x: 0pt, y: 0.0pt) } else {\n      (x: 0pt, y: 5pt)\n    }\n\n    tupArr.push(([#dependency #index #bl], rule))\n  }\n  tupArr = tupArr.map(a => [#a.at(0) #h(1em) #a.at(1)])\n\n  text(weight: \"bold\", align(start, stack(dir: ttb, spacing: 1em, ..tupArr)))\n}\n```\n\n</details>\n\n```typ\n#import \"@preview/derive-it:0.1.3\": *\n\n#set text(weight: \"bold\", fill: gradient.linear(red, blue, angle: 45deg))\n#ded-nat-boxed(stcolor: gradient.linear(red, blue), arr: (\n  (\"1\", 0, $forall x (P x) and forall x (Q x)$, \"PR\"),\n  (\"2\", 0, $forall x (P x -> R x)$, \"PR\"),\n  (\"1\", 0, $forall x (P x)$, \"S 1\"),\n  (\"1\", 0, $P a$, \"IU 3\"),\n  (\"2\", 0, $P a -> R a$, \"IU 2\"),\n  (\"1,2\", 0, $R a$, \"MP 4, 5\"),\n  (\"1,2\", 0, $forall x (R x)$, \"GU 6\"),\n))\n```\n\n![image|201x259](upload://gU3KvlutfRFTTY6u72i9b4SFiio.png)\n\nSo, you either fork it, or ask author for gradient to be able to be uniform.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 24,
      "score": 64.8,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12401,
      "post_number": 3,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-05-13T18:49:31.014Z",
      "updated_at": "2025-05-13T18:49:31.014Z",
      "cooked": "<p>Hi <a class=\"mention\" href=\"/u/aprilgrimoire\">@AprilGrimoire</a>, thanks for your question! If you feel the response you got has sufficiently answered your question, be sure to give it a checkmark <img src=\"https://forum.typst.app/images/emoji/apple/ballot_box_with_check.png?v=12\" title=\":ballot_box_with_check:\" class=\"emoji\" alt=\":ballot_box_with_check:\" loading=\"lazy\" width=\"20\" height=\"20\">. This will help others find the solution in the future. If something is missing, please let us know what so we can resolve your issue. Thanks!</p>",
      "raw": "Hi @AprilGrimoire, thanks for your question! If you feel the response you got has sufficiently answered your question, be sure to give it a checkmark :ballot_box_with_check:. This will help others find the solution in the future. If something is missing, please let us know what so we can resolve your issue. Thanks!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 14,
      "score": 2.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    }
  ],
  "scraped_at": "2025-06-10T09:48:04.585724"
}