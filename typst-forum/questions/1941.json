{
  "topic_metadata": {
    "id": 1941,
    "title": "How to use arguments with hyphens in math mode",
    "slug": "how-to-use-arguments-with-hyphens-in-math-mode",
    "posts_count": 5,
    "created_at": "2024-12-01T23:53:26.000Z",
    "last_posted_at": "2024-12-07T20:38:59.211Z",
    "views": 162,
    "like_count": 5,
    "reply_count": 2,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "sCarton",
    "tags": [
      "math"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 234
  },
  "posts": [
    {
      "id": 6220,
      "post_number": 1,
      "username": "miles-1",
      "name": "miles",
      "created_at": "2024-12-01T23:53:26.117Z",
      "updated_at": "2024-12-01T23:53:26.117Z",
      "cooked": "<p>How can you use arguments with hyphens in math mode? E.g.,</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">$mat(1, 2, 3; 4, 5, 6; delim:\"[\")$ // works\n$mat(1, 2, 3; 4, 5, 6; column-gap: #2pt)$ // does not work\n</code></pre>\n<p>The issue here is of course the hyphen being interpreted as a minus sign. I realize that you can set arguments like <code>column-gap</code> beforehand, but this is somewhat tedious if you want to change the value of this parameter for just a single use of <code>mat</code> amongst many.</p>\n<p>For variables with hyphens or underscores, you can use <code>#</code> in math mode:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let this-variable = 5\n$ (#this-variable - a) / b $\n</code></pre>\n<p>…but this approach does not work for arguments:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">$mat(1, 2, 3; 4, 5, 6; #column-gap: #2pt)$ // does not work\n</code></pre>",
      "raw": "How can you use arguments with hyphens in math mode? E.g.,\n\n```typst\n$mat(1, 2, 3; 4, 5, 6; delim:\"[\")$ // works\n$mat(1, 2, 3; 4, 5, 6; column-gap: #2pt)$ // does not work\n```\n\nThe issue here is of course the hyphen being interpreted as a minus sign. I realize that you can set arguments like `column-gap` beforehand, but this is somewhat tedious if you want to change the value of this parameter for just a single use of `mat` amongst many.\n\nFor variables with hyphens or underscores, you can use `#` in math mode:\n\n```typst\n#let this-variable = 5\n$ (#this-variable - a) / b $\n```\n\n...but this approach does not work for arguments:\n\n```typst\n$mat(1, 2, 3; 4, 5, 6; #column-gap: #2pt)$ // does not work\n```",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 42,
      "score": 383.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 177
    },
    {
      "id": 6323,
      "post_number": 2,
      "username": "sCarton",
      "name": "",
      "created_at": "2024-12-04T12:54:42.117Z",
      "updated_at": "2024-12-04T12:57:55.948Z",
      "cooked": "<p>I used the hashtag to invoke the function explicitly:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">$#math.mat(column-gap: 2pt, (1, 2, 3), (4, 5, 6))$\n</code></pre>\n<p>This workaround does lose some flexibility afforded to the maths mode.</p>",
      "raw": "I used the hashtag to invoke the function explicitly:\n\n```typst\n$#math.mat(column-gap: 2pt, (1, 2, 3), (4, 5, 6))$\n```\n\nThis workaround does lose some flexibility afforded to the maths mode.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 38,
      "score": 42.6,
      "accepted_answer": true,
      "trust_level": 1,
      "user_id": 162
    },
    {
      "id": 6407,
      "post_number": 3,
      "username": "miles-1",
      "name": "miles",
      "created_at": "2024-12-07T17:17:33.875Z",
      "updated_at": "2024-12-07T17:17:33.875Z",
      "cooked": "<p>Your answer seems to be the closest thing to a solution, so I will mark it as such, though I’m bummed there’s no way to use it directly without needing to use <code>#</code>.</p>",
      "raw": "Your answer seems to be the closest thing to a solution, so I will mark it as such, though I'm bummed there's no way to use it directly without needing to use `#`.",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 26,
      "score": 10.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 177
    },
    {
      "id": 6408,
      "post_number": 4,
      "username": "sCarton",
      "name": "",
      "created_at": "2024-12-07T17:42:29.295Z",
      "updated_at": "2024-12-07T17:42:29.295Z",
      "cooked": "<p>Indeed. Given the following is an example from the official documentation, what you’ve seen seems like a bug.</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">$ vec(1, 2, delim: \"[\") $\n</code></pre>",
      "raw": "Indeed. Given the following is an example from the official documentation, what you've seen seems like a bug.\n```typst\n$ vec(1, 2, delim: \"[\") $\n```",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 28,
      "score": 30.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 162
    },
    {
      "id": 6413,
      "post_number": 5,
      "username": "ian",
      "name": "Ian",
      "created_at": "2024-12-07T20:38:59.211Z",
      "updated_at": "2024-12-07T20:38:59.211Z",
      "cooked": "<p>This is actually in a PR right now by mkorje!</p><aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/typst/typst/pull/5008\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/typst/typst/pull/5008\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/typst/typst</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\" data-github-private-repo=\"false\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/typst/typst/pull/5008\" target=\"_blank\" rel=\"noopener nofollow ugc\">Better math argument parsing</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>typst:main</code> ← <code>mkorje:better-math-argument-parsing</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-09-23\" data-time=\"17:07:04\" data-timezone=\"UTC\">05:07PM - 23 Sep 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/mkorje\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"mkorje\" src=\"https://forum.typst.app/uploads/default/original/2X/5/531d9562e797b3b36df2251fd1f7ab939746dee4.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"857B6F\">\n            mkorje\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"1 commits changed 12 files with 380 additions and 121 deletions\">\n          <a href=\"https://github.com/typst/typst/pull/5008/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+380</span>\n            <span class=\"removed\">-121</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">This PR brings how math function call arguments are parsed more in line with how<span class=\"show-more-container\"><a href=\"https://github.com/typst/typst/pull/5008\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\"> they are parsed in code mode.\n\nNew things:\n- Closes #2052: Named arguments in math function calls can now be any identifier. This means it can contain hyphens and start with an underscore (as long as it isn't just an underscore), just like in code mode. For example, the below now works.\n  ```typ\n  #let func(my-body: none) = my-body\n\n  $ func(my-body: a) $\n  ```\n- Closes #938: Argument spreading now works in math function calls. Prefixing two dots `..` to a variable does the same as in code mode. You can escape the dots or add a space after them to get `..` verbatim. See the example below.\n  &lt;table&gt;\n  &lt;tr&gt;\n  &lt;td&gt; Code &lt;/td&gt; &lt;td&gt; Image &lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n  &lt;td&gt;\n\n  ```typ\n  #set page(width: 5cm, height: auto)\n\n  $\n    // Spreading the argument, so works.\n    mat(..#range(1, 5).chunks(2))\n    // Passed verbatim, so reprs the list.\n    mat(#(..range(2).map(_ =&gt; range(2))))\n  $\n\n  #let nums = ((1,) * 5).intersperse(0).chunks(3)\n  $ mat(..nums, delim: \"[\") $\n  ```\n\n  &lt;/td&gt;\n  &lt;td&gt;\n\n  \n  ![math](https://github.com/user-attachments/assets/07362233-da6a-4aa8-a971-b21e892161b6)\n\n  &lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;/table&gt;\n- Duplicate named arguments error: The below now gives an error, instead of silently overriding the previous instance of the named argument given.\n  ```typ\n  #let func(my: none) = my\n  // Error: 15-17 duplicate argument: my\n  $ func(my: a, my: b) $\n  ```\n\nThese changes don't conflict with #4364 majorly. Some things, like the new lex modes, might end up a bit cleaner with the changes from #4364 I think. Also, these changes are somewhat isolated; only a little (ish) has spread outside of math argument parsing to the rest of the math parsing code. Nothing else has changed with regards to math parsing (at least I hope so, all of the tests have passed which is promising). Only one test was updated to test `column-gap` and `row-gap` being used directly in matrices.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n",
      "raw": "This is actually in a PR right now by mkorje! \nhttps://github.com/typst/typst/pull/5008",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 26,
      "score": 25.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 25
    }
  ],
  "scraped_at": "2025-06-10T09:54:13.770904"
}