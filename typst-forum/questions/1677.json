{
  "topic_metadata": {
    "id": 1677,
    "title": "How to blend a color with an image and make the image transparent?",
    "slug": "how-to-blend-a-color-with-an-image-and-make-the-image-transparent",
    "posts_count": 7,
    "created_at": "2024-11-11T19:06:47.408Z",
    "last_posted_at": "2024-11-12T11:24:07.416Z",
    "views": 569,
    "like_count": 1,
    "reply_count": 4,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 5,
    "accepted_answer_username": "Eric",
    "tags": [],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 512
  },
  "posts": [
    {
      "id": 5503,
      "post_number": 1,
      "username": "AhmedSalih",
      "name": "",
      "created_at": "2024-11-11T19:06:47.498Z",
      "updated_at": "2024-11-11T19:06:47.498Z",
      "cooked": "<p>Hello!</p>\n<p>I am unsure where to start with a MWE, but suppose I want to take an image and do the following operations:</p>\n<ol>\n<li>‘Multiply’ it with a color (let’s say blue) so that a picture of a sunset gets a bluish tint</li>\n<li>Make the image transparent, how do I control the opacity of the <code>image</code> function?</li>\n</ol>\n<p>Kind regards</p>",
      "raw": "Hello!\n\nI am unsure where to start with a MWE, but suppose I want to take an image and do the following operations:\n\n1. 'Multiply' it with a color (let's say blue) so that a picture of a sunset gets a bluish tint\n2. Make the image transparent, how do I control the opacity of the `image` function?\n\nKind regards",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 47,
      "score": 2899.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 786
    },
    {
      "id": 5506,
      "post_number": 2,
      "username": "LordBaryhobal",
      "name": "Baryhobal",
      "created_at": "2024-11-11T20:05:14.209Z",
      "updated_at": "2024-11-11T20:05:14.209Z",
      "cooked": "<p>I don’t think you can currently modify the opacity of an image<br>\nA workaround I have used though is overlaying it with a filled box (this works both for “decreasing the opacity” - i.e. overlaying a semi-transparent white box - and for “mixing a color” - i.e. a semi-transparent box fill with another color)</p>",
      "raw": "I don't think you can currently modify the opacity of an image\nA workaround I have used though is overlaying it with a filled box (this works both for \"decreasing the opacity\" - i.e. overlaying a semi-transparent white box - and for \"mixing a color\" - i.e. a semi-transparent box fill with another color)",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 46,
      "score": 24.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 585
    },
    {
      "id": 5507,
      "post_number": 3,
      "username": "AhmedSalih",
      "name": "",
      "created_at": "2024-11-11T20:07:29.753Z",
      "updated_at": "2024-11-11T20:07:29.753Z",
      "cooked": "<p>Do you happen to have a simple example of that you can share? :)</p>",
      "raw": "Do you happen to have a simple example of that you can share? :)",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 43,
      "score": 13.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 786
    },
    {
      "id": 5510,
      "post_number": 4,
      "username": "LordBaryhobal",
      "name": "Baryhobal",
      "created_at": "2024-11-11T20:24:26.936Z",
      "updated_at": "2024-11-11T20:24:26.936Z",
      "cooked": "<p>A very hacky way of doing it:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let overlay(img, color) = context {\n  let m = measure(img)\n  stack(\n    img,\n    move(\n      dy: -m.height,\n      box(width: m.width, height: m.height, fill: color)\n    )\n  )\n}\n#overlay(my-image, red.transparentize(50%))\n</code></pre>\n<p>I’d be very interested to see if someone else can come up with a better solution</p>",
      "raw": "A very hacky way of doing it:\n```typ\n#let overlay(img, color) = context {\n  let m = measure(img)\n  stack(\n    img,\n    move(\n      dy: -m.height,\n      box(width: m.width, height: m.height, fill: color)\n    )\n  )\n}\n#overlay(my-image, red.transparentize(50%))\n```\nI'd be very interested to see if someone else can come up with a better solution",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 42,
      "score": 28.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 585
    },
    {
      "id": 5515,
      "post_number": 5,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2024-11-11T20:44:12.857Z",
      "updated_at": "2024-11-11T20:44:12.857Z",
      "cooked": "<p>Two things I can note here:</p>\n<ul>\n<li>\n<p>If the image is larger than the container it is placed in, it is resized automatically to fit. However, this is by default not reflected in the measured size, as measuring happens on an unbounded canvas. I would recommend using the <a href=\"https://typst.app/docs/reference/layout/layout/\"><code>layout</code></a> function and passing the bounds in measure.</p>\n</li>\n<li>\n<p>By using <a href=\"https://typst.app/docs/reference/layout/place/\"><code>place</code></a>, you can simplify this quite a bit, as you can set the alignment to the top left of the parent block (here the <code>layout</code> element), so that you don’t need to move the box manually.</p>\n</li>\n</ul>\n<p>Other than that, the idea is the exact same :)</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let overlay(img, color) = layout(bounds =&gt; {\n  let size = measure(img, ..bounds)\n  img\n  place(top + left, block(..size, fill: color))\n})\n</code></pre>",
      "raw": "Two things I can note here:\n\n- If the image is larger than the container it is placed in, it is resized automatically to fit. However, this is by default not reflected in the measured size, as measuring happens on an unbounded canvas. I would recommend using the [`layout`](https://typst.app/docs/reference/layout/layout/) function and passing the bounds in measure.\n\n- By using [`place`](https://typst.app/docs/reference/layout/place/), you can simplify this quite a bit, as you can set the alignment to the top left of the parent block (here the `layout` element), so that you don't need to move the box manually.\n\nOther than that, the idea is the exact same :)\n\n```typ\n#let overlay(img, color) = layout(bounds => {\n  let size = measure(img, ..bounds)\n  img\n  place(top + left, block(..size, fill: color))\n})\n```",
      "reply_to_post_number": 4,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 42,
      "score": 273.4,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 5517,
      "post_number": 6,
      "username": "LordBaryhobal",
      "name": "Baryhobal",
      "created_at": "2024-11-11T21:03:42.243Z",
      "updated_at": "2024-11-11T21:03:42.243Z",
      "cooked": "<p>I thought it would probably involve the <code>layout</code> function but I didn’t know about passing the bounds to <code>measure</code><br>\nThanks for the explanation <img src=\"https://forum.typst.app/images/emoji/apple/+1.png?v=12\" title=\":+1:\" class=\"emoji\" alt=\":+1:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "I thought it would probably involve the `layout` function but I didn't know about passing the bounds to `measure`\nThanks for the explanation :+1:",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 36,
      "score": 27.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 585
    },
    {
      "id": 5536,
      "post_number": 7,
      "username": "Marco",
      "name": "Marco",
      "created_at": "2024-11-12T11:24:07.416Z",
      "updated_at": "2024-11-12T17:17:55.709Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"AhmedSalih\" data-post=\"1\" data-topic=\"1677\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/a/2DAB7D/48.png\" class=\"avatar\"> AhmedSalih:</div>\n<blockquote>\n<ol start=\"2\">\n<li>Make the image transparent, how do I control the opacity of the <code>image</code> function?</li>\n</ol>\n</blockquote>\n</aside>\n<p>When looking for similar functionality i came accross this question and later on a package that seems to do what you were looking for.</p>\n<p>Transparancy is not supported by Typst directly, but the package <a href=\"https://typst.app/universe/package/grayness/\">grayness</a> supports parsing of images and performing operations on the image.<br>\nOne of the operations is transparent image.</p>\n<p>I created this example:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#import \"@preview/grayness:0.2.0\": *\n\n#let data = read(\"nadine-e-ZPP-zP8HYG0-unsplash.jpg\", encoding:none)\n#transparent-image(data,alpha:75%)\n\n#block(fill:gradient.linear(red, blue, angle: 45deg).sharp(2),inset:1cm, transparent-image(data,alpha:75%)) \n</code></pre>\n<p>Photo by <a href=\"https://unsplash.com/photos/round-white-led-light-ZPP-zP8HYG0\" rel=\"noopener nofollow ugc\">Nadine E on Unsplash</a>.</p>\n<p>That results is the following:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/5/559c3215e4dc9686e2bd73b834e3f1e50f652057.jpeg\" data-download-href=\"https://forum.typst.app/uploads/default/559c3215e4dc9686e2bd73b834e3f1e50f652057\" title=\"transparancy-example\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/5/559c3215e4dc9686e2bd73b834e3f1e50f652057_2_353x499.jpeg\" alt=\"transparancy-example\" data-base62-sha1=\"cdleqbhwaBpnKO6gkoC1mLm30kn\" width=\"353\" height=\"499\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/5/559c3215e4dc9686e2bd73b834e3f1e50f652057_2_353x499.jpeg, https://forum.typst.app/uploads/default/optimized/2X/5/559c3215e4dc9686e2bd73b834e3f1e50f652057_2_529x748.jpeg 1.5x, https://forum.typst.app/uploads/default/optimized/2X/5/559c3215e4dc9686e2bd73b834e3f1e50f652057_2_706x998.jpeg 2x\" data-dominant-color=\"9A939A\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">transparancy-example</span><span class=\"informations\">1488×2105 102 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>Note that the plugin can become slow on bigger images, but transparancy is possible.</p>",
      "raw": "[quote=\"AhmedSalih, post:1, topic:1677\"]\n2. Make the image transparent, how do I control the opacity of the `image` function?\n[/quote]\n\nWhen looking for similar functionality i came accross this question and later on a package that seems to do what you were looking for.\n\nTransparancy is not supported by Typst directly, but the package [grayness](https://typst.app/universe/package/grayness/) supports parsing of images and performing operations on the image.\nOne of the operations is transparent image.\n\nI created this example:\n\n```typst\n#import \"@preview/grayness:0.2.0\": *\n\n#let data = read(\"nadine-e-ZPP-zP8HYG0-unsplash.jpg\", encoding:none)\n#transparent-image(data,alpha:75%)\n\n#block(fill:gradient.linear(red, blue, angle: 45deg).sharp(2),inset:1cm, transparent-image(data,alpha:75%)) \n```\nPhoto by [Nadine E on Unsplash](https://unsplash.com/photos/round-white-led-light-ZPP-zP8HYG0).\n\nThat results is the following:\n![transparancy-example|353x499](upload://cdleqbhwaBpnKO6gkoC1mLm30kn.jpeg)\n\n\nNote that the plugin can become slow on bigger images, but transparancy is possible.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 0,
      "reads": 34,
      "score": 71.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 720
    }
  ],
  "scraped_at": "2025-06-10T09:55:07.241733"
}