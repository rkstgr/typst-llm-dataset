{
  "topic_metadata": {
    "id": 3732,
    "title": "How can I overlay cetz diagrams on top of code?",
    "slug": "how-can-i-overlay-cetz-diagrams-on-top-of-code",
    "posts_count": 7,
    "created_at": "2025-04-20T01:29:25.201Z",
    "last_posted_at": "2025-04-21T20:01:43.321Z",
    "views": 122,
    "like_count": 4,
    "reply_count": 4,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 5,
    "accepted_answer_username": "bluss",
    "tags": [
      "cetz"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 716
  },
  "posts": [
    {
      "id": 11354,
      "post_number": 1,
      "username": "Chrysoberyl",
      "name": "",
      "created_at": "2025-04-20T01:29:25.306Z",
      "updated_at": "2025-04-20T09:26:38.348Z",
      "cooked": "<p>In LaTeX, using <code>\\tikzmarknode</code>, I can draw tikz pictures directly on top of code listings. e.g.<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/2/205becfa856ff5e2402ead257ea82550d742cbe0.jpeg\" data-download-href=\"https://forum.typst.app/uploads/default/205becfa856ff5e2402ead257ea82550d742cbe0\" title=\"overlay\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/2/205becfa856ff5e2402ead257ea82550d742cbe0_2_690x307.jpeg\" alt=\"overlay\" data-base62-sha1=\"4Cgec5YlrLJeeTIzl4WA6YHYF5S\" width=\"690\" height=\"307\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/2/205becfa856ff5e2402ead257ea82550d742cbe0_2_690x307.jpeg, https://forum.typst.app/uploads/default/optimized/2X/2/205becfa856ff5e2402ead257ea82550d742cbe0_2_1035x460.jpeg 1.5x, https://forum.typst.app/uploads/default/optimized/2X/2/205becfa856ff5e2402ead257ea82550d742cbe0_2_1380x614.jpeg 2x\" data-dominant-color=\"F2F1F0\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">overlay</span><span class=\"informations\">1657×739 63.8 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>Is there a way to do something similar with cetz and triple-backquote code segments? I could not find any way to place markers like tikzmark inside a triple backquote block.</p>",
      "raw": "In LaTeX, using `\\tikzmarknode`, I can draw tikz pictures directly on top of code listings. e.g.\n![overlay|690x307](upload://4Cgec5YlrLJeeTIzl4WA6YHYF5S.jpeg)\n\nIs there a way to do something similar with cetz and triple-backquote code segments? I could not find any way to place markers like tikzmark inside a triple backquote block.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 39,
      "score": 187.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1277
    },
    {
      "id": 11355,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-20T02:37:05.549Z",
      "updated_at": "2025-04-20T02:37:05.549Z",
      "cooked": "<p>Does this count?</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/cetz:0.3.4\"\n\n#let node(body) = block(\n  stroke: 1pt + rgb(\"#706898\"),\n  fill: rgb(\"#ebe8e8\"),\n  inset: 0.3em,\n  radius: 0.5em,\n  text(0.6em, body),\n)\n\n#let line = cetz.draw.line.with(\n  mark: (start: \"o\", end: (symbol: \"stealth\", fill: black), scale: 0.7),\n  stroke: (dash: \"dashed\", thickness: 0.5pt),\n)\n\n#let code = ```\nexample : ∀ (p q: Prop), p ∨ q → q ∨ p := by\n  intro p q h\n  cases h\n  ⋅ apply Or.inr\n    assumption\n  ⋅ apply Or.inl\n    assumption\n```\n\n#let node1 = node($\n  p, q &amp; : sans(\"Prop\") \\\n  h &amp; : p or q \\\n  &amp; tack q or p\n$)\n\n#let node2 = node($\n  p, q &amp; : sans(\"Prop\") \\\n  h &amp; : p \\\n  &amp; tack q or p \\\n  p, q &amp; : sans(\"Prop\") \\\n  h &amp; : q \\\n  &amp; tack q or p\n$)\n\n#cetz.canvas({\n  import cetz.draw: content\n  content((0, 0), anchor: \"north-west\", code)\n  content((6, -1.5), name: \"node1\", node1)\n  content((4.4, -2.8), name: \"node2\", node2)\n  line((2.6, -0.55), \"node1\")\n  line((1.9, -0.95), \"node2\")\n})\n</code></pre>\n<details><summary>output</summary>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/4/4586e9bc4d233b285fa3cb38c51c8e3310291c8a.png\" data-download-href=\"https://forum.typst.app/uploads/default/4586e9bc4d233b285fa3cb38c51c8e3310291c8a\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/4/4586e9bc4d233b285fa3cb38c51c8e3310291c8a_2_690x343.png\" alt=\"image\" data-base62-sha1=\"9V3ZHUkJ6SgadhQa8vILVOkQPQ6\" width=\"690\" height=\"343\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/4/4586e9bc4d233b285fa3cb38c51c8e3310291c8a_2_690x343.png, https://forum.typst.app/uploads/default/original/2X/4/4586e9bc4d233b285fa3cb38c51c8e3310291c8a.png 1.5x, https://forum.typst.app/uploads/default/original/2X/4/4586e9bc4d233b285fa3cb38c51c8e3310291c8a.png 2x\" data-dominant-color=\"F1F1F1\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">870×433 50.9 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n</details>",
      "raw": "Does this count?\n\n````typ\n#import \"@preview/cetz:0.3.4\"\n\n#let node(body) = block(\n  stroke: 1pt + rgb(\"#706898\"),\n  fill: rgb(\"#ebe8e8\"),\n  inset: 0.3em,\n  radius: 0.5em,\n  text(0.6em, body),\n)\n\n#let line = cetz.draw.line.with(\n  mark: (start: \"o\", end: (symbol: \"stealth\", fill: black), scale: 0.7),\n  stroke: (dash: \"dashed\", thickness: 0.5pt),\n)\n\n#let code = ```\nexample : ∀ (p q: Prop), p ∨ q → q ∨ p := by\n  intro p q h\n  cases h\n  ⋅ apply Or.inr\n    assumption\n  ⋅ apply Or.inl\n    assumption\n```\n\n#let node1 = node($\n  p, q & : sans(\"Prop\") \\\n  h & : p or q \\\n  & tack q or p\n$)\n\n#let node2 = node($\n  p, q & : sans(\"Prop\") \\\n  h & : p \\\n  & tack q or p \\\n  p, q & : sans(\"Prop\") \\\n  h & : q \\\n  & tack q or p\n$)\n\n#cetz.canvas({\n  import cetz.draw: content\n  content((0, 0), anchor: \"north-west\", code)\n  content((6, -1.5), name: \"node1\", node1)\n  content((4.4, -2.8), name: \"node2\", node2)\n  line((2.6, -0.55), \"node1\")\n  line((1.9, -0.95), \"node2\")\n})\n````\n\n<details><summary>output</summary>\n\n![image|690x343](upload://9V3ZHUkJ6SgadhQa8vILVOkQPQ6.png)\n\n</details>",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 37,
      "score": 27.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11356,
      "post_number": 3,
      "username": "Chrysoberyl",
      "name": "",
      "created_at": "2025-04-20T02:38:25.211Z",
      "updated_at": "2025-04-20T02:38:25.211Z",
      "cooked": "<p>Is there a way to determine the coordinate of the two nodes automatically?</p>",
      "raw": "Is there a way to determine the coordinate of the two nodes automatically?",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 38,
      "score": 12.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1277
    },
    {
      "id": 11357,
      "post_number": 4,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-20T02:49:52.995Z",
      "updated_at": "2025-04-20T02:49:52.995Z",
      "cooked": "<p>“Automatically” how?</p>",
      "raw": "\"Automatically\" how?",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 38,
      "score": 12.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11360,
      "post_number": 5,
      "username": "bluss",
      "name": "Ulrik",
      "created_at": "2025-04-20T09:57:17.335Z",
      "updated_at": "2025-04-20T10:43:03.838Z",
      "cooked": "<p>It’s certainly possible to some extent. You can use <code>codly</code> for a code display with many features, for example line highlights and line labels (detailed by code line and code column).</p>\n<p>The label gives you access to the absolute position of that word in the code through the query system. I wonder if there’s some way to use labels as coordinates in cetz.</p>\n<details>\n<summary>Proof of concept / \"bad example\" </summary>\n<p>This example shows that it is possible. I think it would be better to do this with cetz instead of typst drawing primitives. As seen in the example, the text after the figure starts without taking the extent of the annotation boxes into account.</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/1/10bceb400736f78b1f3d3be2d5ff5130a807e931.png\" data-download-href=\"https://forum.typst.app/uploads/default/10bceb400736f78b1f3d3be2d5ff5130a807e931\" title=\"bild\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/1/10bceb400736f78b1f3d3be2d5ff5130a807e931_2_690x290.png\" alt=\"bild\" data-base62-sha1=\"2o4oA9sCNqU8UXQBKumk1rBcXPr\" width=\"690\" height=\"290\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/1/10bceb400736f78b1f3d3be2d5ff5130a807e931_2_690x290.png, https://forum.typst.app/uploads/default/original/2X/1/10bceb400736f78b1f3d3be2d5ff5130a807e931.png 1.5x, https://forum.typst.app/uploads/default/original/2X/1/10bceb400736f78b1f3d3be2d5ff5130a807e931.png 2x\" data-dominant-color=\"F2F1F2\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">bild</span><span class=\"informations\">780×328 55.1 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/codly:1.3.0\": *\n#show: codly-init.with()\n\n// Testing out codly's feature that allows labels on individual lines of code\n\n#let code = raw(block: true, \n\"example : ∀ (p q: Prop), p ∨ q → q ∨ p := by\n  intro p q h\n  cases h\n  ⋅ apply Or.inr\n    assumption\n  ⋅ apply Or.inl\n    assumption\n\")\n#codly(highlights:(\n  (line: 2, start: 3, end: none, label: &lt;mark1&gt;),\n  (line: 3, start: 3, end: none, label: &lt;mark2&gt;),\n), annotations: (\n))\n#figure(\n  code\n)&lt;myfigure&gt;\n\nTest my labels @mark1 and @mark2\n\n\n/// Draw a line from the label's code line down to a box\n/// xoffset: x-offset from label coordinate to the start of the line\n/// xline, yline: length of the line to the box.\n#let drawbox(at-label, content, yoffset: 1em, xoffset: 20em, xline: 5em, yline: 5em,\n  line-style: (:), block-style: (:)) = context {\n  let codeline = query(at-label).first()\n  let pos = codeline.location().position()\n  let xstart = pos.x - 30mm // page margin, needs to be updated\n  let ystart = pos.y - 30mm\n\n  let xbox = xstart + xoffset + xline \n  let ybox = ystart + yoffset + yline\n  place(top + left, dx: xoffset + xstart, dy: ystart + yoffset,\n    line(start: (0%, 0%), end: (xline, yline), ..line-style))\n  place(top + left, dx: xbox, dy: ybox, block(..block-style, content))\n}\n\n#let drawbox = drawbox.with(\n  block-style: (inset: 0.75em, stroke: 0.5pt + purple.darken(60%), fill: gray.lighten(90%).transparentize(25%), radius: 0.5em),\n  line-style: (stroke: (thickness: 0.5pt, dash: \"dashed\")))\n\n#let annot1 = $\n  p, q &amp; : sans(\"Prop\") \\\n  h &amp; : p or q \\\n  &amp; tack q or p\n$\n#drawbox(&lt;mark1&gt;, annot1, xline: 4em, yline: 1em)\n\n#let annot2 = $\n  p, q &amp; : sans(\"Prop\") \\\n  h &amp; : p \\\n  &amp; tack q or p \\\n  p, q &amp; : sans(\"Prop\") \\\n  h &amp; : q \\\n  &amp; tack q or p\n$\n\n#drawbox(&lt;mark2&gt;, annot2, yline: 2em, xoffset: 11.5em)\n\n\n#lorem(20)\n</code></pre>\n</details>",
      "raw": "It's certainly possible to some extent. You can use `codly` for a code display with many features, for example line highlights and line labels (detailed by code line and code column).\n\nThe label gives you access to the absolute position of that word in the code through the query system. I wonder if there's some way to use labels as coordinates in cetz.\n\n\n<details>\n<summary>Proof of concept / \"bad example\" </summary>\n\nThis example shows that it is possible. I think it would be better to do this with cetz instead of typst drawing primitives. As seen in the example, the text after the figure starts without taking the extent of the annotation boxes into account.\n\n\n![bild|690x290](upload://2o4oA9sCNqU8UXQBKumk1rBcXPr.png)\n\n\n```typ\n#import \"@preview/codly:1.3.0\": *\n#show: codly-init.with()\n\n// Testing out codly's feature that allows labels on individual lines of code\n\n#let code = raw(block: true, \n\"example : ∀ (p q: Prop), p ∨ q → q ∨ p := by\n  intro p q h\n  cases h\n  ⋅ apply Or.inr\n    assumption\n  ⋅ apply Or.inl\n    assumption\n\")\n#codly(highlights:(\n  (line: 2, start: 3, end: none, label: <mark1>),\n  (line: 3, start: 3, end: none, label: <mark2>),\n), annotations: (\n))\n#figure(\n  code\n)<myfigure>\n\nTest my labels @mark1 and @mark2\n\n\n/// Draw a line from the label's code line down to a box\n/// xoffset: x-offset from label coordinate to the start of the line\n/// xline, yline: length of the line to the box.\n#let drawbox(at-label, content, yoffset: 1em, xoffset: 20em, xline: 5em, yline: 5em,\n  line-style: (:), block-style: (:)) = context {\n  let codeline = query(at-label).first()\n  let pos = codeline.location().position()\n  let xstart = pos.x - 30mm // page margin, needs to be updated\n  let ystart = pos.y - 30mm\n\n  let xbox = xstart + xoffset + xline \n  let ybox = ystart + yoffset + yline\n  place(top + left, dx: xoffset + xstart, dy: ystart + yoffset,\n    line(start: (0%, 0%), end: (xline, yline), ..line-style))\n  place(top + left, dx: xbox, dy: ybox, block(..block-style, content))\n}\n\n#let drawbox = drawbox.with(\n  block-style: (inset: 0.75em, stroke: 0.5pt + purple.darken(60%), fill: gray.lighten(90%).transparentize(25%), radius: 0.5em),\n  line-style: (stroke: (thickness: 0.5pt, dash: \"dashed\")))\n\n#let annot1 = $\n  p, q & : sans(\"Prop\") \\\n  h & : p or q \\\n  & tack q or p\n$\n#drawbox(<mark1>, annot1, xline: 4em, yline: 1em)\n\n#let annot2 = $\n  p, q & : sans(\"Prop\") \\\n  h & : p \\\n  & tack q or p \\\n  p, q & : sans(\"Prop\") \\\n  h & : q \\\n  & tack q or p\n$\n\n#drawbox(<mark2>, annot2, yline: 2em, xoffset: 11.5em)\n\n\n#lorem(20)\n```\n\n\n</details>",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 34,
      "score": 41.8,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 1272
    },
    {
      "id": 11407,
      "post_number": 6,
      "username": "Chrysoberyl",
      "name": "",
      "created_at": "2025-04-21T18:25:41.512Z",
      "updated_at": "2025-04-21T18:25:41.512Z",
      "cooked": "<p>Automatically in the sense that I can put a mark object after <code>intro p q h</code> and use a name to refer to that object’s coordinate.</p>",
      "raw": "Automatically in the sense that I can put a mark object after `intro p q h` and use a name to refer to that object's coordinate.",
      "reply_to_post_number": 4,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 29,
      "score": 10.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1277
    },
    {
      "id": 11411,
      "post_number": 7,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-21T20:01:43.321Z",
      "updated_at": "2025-04-21T20:01:43.321Z",
      "cooked": "<p>Well, there is no easy way to do it other than what Codly provides, or recreating it from scratch, which I assume is pretty trivial. Does <a href=\"https://forum.typst.app/t/how-can-i-overlay-cetz-diagrams-on-top-of-code/3732/5\" class=\"inline-onebox\">How can I overlay cetz diagrams on top of code? - #5 by bluss</a> work for you?</p>",
      "raw": "Well, there is no easy way to do it other than what Codly provides, or recreating it from scratch, which I assume is pretty trivial. Does https://forum.typst.app/t/how-can-i-overlay-cetz-diagrams-on-top-of-code/3732/5?u=andrew work for you?",
      "reply_to_post_number": 6,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 29,
      "score": 5.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    }
  ],
  "scraped_at": "2025-06-10T09:48:56.219488"
}