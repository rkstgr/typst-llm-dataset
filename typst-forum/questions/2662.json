{
  "topic_metadata": {
    "id": 2662,
    "title": "How can I use a show function inside a loop?",
    "slug": "how-can-i-use-a-show-function-inside-a-loop",
    "posts_count": 4,
    "created_at": "2025-02-04T01:11:01.848Z",
    "last_posted_at": "2025-02-04T14:23:08.846Z",
    "views": 96,
    "like_count": 2,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 3,
    "accepted_answer_username": "SillyFreak",
    "tags": [
      "scripting",
      "layout",
      "math"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 259
  },
  "posts": [
    {
      "id": 8190,
      "post_number": 1,
      "username": "Sylvan_Franklin",
      "name": "Sylvan Franklin",
      "created_at": "2025-02-04T01:11:02.069Z",
      "updated_at": "2025-02-06T09:40:34.343Z",
      "cooked": "<p>I’m trying to make an environment where there are a number of customizable shorthands via an array or argument sink, the code explains it better:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let characters = (\"Sam\", \"Dave\", \"Adam\")\n\n#let log(body) = {\n  for c in characters {\n    show c + \":\": it =&gt; [#it...]\n  }\n  block()[\n    #body\n  ]\n}\n\n#log()[\n  Sam:\n]\n</code></pre>\n<p>I can see why this wouldn’t work since the show rules are on the wrong level, but how could I bring them up one level?</p>",
      "raw": "I'm trying to make an environment where there are a number of customizable shorthands via an array or argument sink, the code explains it better: \n\n```typ\n#let characters = (\"Sam\", \"Dave\", \"Adam\")\n\n#let log(body) = {\n  for c in characters {\n    show c + \":\": it => [#it...]\n  }\n  block()[\n    #body\n  ]\n}\n\n#log()[\n  Sam:\n]\n```\nI can see why this wouldn't work since the show rules are on the wrong level, but how could I bring them up one level?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 33,
      "score": 226.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 731
    },
    {
      "id": 8192,
      "post_number": 2,
      "username": "gezepi",
      "name": "",
      "created_at": "2025-02-04T06:52:59.070Z",
      "updated_at": "2025-02-04T07:54:46.438Z",
      "cooked": "<p>Is there something more complex that you are trying to achieve?  If the example given is the end goal then you could use a regular expression as your show rule.  With longer lists it will become slower and slower.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let characters = (\"Sam\", \"Dave\", \"Adam\")\n#let rePattern = \"(\"+characters.map(c =&gt; \"\\b\"+c).join(\"|\")+\"):\"//(\\bSam|\\bDave|\\bAdam):\n\n#show regex(rePattern): it =&gt; {\n  show \":\": [...]\n  it\n}\n\nAlice:\n\nBob:\n\nClarice:\n\nDave:\n</code></pre>\n<details>\n<summary>\nOutput</summary>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/8/85054a07f7b3c49625eb1b2a8e148d0747a569b3.png\" alt=\"image\" data-base62-sha1=\"iYKPO1wMlyRhmURBdHQxTI8wLrJ\" width=\"231\" height=\"128\"></p>\n</details>\n<p>The regular expression pattern here ends up being <code>(\\bSam|\\bDave|\\bAdam):</code>.  The ‘\\b’ makes sure that the character before the start of each name is not a character (typically a space).  It’s optional but without it you could match too many things.</p>\n<p>And if you wanted it as the <code>log</code> function:</p>\n<details>\n<summary>\nCode</summary>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let characters = (\"Sam\", \"Dave\", \"Adam\")\n#let rePattern = \"(\"+characters.map(c =&gt; \"\\b\"+c).join(\"|\")+\"):\"//(\\bSam|\\bDave|\\bAdam):\n\n#let log(body) = {\n  show regex(rePattern): it =&gt; {\n    show \":\": [...]\n    it\n  }\n  body\n}\n</code></pre>\n</details>",
      "raw": "Is there something more complex that you are trying to achieve?  If the example given is the end goal then you could use a regular expression as your show rule.  With longer lists it will become slower and slower.\n\n```typ\n#let characters = (\"Sam\", \"Dave\", \"Adam\")\n#let rePattern = \"(\"+characters.map(c => \"\\b\"+c).join(\"|\")+\"):\"//(\\bSam|\\bDave|\\bAdam):\n\n#show regex(rePattern): it => {\n  show \":\": [...]\n  it\n}\n\nAlice:\n\nBob:\n\nClarice:\n\nDave:\n```\n\n[details=\"Output\"]\n![image|231x128](upload://iYKPO1wMlyRhmURBdHQxTI8wLrJ.png)\n[/details]\n\nThe regular expression pattern here ends up being `(\\bSam|\\bDave|\\bAdam):`.  The '\\b' makes sure that the character before the start of each name is not a character (typically a space).  It's optional but without it you could match too many things.\n\nAnd if you wanted it as the `log` function:\n\n[details=\"Code\"]\n```typ\n#let characters = (\"Sam\", \"Dave\", \"Adam\")\n#let rePattern = \"(\"+characters.map(c => \"\\b\"+c).join(\"|\")+\"):\"//(\\bSam|\\bDave|\\bAdam):\n\n#let log(body) = {\n  show regex(rePattern): it => {\n    show \":\": [...]\n    it\n  }\n  body\n}\n```\n[/details]",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 31,
      "score": 11.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 326
    },
    {
      "id": 8193,
      "post_number": 3,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-02-04T09:19:35.134Z",
      "updated_at": "2025-02-04T09:19:35.134Z",
      "cooked": "<p>See here:</p>\n<aside class=\"quote quote-modified\" data-post=\"1\" data-topic=\"952\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    <img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/sillyfreak/48/1483_2.png\" class=\"avatar\">\n    <a href=\"https://forum.typst.app/t/how-can-i-create-show-rules-in-a-loop/952\">How can I create show rules in a loop?</a> <a class=\"badge-category__wrapper \" href=\"/c/questions/5\"><span data-category-id=\"5\" style=\"--category-badge-color: #F7C000; --category-badge-text-color: #fdfdfd;\" data-drop-close=\"true\" class=\"badge-category \" title=\"Your questions about using Typst and the web app go in this category.\"><span class=\"badge-category__name\">Questions</span></span></a>\n  </div>\n  <blockquote>\n    Let’s say I have many words for which I want a show rule to treat them all with some transformation; say, I want them to all show up strong: \n#show \"foo\": strong\n#show \"baz\": strong\n\nfoo bar baz\n\nIn the real case, there are obviously potentially many more targets for the show rules; how can I create these show rules without repeating myself? Ideally I want my targets to be stored in arrays and somehow process the elements of the array – something like this: \n#let words = (\"foo\", \"baz\")\n#for word…\n  </blockquote>\n</aside>\n",
      "raw": "See here:\n\nhttps://forum.typst.app/t/how-can-i-create-show-rules-in-a-loop/952?u=sillyfreak",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 28,
      "score": 80.6,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 8201,
      "post_number": 4,
      "username": "Sylvan_Franklin",
      "name": "Sylvan Franklin",
      "created_at": "2025-02-04T14:23:08.846Z",
      "updated_at": "2025-02-04T14:23:08.846Z",
      "cooked": "<p>thanks that’s exactly it, sorry for not reading more closely!</p>",
      "raw": "thanks that's exactly it, sorry for not reading more closely!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 9.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 731
    }
  ],
  "scraped_at": "2025-06-10T09:52:05.009574"
}