{
  "topic_metadata": {
    "id": 875,
    "title": "Is there a way to remove automatic scaling of nested braces/brackets/parentheses in math mode?",
    "slug": "is-there-a-way-to-remove-automatic-scaling-of-nested-braces-brackets-parentheses-in-math-mode",
    "posts_count": 12,
    "created_at": "2024-10-02T15:01:58.250Z",
    "last_posted_at": "2024-10-04T13:57:42.672Z",
    "views": 460,
    "like_count": 9,
    "reply_count": 7,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "quachpas",
    "tags": [
      "math"
    ],
    "category_id": 5,
    "participant_count": 5,
    "word_count": 1330
  },
  "posts": [
    {
      "id": 3224,
      "post_number": 1,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-10-02T15:01:58.377Z",
      "updated_at": "2024-10-02T15:01:58.377Z",
      "cooked": "<p>I’m pretty sure I’ve seen something like this before, but I can’t remember anything. I’m not even sure this is possible. Is it? If so, then how would I do it?</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">$((...((x - 2)^2 - 2)^2... - 2)^2)$\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/e391af1643865807dfa2a366a61caa39060bc30e.png\" alt=\"image\" data-base62-sha1=\"wtavKONZ5ROVSCUytV2zPSIr12C\" width=\"309\" height=\"76\"></p>\n<p>Basically, I want to have all the parentheses to have the same standard size. I’ve looked at <code>lr</code> as my immediate guess, but it looks like that you should use it explicitly, and it doesn’t affect symbols that were inserted without its use.</p>",
      "raw": "I'm pretty sure I've seen something like this before, but I can't remember anything. I'm not even sure this is possible. Is it? If so, then how would I do it?\n\n```typ\n$((...((x - 2)^2 - 2)^2... - 2)^2)$\n```\n\n![image|619x153, 50%](upload://wtavKONZ5ROVSCUytV2zPSIr12C.png)\n\nBasically, I want to have all the parentheses to have the same standard size. I've looked at `lr` as my immediate guess, but it looks like that you should use it explicitly, and it doesn't affect symbols that were inserted without its use.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 62,
      "score": 1542.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 3225,
      "post_number": 2,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-10-02T15:07:47.659Z",
      "updated_at": "2024-10-02T15:07:47.659Z",
      "cooked": "<p>Isn’t that a set rule on lr?</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set math.lr(size: 1em)\n$ ((...((x - 2)^2 - 2)^2... - 2)^2) $\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/068c9c7c2eae90cd80271c155cb101b7e59e2dcd.png\" alt=\"image\" data-base62-sha1=\"VW7D7aLKCsM65AyjHVCESXlMMB\" width=\"314\" height=\"64\"></p>",
      "raw": "Isn't that a set rule on lr?\n```typ\n#set math.lr(size: 1em)\n$ ((...((x - 2)^2 - 2)^2... - 2)^2) $\n```\n![image|314x64](upload://VW7D7aLKCsM65AyjHVCESXlMMB.png)",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 1,
      "reads": 60,
      "score": 167.0,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 3228,
      "post_number": 3,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-10-02T15:34:08.540Z",
      "updated_at": "2024-10-02T15:39:04.104Z",
      "cooked": "<p>Oh, I think it didn’t work because I used <code>#set math.lr(size: 100%)</code>. Not sure I would call <code>1em</code> an obvious value for <a href=\"https://typst.app/docs/reference/math/lr#functions-lr-parameters-size\"><code>size</code></a>, but now I know. Thanks.</p>\n<aside class=\"onebox githubissue\" data-onebox-src=\"https://github.com/typst/typst/issues/5098\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/typst/typst/issues/5098\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/typst/typst</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n  <div class=\"github-icon-container\" title=\"Issue\" data-github-private-repo=\"false\">\n\t  <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 14 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"></path></svg>\n  </div>\n\n  <div class=\"github-info-container\">\n    <h4>\n      <a href=\"https://github.com/typst/typst/issues/5098\" target=\"_blank\" rel=\"noopener nofollow ugc\">Consider adding an example to `math.lr.size`</a>\n    </h4>\n\n    <div class=\"github-info\">\n      <div class=\"date\">\n        opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-10-02\" data-time=\"15:38:35\" data-timezone=\"UTC\">03:38PM - 02 Oct 24 UTC</span>\n      </div>\n\n\n      <div class=\"user\">\n        <a href=\"https://github.com/Andrew15-5\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n          <img alt=\"Andrew15-5\" src=\"https://forum.typst.app/uploads/default/original/1X/8c66fc8b1c207ba90488266df18b206a61b1fc49.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"707C3A\">\n          Andrew15-5\n        </a>\n      </div>\n    </div>\n\n    <div class=\"labels\">\n        <span style=\"display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;\">\n          docs\n        </span>\n    </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">### Description\n\nAfter I got a solution here: https://forum.typst.app/t/is-there<span class=\"show-more-container\"><a href=\"\" rel=\"noopener\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">-a-way-to-remove-automatic-scaling-of-nested-braces-brackets-parentheses-in-math-mode/875/2, I think that this code snippet is the perfect candidate for an example for https://typst.app/docs/reference/math/lr#functions-lr-parameters-size.\n\n```typ\n#set math.lr(size: 1em)\n```\n\n[Above](https://typst.app/docs/reference/math/lr) there is already an example of `lr(size: 50%)` which is what I tried to do at first to achieve my goal (with `100%`), but it didn't change anything.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n",
      "raw": "Oh, I think it didn't work because I used `#set math.lr(size: 100%)`. Not sure I would call `1em` an obvious value for [`size`](https://typst.app/docs/reference/math/lr#functions-lr-parameters-size), but now I know. Thanks.\n\nhttps://github.com/typst/typst/issues/5098",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 59,
      "score": 16.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 3230,
      "post_number": 4,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2024-10-02T15:41:02.727Z",
      "updated_at": "2024-10-02T16:07:32.480Z",
      "cooked": "<p>The <span class=\"bbcode-s\">accent</span> superscript position looks like a bug though, right? They should ideally all be at the same height.</p>",
      "raw": "The [s]accent[/s] superscript position looks like a bug though, right? They should ideally all be at the same height.",
      "reply_to_post_number": 2,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 2,
      "reads": 56,
      "score": 121.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 3233,
      "post_number": 5,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-10-02T15:48:37.028Z",
      "updated_at": "2024-10-02T15:48:37.028Z",
      "cooked": "<p>You mean the superscript numbers? Yeah, I suppose it is, unless there is “a more correct” solution. I didn’t even notice until now.</p>",
      "raw": "You mean the superscript numbers? Yeah, I suppose it is, unless there is \"a more correct\" solution. I didn't even notice until now.",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 54,
      "score": 10.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 3237,
      "post_number": 6,
      "username": "ludwig",
      "name": "",
      "created_at": "2024-10-02T16:51:04.555Z",
      "updated_at": "2024-10-02T16:51:04.555Z",
      "cooked": "<p>I think the correct way is to escape the brackets, i.e. writing <code>\\(</code> and <code>\\)</code>. That way, the superscript positions are also correct.</p>",
      "raw": "I think the correct way is to escape the brackets, i.e. writing `\\(` and `\\)`. That way, the superscript positions are also correct.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 3,
      "reads": 51,
      "score": 60.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 300
    },
    {
      "id": 3238,
      "post_number": 7,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-10-02T17:01:16.557Z",
      "updated_at": "2024-10-02T17:01:22.360Z",
      "cooked": "<p>Hmmm seems like superscripts (and probably subscripts) positions are computed at some point before the set rule is in effect? It does seem inefficient, if the computations happen all the same despite identical lr size.</p>\n<aside class=\"quote no-group quote-modified\" data-username=\"Andrew\" data-post=\"3\" data-topic=\"875\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/andrew/48/62_2.png\" class=\"avatar\"> Andrew:</div>\n<blockquote>\n<p>Oh, I think it didn’t work because I used <code>#set math.lr(size: 100%)</code>. Not sure I would call <code>1em</code> an obvious value for <a href=\"https://typst.app/docs/reference/math/lr#functions-lr-parameters-size\"><code>size</code></a>, but now I know. Thanks.</p>\n<p><a href=\"https://github.com/typst/typst/issues/5098\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Consider adding an example to `math.lr.size` · Issue #5098 · typst/typst · GitHub</a></p>\n</blockquote>\n</aside>\n<p>Yes, my experience so far has been the same. The difference between relative and length is usually very fine. In this case, looks like em works!</p>",
      "raw": "Hmmm seems like superscripts (and probably subscripts) positions are computed at some point before the set rule is in effect? It does seem inefficient, if the computations happen all the same despite identical lr size.\n\n[quote=\"Andrew, post:3, topic:875\"]\nOh, I think it didn’t work because I used `#set math.lr(size: 100%)`. Not sure I would call `1em` an obvious value for [`size`](https://typst.app/docs/reference/math/lr#functions-lr-parameters-size), but now I know. Thanks.\n\nhttps://github.com/typst/typst/issues/5098\n[/quote]\n\nYes, my experience so far has been the same. The difference between relative and length is usually very fine. In this case, looks like em works!",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 0,
      "reads": 49,
      "score": 9.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 3241,
      "post_number": 8,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-10-02T17:15:47.052Z",
      "updated_at": "2024-10-02T17:15:47.052Z",
      "cooked": "<p>That’s fine, but this is not an automated solution like I imagined (set/show rule) and it does make the code less readable. Cool that at least superscript position is correct.</p>",
      "raw": "That's fine, but this is not an automated solution like I imagined (set/show rule) and it does make the code less readable. Cool that at least superscript position is correct.",
      "reply_to_post_number": 6,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 43,
      "score": 13.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 3242,
      "post_number": 9,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-10-02T17:25:03.295Z",
      "updated_at": "2024-10-02T17:25:03.295Z",
      "cooked": "<p>Let’s see how it goes:</p>\n<aside class=\"onebox githubissue\" data-onebox-src=\"https://github.com/typst/typst/issues/5101\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/typst/typst/issues/5101\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/typst/typst</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n  <div class=\"github-icon-container\" title=\"Issue\" data-github-private-repo=\"false\">\n\t  <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 14 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"></path></svg>\n  </div>\n\n  <div class=\"github-info-container\">\n    <h4>\n      <a href=\"https://github.com/typst/typst/issues/5101\" target=\"_blank\" rel=\"noopener nofollow ugc\">Superscript text doesn't move down when parentheses scaling is decreased</a>\n    </h4>\n\n    <div class=\"github-info\">\n      <div class=\"date\">\n        opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-10-02\" data-time=\"17:24:09\" data-timezone=\"UTC\">05:24PM - 02 Oct 24 UTC</span>\n      </div>\n\n\n      <div class=\"user\">\n        <a href=\"https://github.com/Andrew15-5\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n          <img alt=\"Andrew15-5\" src=\"https://forum.typst.app/uploads/default/original/1X/8c66fc8b1c207ba90488266df18b206a61b1fc49.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"707C3A\">\n          Andrew15-5\n        </a>\n      </div>\n    </div>\n\n    <div class=\"labels\">\n        <span style=\"display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;\">\n          bug\n        </span>\n    </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">### Description\n\nI'm not sure if it's a bug, but using show rule from https://gi<span class=\"show-more-container\"><a href=\"\" rel=\"noopener\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">thub.com/typst/typst/issues/5098 doesn't reset superscript to the natural height:\n\n```typ\n#set math.lr(size: 1em)\n$ ((...((x - 2)^2 - 2)^2... - 2)^2) $\n```\n\n![image](https://github.com/user-attachments/assets/3661da6c-a604-4070-aead-94bbfd352a44)\n\nThere is a sudden improvement (?) when using a version from 2024-09-28:\n\n![image](https://github.com/user-attachments/assets/deb86ebe-9371-44db-b250-7c27dd0f766c)\n\n[First mentioned](https://forum.typst.app/t/is-there-a-way-to-remove-automatic-scaling-of-nested-braces-brackets-parentheses-in-math-mode/875/4)\n\n### Reproduction URL\n\n_No response_\n\n### Operating system\n\nLinux\n\n### Typst version\n\n- [X] I am using the latest version of Typst</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n",
      "raw": "Let's see how it goes:\n\nhttps://github.com/typst/typst/issues/5101",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 43,
      "score": 8.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 3303,
      "post_number": 10,
      "username": "mkorje",
      "name": "Max",
      "created_at": "2024-10-03T11:26:46.457Z",
      "updated_at": "2024-10-03T11:28:59.550Z",
      "cooked": "<p>There’s quite a bit happening “behind the scenes”, and so I think explaining what’s actually happening in the code might make things clearer.</p>\n<hr>\n<p>When delimiters are automatically matched, what this really means is that an implicit <code>math.lr</code> function call is created, with the size set to <code>auto</code>. e.g.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">$((...((x - 2)^2 - 2)^2... - 2)^2)$\n</code></pre>\n<p>gets turned into</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">$lr((lr((...lr((lr((x - 2), size: #auto)^2 - 2), size: #auto)^2... - 2), size: #auto)^2), size: #auto)$\n</code></pre>\n<p>(technically these aren’t equivalent, but that doesn’t matter here).</p>\n<p>Now the size of <code>auto</code> means that the compiler stretches the delimiters to the total height of the contents in the <code>lr</code> function call’s <code>body</code>. When you use a relative size, like <code>100%</code>, this is relative to the aforementioned <code>auto</code> size calculated. So the set rule <code> #set math.lr(size: 100%)</code> won’t do anything, as you’re telling it to set the size to be 100% of the automatic size!</p>\n<hr>\n<p>Regarding the incorrect looking superscript position when using <code>#set math.lr(size: 1em)</code>, this isn’t really a bug.  Like with the automatic delimiter matching, when you write the superscript <code>...^2</code> an implicit <code>math.attach</code> function call is created. The expression preceding the <code>^2</code> is wrapped into the <code>base</code> of the <code>attach</code> function call. e.g.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">$lr((lr((...lr((lr((x - 2), size: #auto)^2 - 2), size: #auto)^2... - 2), size: #auto)^2), size: #auto)$\n</code></pre>\n<p>becomes</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">$lr((attach(lr((...attach(lr((attach(lr((x - 2), size: #auto), tr: 2) - 2), size: #auto), tr: 2)... - 2), size: #auto), tr: 2)), size: #auto)$\n</code></pre>\n<p>The position of the scripts is calculated based on the total height of the <code>base</code> in the <code>attach</code> function call. So when using <code>#set math.lr(size: 1em)</code>, the height of the body in the attach calls isn’t changing, despite the brackets no longer scaling. Thus, the superscript positions don’t change and end up looking incorrect.</p>\n<p>I wouldn’t consider this a bug because the intended output is unclear. Consider the example below:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set math.lr(size: 1em)\n$ ((x - 2)^2 - 2)^2 $\n$ (-2 + (x - 2)^2)^2 $\n</code></pre>\n<p><img src=\"/uploads/default/original/1X/7b5116af270ae1a6f5a9cbba0484b74ad58e47b6.jpeg\" alt=\"Rendering of the above Typst code.\" data-base62-sha1=\"hAUsxOS3Aik263qvnGezfIgBxYi\" width=\"345\" height=\"237\"></p>\n<p>The outer <code>attach</code>’s <code>base</code> in each equation have the same height. But while in the first equation it would make sense for the superscript to be lower, in the second it isn’t so clear. How should the compiler infer the height relative to which the superscript positioning is done? At what distance from the superscript should it decide to no longer include that element’s height in the positioning? More on this at the end.</p>\n<p>As <a class=\"mention\" href=\"/u/ludwig\">@ludwig</a> said, the correct way to do this is to escape the brackets, ensuring the implicit <code>lr</code> isn’t created. By escaping the brackets, this also means the body of the <code>attach</code> function call is just the bracket itself. So you end up getting the correct superscript positions.</p>\n<hr>\n<p>The original behaviour desired, not wanting the delimiters to get larger, is part of <a href=\"https://github.com/typst/typst/issues/360\" class=\"inline-onebox-loading\" rel=\"noopener nofollow ugc\">https://github.com/typst/typst/issues/360</a> in my opinion. The crux of that issue is solving how the interactions between delimiters and the rest of math (attachments, etc.)  should work when we prefer the height of the delimiters over the height of the body within it (and <em>when</em> this should even happen!). Implementing this is quite tricky, as well as figuring out clear rules for the behaviour. It’s a tough problem to solve, but doable I think.</p>",
      "raw": "There's quite a bit happening \"behind the scenes\", and so I think explaining what's actually happening in the code might make things clearer.\n\n-- --\n\nWhen delimiters are automatically matched, what this really means is that an implicit `math.lr` function call is created, with the size set to `auto`. e.g.\n```typ\n$((...((x - 2)^2 - 2)^2... - 2)^2)$\n```\ngets turned into\n```typ\n$lr((lr((...lr((lr((x - 2), size: #auto)^2 - 2), size: #auto)^2... - 2), size: #auto)^2), size: #auto)$\n```\n(technically these aren't equivalent, but that doesn't matter here).\n\nNow the size of `auto` means that the compiler stretches the delimiters to the total height of the contents in the `lr` function call's `body`. When you use a relative size, like `100%`, this is relative to the aforementioned `auto` size calculated. So the set rule ` #set math.lr(size: 100%)` won't do anything, as you're telling it to set the size to be 100% of the automatic size!\n\n-- --\n\nRegarding the incorrect looking superscript position when using `#set math.lr(size: 1em)`, this isn't really a bug.  Like with the automatic delimiter matching, when you write the superscript `...^2` an implicit `math.attach` function call is created. The expression preceding the `^2` is wrapped into the `base` of the `attach` function call. e.g.\n```typ\n$lr((lr((...lr((lr((x - 2), size: #auto)^2 - 2), size: #auto)^2... - 2), size: #auto)^2), size: #auto)$\n```\nbecomes\n ```typ\n$lr((attach(lr((...attach(lr((attach(lr((x - 2), size: #auto), tr: 2) - 2), size: #auto), tr: 2)... - 2), size: #auto), tr: 2)), size: #auto)$\n```\nThe position of the scripts is calculated based on the total height of the `base` in the `attach` function call. So when using `#set math.lr(size: 1em)`, the height of the body in the attach calls isn't changing, despite the brackets no longer scaling. Thus, the superscript positions don't change and end up looking incorrect.\n\nI wouldn't consider this a bug because the intended output is unclear. Consider the example below:\n```typ\n#set math.lr(size: 1em)\n$ ((x - 2)^2 - 2)^2 $\n$ (-2 + (x - 2)^2)^2 $\n```\n![Rendering of the above Typst code.|690x474, 50%](upload://hAUsxOS3Aik263qvnGezfIgBxYi.jpeg)\n\nThe outer `attach`'s `base` in each equation have the same height. But while in the first equation it would make sense for the superscript to be lower, in the second it isn't so clear. How should the compiler infer the height relative to which the superscript positioning is done? At what distance from the superscript should it decide to no longer include that element's height in the positioning? More on this at the end.\n\nAs @ludwig said, the correct way to do this is to escape the brackets, ensuring the implicit `lr` isn't created. By escaping the brackets, this also means the body of the `attach` function call is just the bracket itself. So you end up getting the correct superscript positions.\n\n-- --\n\nThe original behaviour desired, not wanting the delimiters to get larger, is part of https://github.com/typst/typst/issues/360 in my opinion. The crux of that issue is solving how the interactions between delimiters and the rest of math (attachments, etc.)  should work when we prefer the height of the delimiters over the height of the body within it (and _when_ this should even happen!). Implementing this is quite tricky, as well as figuring out clear rules for the behaviour. It's a tough problem to solve, but doable I think.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 3,
      "reads": 45,
      "score": 384.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 76
    },
    {
      "id": 3306,
      "post_number": 11,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-10-03T12:13:50.313Z",
      "updated_at": "2024-10-03T12:15:21.622Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"mkorje\" data-post=\"10\" data-topic=\"875\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/mkorje/48/726_2.png\" class=\"avatar\"> mkorje:</div>\n<blockquote>\n<p>The outer <code>attach</code>’s <code>base</code> in each equation have the same height. But while in the first equation it would make sense for the superscript to be lower, in the second it isn’t so clear.</p>\n</blockquote>\n</aside>\n<p>I think lining up all superscripts makes sense in both cases. Visually, superscript has to attach near the top of a parenthesis. Since all parentheses have the same height, all the superscripts next to them must be typeset at the same height.</p>\n<aside class=\"quote no-group quote-modified\" data-username=\"mkorje\" data-post=\"10\" data-topic=\"875\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/mkorje/48/726_2.png\" class=\"avatar\"> mkorje:</div>\n<blockquote>\n<p>The original behaviour desired, not wanting the delimiters to get larger, is part of <a href=\"https://github.com/typst/typst/issues/360\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Smarter parentheses sizing · Issue #360 · typst/typst · GitHub</a> in my opinion.</p>\n</blockquote>\n</aside>\n<p>The way I see it, the linked issue is about changing the default parentheses scaling in certain scenarios. The question in the topic, however, is to be able to <em>disable</em> the scaling completely. But it’s true that they both share the same domain, i.e., something that has to do with parentheses scaling.</p>\n<p>We probably should wait for <a class=\"mention\" href=\"/u/laurmaedje\">@laurmaedje</a> to respond (here on in the issue).</p>",
      "raw": "[quote=\"mkorje, post:10, topic:875\"]\nThe outer `attach`’s `base` in each equation have the same height. But while in the first equation it would make sense for the superscript to be lower, in the second it isn’t so clear.\n[/quote]\n\nI think lining up all superscripts makes sense in both cases. Visually, superscript has to attach near the top of a parenthesis. Since all parentheses have the same height, all the superscripts next to them must be typeset at the same height.\n\n[quote=\"mkorje, post:10, topic:875\"]\nThe original behaviour desired, not wanting the delimiters to get larger, is part of https://github.com/typst/typst/issues/360 in my opinion.\n[/quote]\n\nThe way I see it, the linked issue is about changing the default parentheses scaling in certain scenarios. The question in the topic, however, is to be able to *disable* the scaling completely. But it's true that they both share the same domain, i.e., something that has to do with parentheses scaling.\n\nWe probably should wait for @laurmaedje to respond (here on in the issue).",
      "reply_to_post_number": 10,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 0,
      "reads": 41,
      "score": 78.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 3407,
      "post_number": 12,
      "username": "mkorje",
      "name": "Max",
      "created_at": "2024-10-04T13:57:42.672Z",
      "updated_at": "2024-10-04T13:57:42.672Z",
      "cooked": "<p>I took the Smarter parentheses sizing issue to mean adding an option for that behaviour, as an alternative to the current default of scaling to match the height. So in this regard, I think being able to disable scaling completely can also fall under the scope of that issue.</p>\n<aside class=\"quote no-group\" data-username=\"Andrew\" data-post=\"11\" data-topic=\"875\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/andrew/48/62_2.png\" class=\"avatar\"> Andrew:</div>\n<blockquote>\n<p>I think lining up all superscripts makes sense in both cases. Visually, superscript has to attach near the top of a parenthesis. Since all parentheses have the same height, all the superscripts next to them must be typeset at the same height.</p>\n</blockquote>\n</aside>\n<p>I see what you mean, but <code>attach</code> is intended to place scripts with regards to its entire <code>base</code>. If you want it to only be placed with regard to the parenthesis, it alone should be the <code>base</code> then in the <code>attach</code> function call. I think changing it to behave as you describe would be fickle, and probably cause undesirable behaviour sometimes.</p>",
      "raw": "I took the Smarter parentheses sizing issue to mean adding an option for that behaviour, as an alternative to the current default of scaling to match the height. So in this regard, I think being able to disable scaling completely can also fall under the scope of that issue.\n\n[quote=\"Andrew, post:11, topic:875\"]\nI think lining up all superscripts makes sense in both cases. Visually, superscript has to attach near the top of a parenthesis. Since all parentheses have the same height, all the superscripts next to them must be typeset at the same height.\n[/quote]\n\nI see what you mean, but `attach` is intended to place scripts with regards to its entire `base`. If you want it to only be placed with regard to the parenthesis, it alone should be the `base` then in the `attach` function call. I think changing it to behave as you describe would be fickle, and probably cause undesirable behaviour sometimes.",
      "reply_to_post_number": 11,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 0,
      "reads": 37,
      "score": 57.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 76
    }
  ],
  "scraped_at": "2025-06-10T09:57:31.964223"
}