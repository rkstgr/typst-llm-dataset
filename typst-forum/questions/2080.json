{
  "topic_metadata": {
    "id": 2080,
    "title": "How to conditionally set heading block parameters?",
    "slug": "how-to-conditionally-set-heading-block-parameters",
    "posts_count": 5,
    "created_at": "2024-12-13T10:26:21.846Z",
    "last_posted_at": "2025-04-13T14:09:22.460Z",
    "views": 355,
    "like_count": 10,
    "reply_count": 2,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 3,
    "accepted_answer_username": "sjfhsjfh",
    "tags": [
      "layout"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 575
  },
  "posts": [
    {
      "id": 6582,
      "post_number": 1,
      "username": "Amman_Algenib",
      "name": "Amman",
      "created_at": "2024-12-13T10:26:22.003Z",
      "updated_at": "2024-12-13T10:26:22.003Z",
      "cooked": "<p>Hello typstologists,</p>\n<p>I am struggeling to come up with a conditional setting for block parameters in headings. In detail, a heading of level 1 should be shown as follows:</p>\n<pre><code class=\"lang-auto\">#show heading.where(level:1): it =&gt; {\n  set block(above: 2em)\n  it\n}\n</code></pre>\n<p>The heading of level 2 should be shown as follows:</p>\n<pre><code class=\"lang-auto\">#show heading.where(level: 2): it =&gt; {\n  set block(above: 2em)\n  it\n}\n</code></pre>\n<p>However, whenever a level-1-heading directly precedes a level-2-heading I want the <code>above</code> parameter of the latter to be just <code>0.4em</code> as in the following reprex:</p>\n<pre><code class=\"lang-auto\">Random stuff being written here.\n\n= A brilliant level 1 heading\n== followed directly by a mediocre level 2 heading\nThis being followed by some random text.\n</code></pre>\n<p>Of course, I could set the <code>above</code> parameter of the level-2-heading accordingly whenever the above mentioned situation occurs, but I was looking for a smarter solution. <em>Is it possible to formulate a conditional <code>show</code> rule in which I could tell typst “show level-2-heading like this, whenever a level-1-heading preceeds”?</em></p>\n<p>Happy to tap your brains and many thanks in advance<br>\nAmman</p>",
      "raw": "Hello typstologists,\n\nI am struggeling to come up with a conditional setting for block parameters in headings. In detail, a heading of level 1 should be shown as follows:\n\n```\n#show heading.where(level:1): it => {\n  set block(above: 2em)\n  it\n}\n```\n\nThe heading of level 2 should be shown as follows:\n```\n#show heading.where(level: 2): it => {\n  set block(above: 2em)\n  it\n}\n```\n\nHowever, whenever a level-1-heading directly precedes a level-2-heading I want the `above` parameter of the latter to be just `0.4em` as in the following reprex:\n\n```\nRandom stuff being written here.\n\n= A brilliant level 1 heading\n== followed directly by a mediocre level 2 heading\nThis being followed by some random text.\n```\n\nOf course, I could set the `above` parameter of the level-2-heading accordingly whenever the above mentioned situation occurs, but I was looking for a smarter solution. *Is it possible to formulate a conditional `show` rule in which I could tell typst \"show level-2-heading like this, whenever a level-1-heading preceeds\"?*\n\nHappy to tap your brains and many thanks in advance\nAmman",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 49,
      "score": 1074.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 926
    },
    {
      "id": 6610,
      "post_number": 2,
      "username": "miles-1",
      "name": "miles",
      "created_at": "2024-12-13T17:27:42.036Z",
      "updated_at": "2024-12-13T17:27:42.036Z",
      "cooked": "<p>I’ve thought about this as well (e.g., <a href=\"https://forum.typst.app/t/how-to-have-first-line-indent-in-a-new-paragraph-after-a-math-block/1985/2\">this post</a> where I was hoping to add spacing conditional on what followed the content). I think such conditional typesetting is currently not very easy in Typst. If it were to be done via show rules, I think there would have to be something like a <code>next()</code> function that can be used with <code>context</code> to find what the next element is that follows the current one.</p>\n<p>Perhaps there is some way to do this that I’m unaware of (maybe with <code>query</code>), or maybe such functionality is in the works already? Regardless, the best way I can think of solving your issue is to pass all content of the document to a function, which checks the content and inserts spacing around headers conditionally, like below. <strong>This code abuses <code>repr</code> and sidesteps Typst’s normal structure for showing. It should not be used.</strong></p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let get_header_depth(elem) = {\n  if repr(elem.func()) == \"heading\" { // this abuses repr and should not be used but I don't know an alternative\n    return elem.depth\n  }\n  return none\n}\n\n#let add_conditional_header_spaces(txt) = {\n  if not txt.has(\"children\") {return txt}\n  let elems = txt.children.filter(x =&gt; x != [ ])\n  for (indx, elem) in elems.enumerate() {\n    if get_header_depth(elem) == 1 {\n      if indx != elems.len() - 1 and get_header_depth(elems.at(indx + 1)) == 2 {\n        [#elem \\[SMALL SPACE HERE\\] ]\n      } else {\n        [#elem \\[LARGE SPACE HERE\\] ]\n      }\n    } else {\n      elem\n    }\n  }\n}\n\n#add_conditional_header_spaces[= hello\n#lorem(10)\n\n= goodbye\n== a subheading\n#lorem(10)\n\n= foo\n#lorem(10)\n== a subheading\n#lorem(10)]\n</code></pre>\n<p>If anyone has suggestions on how conditional <code>set</code>ing or <code>show</code>ing might be completed based off of neighboring elements I would love to hear it.</p>",
      "raw": "I've thought about this as well (e.g., [this post](https://forum.typst.app/t/how-to-have-first-line-indent-in-a-new-paragraph-after-a-math-block/1985/2?u=miles-1) where I was hoping to add spacing conditional on what followed the content). I think such conditional typesetting is currently not very easy in Typst. If it were to be done via show rules, I think there would have to be something like a `next()` function that can be used with `context` to find what the next element is that follows the current one.\n\nPerhaps there is some way to do this that I'm unaware of (maybe with `query`), or maybe such functionality is in the works already? Regardless, the best way I can think of solving your issue is to pass all content of the document to a function, which checks the content and inserts spacing around headers conditionally, like below. **This code abuses `repr` and sidesteps Typst's normal structure for showing. It should not be used.**\n\n```typst\n#let get_header_depth(elem) = {\n  if repr(elem.func()) == \"heading\" { // this abuses repr and should not be used but I don't know an alternative\n    return elem.depth\n  }\n  return none\n}\n\n#let add_conditional_header_spaces(txt) = {\n  if not txt.has(\"children\") {return txt}\n  let elems = txt.children.filter(x => x != [ ])\n  for (indx, elem) in elems.enumerate() {\n    if get_header_depth(elem) == 1 {\n      if indx != elems.len() - 1 and get_header_depth(elems.at(indx + 1)) == 2 {\n        [#elem \\[SMALL SPACE HERE\\] ]\n      } else {\n        [#elem \\[LARGE SPACE HERE\\] ]\n      }\n    } else {\n      elem\n    }\n  }\n}\n\n#add_conditional_header_spaces[= hello\n#lorem(10)\n\n= goodbye\n== a subheading\n#lorem(10)\n\n= foo\n#lorem(10)\n== a subheading\n#lorem(10)]\n```\n\nIf anyone has suggestions on how conditional `set`ing or `show`ing might be completed based off of neighboring elements I would love to hear it.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 43,
      "score": 138.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 177
    },
    {
      "id": 6635,
      "post_number": 3,
      "username": "sjfhsjfh",
      "name": "sjfhsjfh",
      "created_at": "2024-12-14T18:36:35.283Z",
      "updated_at": "2024-12-14T18:36:50.210Z",
      "cooked": "<p>According to the <a href=\"https://typst.app/docs/reference/layout/v/#parameters-weak\">documentation</a>, weak spacings will always collapse adjacent paragraph spacing, even if the paragraph spacing is larger. I guess this is also the case for <code>heading</code> block spacing.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show heading: it =&gt; {\n  set block(above: 2em)\n  it\n  v(0.4em, weak: true)\n}\n</code></pre>",
      "raw": "According to the [documentation](https://typst.app/docs/reference/layout/v/#parameters-weak), weak spacings will always collapse adjacent paragraph spacing, even if the paragraph spacing is larger. I guess this is also the case for `heading` block spacing.\n\n```typ\n#show heading: it => {\n  set block(above: 2em)\n  it\n  v(0.4em, weak: true)\n}\n```",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 5,
      "reads": 39,
      "score": 117.8,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 120
    },
    {
      "id": 6641,
      "post_number": 4,
      "username": "Amman_Algenib",
      "name": "Amman",
      "created_at": "2024-12-15T07:49:38.685Z",
      "updated_at": "2024-12-15T07:50:06.611Z",
      "cooked": "<p>Sometimes life can be so simple <img src=\"https://forum.typst.app/images/emoji/apple/sunrise.png?v=12\" title=\":sunrise:\" class=\"emoji\" alt=\":sunrise:\" loading=\"lazy\" width=\"20\" height=\"20\">. How could I forget about weak spacings. Thanks a lot for your answer, <a class=\"mention\" href=\"/u/sjfhsjfh\">@sjfhsjfh</a> . That solved the issue.</p>",
      "raw": "Sometimes life can be so simple :sunrise:. How could I forget about weak spacings. Thanks a lot for your answer, @sjfhsjfh . That solved the issue.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 36,
      "score": 37.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 926
    },
    {
      "id": 10986,
      "post_number": 5,
      "username": "akoller",
      "name": "Alexander Koller",
      "created_at": "2025-04-13T14:09:22.460Z",
      "updated_at": "2025-04-13T14:09:22.460Z",
      "cooked": "<p>What an excellent and absurdly simple solution for a problem that I, too, have struggled with for months. Thanks!</p>",
      "raw": "What an excellent and absurdly simple solution for a problem that I, too, have struggled with for months. Thanks!",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 21,
      "score": 4.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1363
    }
  ],
  "scraped_at": "2025-06-10T09:53:39.590197"
}