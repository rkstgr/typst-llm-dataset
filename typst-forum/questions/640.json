{
  "topic_metadata": {
    "id": 640,
    "title": "How to increase the spacing between the number and the title of a heading?",
    "slug": "how-to-increase-the-spacing-between-the-number-and-the-title-of-a-heading",
    "posts_count": 25,
    "created_at": "2024-09-24T15:02:06.612Z",
    "last_posted_at": "2024-11-16T19:38:05.365Z",
    "views": 1820,
    "like_count": 23,
    "reply_count": 17,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 3,
    "accepted_answer_username": "PgBiel",
    "tags": [
      "spacing"
    ],
    "category_id": 5,
    "participant_count": 8,
    "word_count": 3229
  },
  "posts": [
    {
      "id": 2467,
      "post_number": 1,
      "username": "talb",
      "name": "talb",
      "created_at": "2024-09-24T15:02:06.725Z",
      "updated_at": "2024-09-24T15:09:41.897Z",
      "cooked": "<p>I want to increase the default spacing between the number and the title of a heading.</p>\n<p>This solution does <strong>not</strong> work, it inserts a vertical space before the heading.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set heading(numbering: \"1.1\")\n\nBlabla 1\n\n= This is test 1\n\n#show heading: it =&gt; [#h(1em) #it]\n\nBlabla 2\n\n= This is test 2\n\nBlabla 3\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/c06006f95181a1ceaa8a9a9c11d11e441a750a6e.png\" alt=\"image\" data-base62-sha1=\"rrPpwJRGi9zw2Mi5oDLEVtRGO06\" width=\"225\" height=\"248\"></p>",
      "raw": "I want to increase the default spacing between the number and the title of a heading.\n\nThis solution does **not** work, it inserts a vertical space before the heading.\n\n```typ\n#set heading(numbering: \"1.1\")\n\nBlabla 1\n\n= This is test 1\n\n#show heading: it => [#h(1em) #it]\n\nBlabla 2\n\n= This is test 2\n\nBlabla 3\n```\n\n![image|225x248](upload://rrPpwJRGi9zw2Mi5oDLEVtRGO06.png)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 119,
      "score": 8403.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 341
    },
    {
      "id": 2468,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-09-24T15:12:48.366Z",
      "updated_at": "2024-09-24T16:39:09.163Z",
      "cooked": "<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set heading(numbering: \"1.1\")\nBlabla 1\n= This is test 1\n#set heading(numbering: (..n) =&gt; h(1cm) + numbering(\"1.1\", ..n))\nBlabla 2\n= This is test 2\nBlabla 3\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/8a2ffed2e663349660ef15e21fec7d341852b790.png\" alt=\"image\" data-base62-sha1=\"jIsIG09p70pGwCjhUbn7s1yXuec\" width=\"343\" height=\"277\"></p>\n<p>You probably can also use <code>pad(left: 1cm, &lt;numbering&gt;)</code> instead of <code>h() + </code>, if you want. Or you can even <a href=\"https://forum.typst.app/t/how-to-increase-the-spacing-between-the-number-and-the-title-of-a-heading/640/3\">reconstruct the heading and embed the spacing there</a>, but <a href=\"https://forum.typst.app/t/how-to-increase-the-spacing-between-the-number-and-the-title-of-a-heading/640/4\">be sure to wrap it all in <code>block()</code></a>.</p>\n<p>However, note that if you plan on using a period (or other symbol) at the end of the numbering format string, this will introduce an unwanted behavior when referencing a heading label:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set heading(numbering: \"1.1.\")\n= A &lt;a&gt;\n@a.\n#set heading(numbering: (..n) =&gt; numbering(\"1.1.\", ..n))\n= B &lt;b&gt;\n@b.\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/5cd3b4f7a389c5bbaa893b35fc441dca3f49bc42.png\" alt=\"image\" data-base62-sha1=\"dfbvrNeNYpJn4gJFEEhhucJrD4S\" width=\"137\" height=\"204\"></p>\n<p>This is because with a custom/user function, Typst can’t know if the last period is mandatory or can be lifted when a period already exist (at the end of a sentence).</p>",
      "raw": "```typ\n#set heading(numbering: \"1.1\")\nBlabla 1\n= This is test 1\n#set heading(numbering: (..n) => h(1cm) + numbering(\"1.1\", ..n))\nBlabla 2\n= This is test 2\nBlabla 3\n```\n\n![image|343x277](upload://jIsIG09p70pGwCjhUbn7s1yXuec.png)\n\nYou probably can also use `pad(left: 1cm, <numbering>)` instead of `h() + `, if you want. Or you can even [reconstruct the heading and embed the spacing there](https://forum.typst.app/t/how-to-increase-the-spacing-between-the-number-and-the-title-of-a-heading/640/3), but [be sure to wrap it all in `block()`](https://forum.typst.app/t/how-to-increase-the-spacing-between-the-number-and-the-title-of-a-heading/640/4).\n\nHowever, note that if you plan on using a period (or other symbol) at the end of the numbering format string, this will introduce an unwanted behavior when referencing a heading label:\n\n```typ\n#set heading(numbering: \"1.1.\")\n= A <a>\n@a.\n#set heading(numbering: (..n) => numbering(\"1.1.\", ..n))\n= B <b>\n@b.\n```\n\n![image|137x204](upload://dfbvrNeNYpJn4gJFEEhhucJrD4S.png)\n\nThis is because with a custom/user function, Typst can't know if the last period is mandatory or can be lifted when a period already exist (at the end of a sentence).",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 112,
      "score": 152.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 2469,
      "post_number": 3,
      "username": "PgBiel",
      "name": "",
      "created_at": "2024-09-24T15:37:10.229Z",
      "updated_at": "2024-09-24T23:45:25.805Z",
      "cooked": "<p>If you want to have more spacing between “1.” and “Heading” in “1. Heading”, you can use a show rule to “rebuild” the heading from scratch:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set heading(numbering: \"1.\")\n#show heading: it =&gt; block(counter(heading).display(it.numbering) + h(2em) + it.body)\n\n= Hello world!\n\n== Hello.\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/1X/81ee903579031a650a859bf9e02e42875c993bc9.png\" data-download-href=\"https://forum.typst.app/uploads/default/81ee903579031a650a859bf9e02e42875c993bc9\" title=\"output with spacing between 1. and title\"><img src=\"https://forum.typst.app/uploads/default/optimized/1X/81ee903579031a650a859bf9e02e42875c993bc9_2_690x124.png\" alt=\"output with spacing between 1. and title\" data-base62-sha1=\"ixqIdFSHvev9Q3QPwUyrFzLxntv\" width=\"690\" height=\"124\" srcset=\"https://forum.typst.app/uploads/default/optimized/1X/81ee903579031a650a859bf9e02e42875c993bc9_2_690x124.png, https://forum.typst.app/uploads/default/optimized/1X/81ee903579031a650a859bf9e02e42875c993bc9_2_1035x186.png 1.5x, https://forum.typst.app/uploads/default/optimized/1X/81ee903579031a650a859bf9e02e42875c993bc9_2_1380x248.png 2x\" data-dominant-color=\"F7F7F7\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">output with spacing between 1. and title</span><span class=\"informations\">1500×271 21.5 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p><em>(Update [2024-09-24]: added <code>block()</code> around the replaced heading’s contents to ensure block spacing around headings is preserved, see <a href=\"https://forum.typst.app/t/how-to-increase-the-spacing-between-the-number-and-the-title-of-a-heading/640/4\" class=\"inline-onebox\">How to increase the spacing between the number and the title of a heading? - #4 by Eric</a>)</em></p>",
      "raw": "If you want to have more spacing between \"1.\" and \"Heading\" in \"1. Heading\", you can use a show rule to \"rebuild\" the heading from scratch:\n\n```typ\n#set heading(numbering: \"1.\")\n#show heading: it => block(counter(heading).display(it.numbering) + h(2em) + it.body)\n\n= Hello world!\n\n== Hello.\n```\n![output with spacing between 1. and title|690x124](upload://ixqIdFSHvev9Q3QPwUyrFzLxntv.png)\n\n_(Update [2024-09-24]: added `block()` around the replaced heading's contents to ensure block spacing around headings is preserved, see https://forum.typst.app/t/how-to-increase-the-spacing-between-the-number-and-the-title-of-a-heading/640/4)_",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 5,
      "reads": 102,
      "score": 175.4,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 2477,
      "post_number": 4,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2024-09-24T16:33:17.763Z",
      "updated_at": "2024-09-24T16:33:17.763Z",
      "cooked": "<p>One thing to note when rebuilding the heading like that is that you should wrap it in a block to keep the spacing behavior of the original heading. When just using <code>it.body</code>, the heading gets display inline (or here as a normal paragraph).</p>",
      "raw": "One thing to note when rebuilding the heading like that is that you should wrap it in a block to keep the spacing behavior of the original heading. When just using `it.body`, the heading gets display inline (or here as a normal paragraph).",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 4,
      "reads": 92,
      "score": 173.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 2504,
      "post_number": 5,
      "username": "PgBiel",
      "name": "",
      "created_at": "2024-09-24T23:45:44.465Z",
      "updated_at": "2024-09-24T23:45:44.465Z",
      "cooked": "<p>Thanks, I’ve updated my answer.</p>",
      "raw": "Thanks, I've updated my answer.",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 94,
      "score": 23.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 2516,
      "post_number": 6,
      "username": "sijo",
      "name": "",
      "created_at": "2024-09-25T06:57:00.376Z",
      "updated_at": "2024-09-25T06:57:15.657Z",
      "cooked": "<p>If you also want the additional spacing in the outline, you can just do <code>#set heading(numbering: \"1.1  \")</code> (with extra spaces in the string)</p>",
      "raw": "If you also want the additional spacing in the outline, you can just do `#set heading(numbering: \"1.1  \")` (with extra spaces in the string)",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 1,
      "reads": 90,
      "score": 53.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 2564,
      "post_number": 7,
      "username": "talb",
      "name": "talb",
      "created_at": "2024-09-25T12:15:25.751Z",
      "updated_at": "2024-09-25T12:15:25.751Z",
      "cooked": "<p>This solution is also very elegant! I’m not sure which answer to accept.</p>",
      "raw": "This solution is also very elegant! I'm not sure which answer to accept.",
      "reply_to_post_number": 6,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 82,
      "score": 26.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 341
    },
    {
      "id": 2675,
      "post_number": 8,
      "username": "PgBiel",
      "name": "",
      "created_at": "2024-09-26T20:12:17.197Z",
      "updated_at": "2024-09-26T20:22:29.429Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"sijo\" data-post=\"6\" data-topic=\"640\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/s/0A3649/48.png\" class=\"avatar\"> sijo:</div>\n<blockquote>\n<p>If you also want the additional spacing in the outline, you can just do <code>#set heading(numbering: \"1.1  \")</code> (with extra spaces in the string)</p>\n</blockquote>\n</aside>\n<p>This will affect <code>@references</code> as well, so it’s not recommended. Use a show rule similar to the one in <a href=\"https://forum.typst.app/t/how-to-increase-the-spacing-between-the-number-and-the-title-of-a-heading/640/3\">my answer</a> but for <code>outline.entry</code> instead. Note that it gets a bit longer though, since you also have to add <code>it.fill</code> and <code>it.page</code> after the title.</p>\n<p>You will also have to write <code>numbering(it.element.numbering, ..counter(heading).at(it.element.location()))</code> instead of just <code>counter(heading).display(it.element.numbering)</code> to ensure it uses the numbers from the heading’s original location instead of the outline entry’s location (which would always return the number 0, since the outline comes before any headings).</p>\n<p>Here’s the complete deal:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set heading(numbering: \"1.\")\n\n// Don't add spacing when there's no numbering (which is the case for the outline title)\n#show heading: it =&gt; if it.numbering == none { it } else { block(counter(heading).display(it.numbering) + h(2em) + it.body) }\n\n// NEW! Add spacing in the entries\n#show outline.entry: it =&gt; {\n  if it.element.func() == heading { // don't interfere with figure outlines (optional if you don't have one)\n    let head = it.element // just to make our code shorter\n    let number = numbering(head.numbering, ..counter(heading).at(head.location()))\n    let fill = box(width: 1fr, it.fill)  // ensure the fill doesn't occupy the full page width, just the available space (1fr)\n    [#number #h(2em) #head.body #fill #it.page]\n  }\n}\n\n#outline()\n= Hello world!\n\n== Hello world!\n\n= Hello world!\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/1X/657dee848c553ec501b7aa76a509f6dd711898aa.png\" data-download-href=\"https://forum.typst.app/uploads/default/657dee848c553ec501b7aa76a509f6dd711898aa\" title=\"output: spacing in heading and outline\"><img src=\"https://forum.typst.app/uploads/default/optimized/1X/657dee848c553ec501b7aa76a509f6dd711898aa_2_690x363.png\" alt=\"output: spacing in heading and outline\" data-base62-sha1=\"etQ1YQTUoBlLabVEErcIzDbTIxA\" width=\"690\" height=\"363\" srcset=\"https://forum.typst.app/uploads/default/optimized/1X/657dee848c553ec501b7aa76a509f6dd711898aa_2_690x363.png, https://forum.typst.app/uploads/default/optimized/1X/657dee848c553ec501b7aa76a509f6dd711898aa_2_1035x544.png 1.5x, https://forum.typst.app/uploads/default/original/1X/657dee848c553ec501b7aa76a509f6dd711898aa.png 2x\" data-dominant-color=\"F5F5F5\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">output: spacing in heading and outline</span><span class=\"informations\">1378×726 85.2 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "[quote=\"sijo, post:6, topic:640, full:true\"]\nIf you also want the additional spacing in the outline, you can just do `#set heading(numbering: \"1.1  \")` (with extra spaces in the string)\n[/quote]\n\n\nThis will affect `@references` as well, so it's not recommended. Use a show rule similar to the one in [my answer](https://forum.typst.app/t/how-to-increase-the-spacing-between-the-number-and-the-title-of-a-heading/640/3) but for `outline.entry` instead. Note that it gets a bit longer though, since you also have to add `it.fill` and `it.page` after the title.\n\nYou will also have to write `numbering(it.element.numbering, ..counter(heading).at(it.element.location()))` instead of just `counter(heading).display(it.element.numbering)` to ensure it uses the numbers from the heading's original location instead of the outline entry's location (which would always return the number 0, since the outline comes before any headings).\n\nHere's the complete deal:\n\n```typ\n#set heading(numbering: \"1.\")\n\n// Don't add spacing when there's no numbering (which is the case for the outline title)\n#show heading: it => if it.numbering == none { it } else { block(counter(heading).display(it.numbering) + h(2em) + it.body) }\n\n// NEW! Add spacing in the entries\n#show outline.entry: it => {\n  if it.element.func() == heading { // don't interfere with figure outlines (optional if you don't have one)\n    let head = it.element // just to make our code shorter\n    let number = numbering(head.numbering, ..counter(heading).at(head.location()))\n    let fill = box(width: 1fr, it.fill)  // ensure the fill doesn't occupy the full page width, just the available space (1fr)\n    [#number #h(2em) #head.body #fill #it.page]\n  }\n}\n\n#outline()\n= Hello world!\n\n== Hello world!\n\n= Hello world!\n```\n![output: spacing in heading and outline|690x363](upload://etQ1YQTUoBlLabVEErcIzDbTIxA.png)",
      "reply_to_post_number": 6,
      "reply_count": 2,
      "quote_count": 1,
      "like_count": 1,
      "reads": 75,
      "score": 90.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 2700,
      "post_number": 9,
      "username": "sijo",
      "name": "",
      "created_at": "2024-09-27T07:17:20.312Z",
      "updated_at": "2024-09-27T07:17:20.312Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"PgBiel\" data-post=\"8\" data-topic=\"640\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/p/F64C96/48.png\" class=\"avatar\"> PgBiel:</div>\n<blockquote>\n<p>This will affect <code>@references</code> as well, so it’s not recommended.</p>\n</blockquote>\n</aside>\n<p>Actually it doesn’t for some reason:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set heading(numbering: \"1.   \")\n= A &lt;a&gt;\nSee @a. \n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/1X/47d7391930be1a78d80d10f779e0002379b5a962.png\" alt=\"image\" data-base62-sha1=\"afx0QqK7Oz2MY0A0HYktydIhVwC\" width=\"121\" height=\"67\"></p>\n<p>or did you have something else in mind?</p>\n<p>In any case I agree it might be a hack rather than a clean solution, unless the ref behavior of stripping the space gets documented.</p>",
      "raw": "[quote=\"PgBiel, post:8, topic:640\"]\nThis will affect `@references` as well, so it’s not recommended.\n[/quote]\n\nActually it doesn't for some reason:\n\n```typ\n#set heading(numbering: \"1.   \")\n= A <a>\nSee @a. \n```\n![image|162x90, 75%](upload://afx0QqK7Oz2MY0A0HYktydIhVwC.png)\n\nor did you have something else in mind?\n\nIn any case I agree it might be a hack rather than a clean solution, unless the ref behavior of stripping the space gets documented.",
      "reply_to_post_number": 8,
      "reply_count": 2,
      "quote_count": 1,
      "like_count": 1,
      "reads": 60,
      "score": 42.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 2710,
      "post_number": 10,
      "username": "talb",
      "name": "talb",
      "created_at": "2024-09-27T09:57:27.704Z",
      "updated_at": "2024-09-27T09:57:27.704Z",
      "cooked": "<p>Indeed that’s why I used sijo’s solution in the end, Typst seems to do smart trailing space elision for references.</p>",
      "raw": "Indeed that's why I used sijo's solution in the end, Typst seems to do smart trailing space elision for references.",
      "reply_to_post_number": 9,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 57,
      "score": 21.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 341
    },
    {
      "id": 2719,
      "post_number": 11,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-09-27T11:44:39.172Z",
      "updated_at": "2024-09-27T11:44:39.172Z",
      "cooked": "<p>Hmm, this is slightly weird as I thought it won’t add any additional space to the heading because multiple spaces are generally always merged into one. But for references this rule does apply, although it removes <strong>all</strong> spaces, since the period is connected to the reference body.</p>",
      "raw": "Hmm, this is slightly weird as I thought it won't add any additional space to the heading because multiple spaces are generally always merged into one. But for references this rule does apply, although it removes **all** spaces, since the period is connected to the reference body.",
      "reply_to_post_number": 9,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 59,
      "score": 16.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 2725,
      "post_number": 12,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2024-09-27T13:52:09.370Z",
      "updated_at": "2024-09-27T13:52:09.370Z",
      "cooked": "<p>This doesn’t actually have to do with multiple spaces being merged into one. In references, the <em>trimmed</em> numbering pattern is used, which consists only of the actual number. Any prefixes and suffixes are removed. This is also why a reference to an equation with the numbering <code>\"(1)\"</code> shows as “Equation 1” instead of “Equation (1)”.</p>",
      "raw": "This doesn't actually have to do with multiple spaces being merged into one. In references, the _trimmed_ numbering pattern is used, which consists only of the actual number. Any prefixes and suffixes are removed. This is also why a reference to an equation with the numbering `\"(1)\"` shows as \"Equation 1\" instead of \"Equation (1)\".",
      "reply_to_post_number": 11,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 3,
      "reads": 59,
      "score": 91.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 2964,
      "post_number": 13,
      "username": "PgBiel",
      "name": "",
      "created_at": "2024-09-29T20:44:54.169Z",
      "updated_at": "2024-09-29T20:44:54.169Z",
      "cooked": "<p>Thanks, I wasn’t fully aware that spaces were also trimmed. Though I’d still be wary of issues popping up when e.g. manually invoking <code>numbering(it.numbering, ..numbers)</code> in a show rule.</p>",
      "raw": "Thanks, I wasn't fully aware that spaces were also trimmed. Though I'd still be wary of issues popping up when e.g. manually invoking `numbering(it.numbering, ..numbers)` in a show rule.",
      "reply_to_post_number": 12,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 57,
      "score": 11.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 5258,
      "post_number": 14,
      "username": "a_w",
      "name": "Alex",
      "created_at": "2024-11-07T13:09:04.181Z",
      "updated_at": "2024-11-07T13:09:04.181Z",
      "cooked": "<p>The example currently seems to fail with:</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/7/7126cc840d4bf1ff9be9d74dda2f1118bbaa2a2f.png\" data-download-href=\"https://forum.typst.app/uploads/default/7126cc840d4bf1ff9be9d74dda2f1118bbaa2a2f\" title=\"error\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/7/7126cc840d4bf1ff9be9d74dda2f1118bbaa2a2f_2_690x335.png\" alt=\"error\" data-base62-sha1=\"g8Z4Z3m0kF8MtvarErnZUcJxa11\" width=\"690\" height=\"335\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/7/7126cc840d4bf1ff9be9d74dda2f1118bbaa2a2f_2_690x335.png, https://forum.typst.app/uploads/default/optimized/2X/7/7126cc840d4bf1ff9be9d74dda2f1118bbaa2a2f_2_1035x502.png 1.5x, https://forum.typst.app/uploads/default/original/2X/7/7126cc840d4bf1ff9be9d74dda2f1118bbaa2a2f.png 2x\" data-dominant-color=\"333642\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">error</span><span class=\"informations\">1048×510 96.6 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div><br>\n<code>error: expected string or function, found none</code></p>\n<p>Could this be due to a 0.11 &lt;&gt; 0.12 change?</p>",
      "raw": "The example currently seems to fail with:\n\n![error|690x335](upload://g8Z4Z3m0kF8MtvarErnZUcJxa11.png)\n`error: expected string or function, found none`\n\nCould this be due to a 0.11 <> 0.12 change?",
      "reply_to_post_number": 8,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 0,
      "reads": 50,
      "score": 30.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 566
    },
    {
      "id": 5264,
      "post_number": 15,
      "username": "flokl",
      "name": "",
      "created_at": "2024-11-07T15:32:57.602Z",
      "updated_at": "2024-11-07T15:38:24.973Z",
      "cooked": "<p><a class=\"mention\" href=\"/u/a_w\">@a_w</a> it works for me on v0.12. Did you by any chance not add any heading numbering like <code>#set heading(numbering: \"1.\")</code>?</p>",
      "raw": "@a_w it works for me on v0.12. Did you by any chance not add any heading numbering like `#set heading(numbering: \"1.\")`?",
      "reply_to_post_number": 14,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 46,
      "score": 24.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 8
    },
    {
      "id": 5269,
      "post_number": 16,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2024-11-07T16:16:40.330Z",
      "updated_at": "2024-11-07T16:18:21.040Z",
      "cooked": "<p>If you have any unnumbered headings (e.g. bibliography), the given show rule will error as you can’t pass <code>none</code> to the <code>numbering</code> function. This is why I would always suggest putting the number (and the following space) in a conditional. For example, when adjusting <a class=\"mention\" href=\"/u/pgbiel\">@PgBiel</a>’s code from above:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show outline.entry: it =&gt; {\n  if it.element.func() == heading { // don't interfere with figure outlines (optional if you don't have one)\n    let head = it.element // just to make our code shorter\n    let number = if head.numbering != none {\n      numbering(head.numbering, ..counter(heading).at(head.location()))\n    }\n    let fill = box(width: 1fr, it.fill)  // ensure the fill doesn't occupy the full page width, just the available space (1fr)\n    [#number #h(2em, weak: true) #head.body #fill #it.page]\n  } else {\n    it // use default style for figure outlines\n  }\n}\n</code></pre>\n<p>By making the <code>2em</code> spacing weak, it will collapse if there is no number before it.</p>",
      "raw": "If you have any unnumbered headings (e.g. bibliography), the given show rule will error as you can't pass `none` to the `numbering` function. This is why I would always suggest putting the number (and the following space) in a conditional. For example, when adjusting @PgBiel's code from above:\n\n```typ\n#show outline.entry: it => {\n  if it.element.func() == heading { // don't interfere with figure outlines (optional if you don't have one)\n    let head = it.element // just to make our code shorter\n    let number = if head.numbering != none {\n      numbering(head.numbering, ..counter(heading).at(head.location()))\n    }\n    let fill = box(width: 1fr, it.fill)  // ensure the fill doesn't occupy the full page width, just the available space (1fr)\n    [#number #h(2em, weak: true) #head.body #fill #it.page]\n  } else {\n    it // use default style for figure outlines\n  }\n}\n```\n\nBy making the `2em` spacing weak, it will collapse if there is no number before it.",
      "reply_to_post_number": 14,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 3,
      "reads": 49,
      "score": 74.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 5271,
      "post_number": 17,
      "username": "a_w",
      "name": "Alex",
      "created_at": "2024-11-07T17:56:34.934Z",
      "updated_at": "2024-11-13T08:12:55.852Z",
      "cooked": "<p>You were both right, I have one unnumbered headline (Bibliography). Very, very helpful thanks so much! <img src=\"https://forum.typst.app/images/emoji/apple/pray.png?v=12\" title=\":pray:\" class=\"emoji\" alt=\":pray:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>Update: Original part of the post:</p>\n<blockquote>\n<p>This is more of a learning question, but maybe it is also useful for others (and actually related to the topic). I have this if-condition to make the level: 1 heads bold:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">    if head.level == 1 {\n      [*#number #h(1em, weak: true) #head.body #fill #it.page*]\n    } else {\n      [#number #h(1em, weak: true) #head.body #fill #it.page]\n    }\n</code></pre>\n<p>It works, but it is quite repetitive – is there a better, more elegant way to make such modifications? I don’t think there is a ternary, but I think I had situations like this a couple of times now and always wondered if I could do it better somehow.</p>\n</blockquote>\n<p>Update: My approach to making this shorter and easier to maintain was to store the string contruction in a variable and using that, instead of repeating the line. See <a href=\"https://forum.typst.app/t/how-to-increase-the-spacing-between-the-number-and-the-title-of-a-heading/640/19\">post 19</a>.</p>\n<blockquote>\n<p>And while I wrote this actually a follow-up question came up. My</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">[#number #h(1em, weak: true) #head.body #fill #it.page]\n#v(0.1pt, weak: true) // spaces way more than expected\n</code></pre>\n<p>I had in there now goes rampant even if I make it <code>0.01pt</code> I guess that is because the boxes/blocks collapsed and the vertical space stops that. I can get the expected result by making the <code>#v</code> negative, but it doesn’t seem like the “correct” solution? How would control of the vertical spacing be approach best?</p>\n</blockquote>\n<p>This is still relevant but might get answered below.</p>",
      "raw": "You were both right, I have one unnumbered headline (Bibliography). Very, very helpful thanks so much! 🙏\n\nUpdate: Original part of the post:\n> This is more of a learning question, but maybe it is also useful for others (and actually related to the topic). I have this if-condition to make the level: 1 heads bold:\n> \n> ```typ\n>     if head.level == 1 {\n>       [*#number #h(1em, weak: true) #head.body #fill #it.page*]\n>     } else {\n>       [#number #h(1em, weak: true) #head.body #fill #it.page]\n>     }\n> ```\n>\n> It works, but it is quite repetitive – is there a better, more elegant way to make such modifications? I don't think there is a ternary, but I think I had situations like this a couple of times now and always wondered if I could do it better somehow.\n\nUpdate: My approach to making this shorter and easier to maintain was to store the string contruction in a variable and using that, instead of repeating the line. See [post 19](https://forum.typst.app/t/how-to-increase-the-spacing-between-the-number-and-the-title-of-a-heading/640/19?u=a_w).\n\n> And while I wrote this actually a follow-up question came up. My\n> \n> ```typ\n> [#number #h(1em, weak: true) #head.body #fill #it.page]\n> #v(0.1pt, weak: true) // spaces way more than expected\n> ```\n> \n> I had in there now goes rampant even if I make it `0.01pt` I guess that is because the boxes/blocks collapsed and the vertical space stops that. I can get the expected result by making the `#v` negative, but it doesn't seem like the \"correct\" solution? How would control of the vertical spacing be approach best?\n\nThis is still relevant but might get answered below.",
      "reply_to_post_number": 16,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 49,
      "score": 29.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 566
    },
    {
      "id": 5307,
      "post_number": 18,
      "username": "a_w",
      "name": "Alex",
      "created_at": "2024-11-08T09:58:09.780Z",
      "updated_at": "2024-11-13T08:04:33.791Z",
      "cooked": "<p>Update: Original post, no longer relevant:</p>\n<blockquote>\n<p>Addendum: I also just realized the reconstructing the outline this way removed the link functionality within the document.</p>\n<p>Using</p>\n<pre><code class=\"lang-auto\">repr(head)\n</code></pre>\n<p>I found no obvious clue to “correctly” link to the headline (such as a label?).</p>\n<p>I can get</p>\n<pre><code class=\"lang-auto\">link(\"https://forum.typst.app\")[*#number #h(0.75em, weak: true) #head.body #fill #it.page*]\n</code></pre>\n<p>as a test to work. But not:</p>\n<pre><code class=\"lang-auto\">link(page: it.page)[*#number #h(0.75em, weak: true) #head.body #fill #it.page*]\n// or something like\nlink((page: int(it.page), x: 0pt, y: 0pt))[*#number #h(0.75em, weak: true) #head.body #fill #it.page*]\n</code></pre>\n<p>Fails with “error: expected string, dictionary, location, or label, found content”. or “error: expected integer, boolean, float, decimal, or string, found content”</p>\n</blockquote>\n<p>This can be solved by using <code>head.location()</code>, please see below.</p>",
      "raw": "Update: Original post, no longer relevant:\n\n> Addendum: I also just realized the reconstructing the outline this way removed the link functionality within the document.\n> \n> Using\n> ```\n> repr(head)\n> ```\n> \n> I found no obvious clue to \"correctly\" link to the headline (such as a label?).\n> \n> I can get\n> \n> ```\n> link(\"https://forum.typst.app\")[*#number #h(0.75em, weak: true) #head.body #fill #it.page*]\n> ```\n> \n> as a test to work. But not:\n> \n> ```\n> link(page: it.page)[*#number #h(0.75em, weak: true) #head.body #fill #it.page*]\n> // or something like\n> link((page: int(it.page), x: 0pt, y: 0pt))[*#number #h(0.75em, weak: true) #head.body #fill #it.page*]\n> ```\n> \n> Fails with \"error: expected string, dictionary, location, or label, found content\". or \"error: expected integer, boolean, float, decimal, or string, found content\"\n\nThis can be solved by using `head.location()`, please see below.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 43,
      "score": 13.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 566
    },
    {
      "id": 5572,
      "post_number": 19,
      "username": "a_w",
      "name": "Alex",
      "created_at": "2024-11-13T07:57:13.371Z",
      "updated_at": "2024-11-13T10:30:14.090Z",
      "cooked": "<p>This is what I came up with to get the links in the outline back:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show outline.entry: it =&gt; {\n  if it.element.func() == heading {\n    // don't interfere with figure outlines (optional if you don't have one)\n    let head = it.element // just to make our code shorter\n    let number = if head.numbering != none {\n      numbering(head.numbering, ..counter(heading).at(head.location()))\n    }\n    let fill = box(\n      width: 1fr,\n      it.fill,\n    ) // ensure the fill doesn't occupy the full page width, just the available space (1fr)\n    let toc-entry = box(\n      //stroke: 1pt + red, //used for debugging\n      link(head.location(), box(number + h(0.75em, weak: true) + head.body + fill + it.page)),\n    )\n    if head.level == 1 {\n      strong(toc-entry)\n    } else {\n      toc-entry\n    }\n    v(-0.4em, weak: true)\n  } else {\n    it // use default style for figure outlines\n  }\n}\n\n#outline(indent: 1.65em)\n#pagebreak()\n\n#set page(numbering: \"1\")\n#counter(page).update(1)\n\n#set heading(numbering: \"1.1 \")\n\n= First Headline 1\n== First Headline 2\n== Second Headline 2\n#lorem(800)\n= Second Headline 1\n= Third Headline 1\n#heading(numbering: none)[Literature]\n</code></pre>\n<details>\n<summary>\nResult</summary>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/f/f84bb62e9d0ea8fa9781a34244ab772538e72385.png\" data-download-href=\"https://forum.typst.app/uploads/default/f84bb62e9d0ea8fa9781a34244ab772538e72385\" title=\"outline-line-breaks\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/f/f84bb62e9d0ea8fa9781a34244ab772538e72385_2_536x500.png\" alt=\"outline-line-breaks\" data-base62-sha1=\"zqwCH9Pr7JvMrDdTR9kqCiZzqBL\" width=\"536\" height=\"500\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/f/f84bb62e9d0ea8fa9781a34244ab772538e72385_2_536x500.png, https://forum.typst.app/uploads/default/original/2X/f/f84bb62e9d0ea8fa9781a34244ab772538e72385.png 1.5x, https://forum.typst.app/uploads/default/original/2X/f/f84bb62e9d0ea8fa9781a34244ab772538e72385.png 2x\" data-dominant-color=\"F2F1F1\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">outline-line-breaks</span><span class=\"informations\">790×736 97.9 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n</details>\n<p>What I couldn’t solve:</p>\n<ul>\n<li>\n<p>If you need indents for everything below level 1 you get line breaks, messing up the spacing, because the indent “overfills” due to the <code>1fr</code> fill. <s>I guess it would be possible to leave the indent and add a own spacing instead, substracting this spacing from the <code>1fr</code>, but then the code would bloat even further and another if/loop for subsequent levels would be necessary.</s> Update: I tried that but subsctracting from fractions is not possible or at least would involve further measuring steps. Maybe there is a compact/elegant solution I’m just not seeing? I also tried <code>pad()</code> for the indents, but that leads to the same problem, just that the line breaks is below instead of above.</p>\n</li>\n<li>\n<p>The spacing needs the weird <code>v(-0.4em, weak: true)</code>, which I suppose should not be necessary if done right – I think my code introduces some space where it should not?</p>\n</li>\n</ul>\n<p>Here is an <a href=\"https://typst.app/project/wXVIchVRKhV-yDcwJ44euj\">editable link</a> to see the example.</p>\n<p>Would be really great if someone more experienced could take a look. <img src=\"https://forum.typst.app/images/emoji/apple/pray.png?v=12\" title=\":pray:\" class=\"emoji\" alt=\":pray:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "This is what I came up with to get the links in the outline back:\n\n```typ\n#show outline.entry: it => {\n  if it.element.func() == heading {\n    // don't interfere with figure outlines (optional if you don't have one)\n    let head = it.element // just to make our code shorter\n    let number = if head.numbering != none {\n      numbering(head.numbering, ..counter(heading).at(head.location()))\n    }\n    let fill = box(\n      width: 1fr,\n      it.fill,\n    ) // ensure the fill doesn't occupy the full page width, just the available space (1fr)\n    let toc-entry = box(\n      //stroke: 1pt + red, //used for debugging\n      link(head.location(), box(number + h(0.75em, weak: true) + head.body + fill + it.page)),\n    )\n    if head.level == 1 {\n      strong(toc-entry)\n    } else {\n      toc-entry\n    }\n    v(-0.4em, weak: true)\n  } else {\n    it // use default style for figure outlines\n  }\n}\n\n#outline(indent: 1.65em)\n#pagebreak()\n\n#set page(numbering: \"1\")\n#counter(page).update(1)\n\n#set heading(numbering: \"1.1 \")\n\n= First Headline 1\n== First Headline 2\n== Second Headline 2\n#lorem(800)\n= Second Headline 1\n= Third Headline 1\n#heading(numbering: none)[Literature]\n```\n\n[details=\"Result\"]\n![outline-line-breaks|536x500](upload://zqwCH9Pr7JvMrDdTR9kqCiZzqBL.png)\n[/details]\n\nWhat I couldn't solve:\n\n- If you need indents for everything below level 1 you get line breaks, messing up the spacing, because the indent \"overfills\" due to the `1fr` fill. ~~I guess it would be possible to leave the indent and add a own spacing instead, substracting this spacing from the `1fr`, but then the code would bloat even further and another if/loop for subsequent levels would be necessary.~~ Update: I tried that but subsctracting from fractions is not possible or at least would involve further measuring steps. Maybe there is a compact/elegant solution I'm just not seeing? I also tried `pad()` for the indents, but that leads to the same problem, just that the line breaks is below instead of above.\n\n- The spacing needs the weird `v(-0.4em, weak: true)`, which I suppose should not be necessary if done right – I think my code introduces some space where it should not?\n\nHere is an [editable link](https://typst.app/project/wXVIchVRKhV-yDcwJ44euj) to see the example.\n\nWould be really great if someone more experienced could take a look. 🙏",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 37,
      "score": 402.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 566
    },
    {
      "id": 5677,
      "post_number": 20,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-15T17:11:11.554Z",
      "updated_at": "2024-11-15T17:21:17.077Z",
      "cooked": "<p>Hey what do you say about this solution?</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">// style outline: chapters as bold and without dots\n#show outline.entry: entry =&gt; {\n  if entry.element.func() == heading {\n    // because we modify entries by replacing them with new ones, we need to recognize them to avoid endless recursion\n    if entry.at(\"label\", default: none) == &lt;modified-outline-entry&gt; {\n      entry\n    } else {\n      // we destructure entry, change fields and then reassemble the entry\n      let fields = entry.fields()\n      let he = fields.element\n      let number = if he.numbering != none {\n        numbering(he.numbering, ..counter(heading).at(he.location()))\n      }\n      let prefix = if number != none [ #number #h(3em) ]\n      fields.body = [ #prefix #he.body ]\n      let newe = outline.entry(..fields.values())\n      [ #newe &lt;modified-outline-entry&gt; ]\n    }\n  } else {\n    entry\n  }\n}\n</code></pre>\n<p>Here the entry-object gets deconstructed into a dictionary. Then the crucial field (body) is replaced with a new one. And at the end a new entry object is constructed and returned. Because it’s a new entry object the show rule is called again. But this time the entry object has a specific label attached to it. This way we skip the destruct-modify-construct case this time.</p>\n<p>It looks like this:<br>\n<img src=\"https://forum.typst.app/uploads/default/original/2X/8/85d44500a2f0bba708dbedb93f6c31caef1a0b84.png\" alt=\"image\" data-base62-sha1=\"j5UhUMa0T90xRcqkNNsxpGZ2ksI\" width=\"544\" height=\"311\"><br>\nNote that your <code>indent: 1.65em</code> as outline parameter now also takes effect. I guess it didn’t in your solution because you built an entry dummy entirely from scratch.</p>",
      "raw": "Hey what do you say about this solution?\n\n```typst\n// style outline: chapters as bold and without dots\n#show outline.entry: entry => {\n  if entry.element.func() == heading {\n    // because we modify entries by replacing them with new ones, we need to recognize them to avoid endless recursion\n    if entry.at(\"label\", default: none) == <modified-outline-entry> {\n      entry\n    } else {\n      // we destructure entry, change fields and then reassemble the entry\n      let fields = entry.fields()\n      let he = fields.element\n      let number = if he.numbering != none {\n        numbering(he.numbering, ..counter(heading).at(he.location()))\n      }\n      let prefix = if number != none [ #number #h(3em) ]\n      fields.body = [ #prefix #he.body ]\n      let newe = outline.entry(..fields.values())\n      [ #newe <modified-outline-entry> ]\n    }\n  } else {\n    entry\n  }\n}\n```\n\nHere the entry-object gets deconstructed into a dictionary. Then the crucial field (body) is replaced with a new one. And at the end a new entry object is constructed and returned. Because it's a new entry object the show rule is called again. But this time the entry object has a specific label attached to it. This way we skip the destruct-modify-construct case this time.\n\nIt looks like this:\n![image|544x311](upload://j5UhUMa0T90xRcqkNNsxpGZ2ksI.png)\nNote that your `indent: 1.65em` as outline parameter now also takes effect. I guess it didn't in your solution because you built an entry dummy entirely from scratch.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 33,
      "score": 71.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 5697,
      "post_number": 21,
      "username": "a_w",
      "name": "Alex",
      "created_at": "2024-11-16T10:26:47.163Z",
      "updated_at": "2024-11-16T10:26:47.163Z",
      "cooked": "<p>I say it is great <img src=\"https://forum.typst.app/images/emoji/apple/face_holding_back_tears.png?v=12\" title=\":face_holding_back_tears:\" class=\"emoji\" alt=\":face_holding_back_tears:\" loading=\"lazy\" width=\"20\" height=\"20\"> your approach is way more elegant as it doesn’t make it necessary to reassemble the links. Thank you very much!</p>\n<p>Maybe you had another version of your code that made the first level bold, because in the pasted example, that doesn’t seem to be the case?</p>\n<p>So this is what I ended up with:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">// style outline\n#show outline.entry: entry =&gt; {\n  if entry.element.func() == heading {\n    // because we modify entries by replacing them with new ones, we need to recognize them to avoid endless recursion\n    if entry.at(\"label\", default: none) == &lt;modified-outline-entry&gt; {\n      entry\n    } else {\n      // we destructure entry, change fields and then reassemble the entry\n      let fields = entry.fields()\n      let he = fields.element\n      let number = if he.numbering != none {\n        numbering(he.numbering, ..counter(heading).at(he.location()))\n      }\n      let prefix = if number != none [ #number #h(0.8em) ]\n      fields.body = [ #prefix #he.body ]\n      let newe = outline.entry(..fields.values())\n      if entry.level == 1 {\n        [ *#newe &lt;modified-outline-entry&gt;* ]  \n      }\n      else if entry.level == 3 {\n        [ #h(0.6em) #newe &lt;modified-outline-entry&gt; ]\n      }\n      else {\n        [ #newe &lt;modified-outline-entry&gt; ]  \n      }\n      v(-0.4em, weak: true)\n    }\n  } else {\n    entry\n  }\n}\n</code></pre>\n<p>Basically just adding/changing this part:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">      if entry.level == 1 {\n        [ *#newe &lt;modified-outline-entry&gt;* ]  \n      }\n      else if entry.level == 3 {\n        [ #h(0.6em) #newe &lt;modified-outline-entry&gt; ]\n      }\n      else {\n        [ #newe &lt;modified-outline-entry&gt; ]  \n      }\n      v(-0.4em, weak: true)\n</code></pre>\n<p>To:</p>\n<ul>\n<li>Make level 1 bold</li>\n<li>Correct the level 3 indent (this wasn’t in the original question/case it come up once I added a level 3 headline in my paper <img src=\"https://forum.typst.app/images/emoji/apple/sweat_smile.png?v=12\" title=\":sweat_smile:\" class=\"emoji\" alt=\":sweat_smile:\" loading=\"lazy\" width=\"20\" height=\"20\">)</li>\n<li>Add vertical spacing (still in the weird negative way, but hey… it works)</li>\n</ul>\n<p>Overall this feels like a lot of hassle to style outlines currently, especially since even the outrageous package suffers from some of the problems (especially the unwanted line break if a space is added between prefix-number and body).</p>\n<p>But I think your solution is as good as currently possibly. So everybody landing here, please give issues like the on of PgBiel <a href=\"https://github.com/typst/typst/issues/1424\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Add outline spacing/gutter · Issue #1424 · typst/typst · GitHub</a> some thumbs up <img src=\"https://forum.typst.app/images/emoji/apple/up.png?v=12\" title=\":up:\" class=\"emoji\" alt=\":up:\" loading=\"lazy\" width=\"20\" height=\"20\"><img src=\"https://forum.typst.app/images/emoji/apple/smiling_face.png?v=12\" title=\":smiling_face:\" class=\"emoji\" alt=\":smiling_face:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>The result:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/9/9cfc4842213a41fc889a9937aa41bd762536e1ea.png\" data-download-href=\"https://forum.typst.app/uploads/default/9cfc4842213a41fc889a9937aa41bd762536e1ea\" title=\"outline-result\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/9/9cfc4842213a41fc889a9937aa41bd762536e1ea_2_690x238.png\" alt=\"outline-result\" data-base62-sha1=\"moKZQUTyZvOZAoBRbZmzAjAyARQ\" width=\"690\" height=\"238\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/9/9cfc4842213a41fc889a9937aa41bd762536e1ea_2_690x238.png, https://forum.typst.app/uploads/default/optimized/2X/9/9cfc4842213a41fc889a9937aa41bd762536e1ea_2_1035x357.png 1.5x, https://forum.typst.app/uploads/default/optimized/2X/9/9cfc4842213a41fc889a9937aa41bd762536e1ea_2_1380x476.png 2x\" data-dominant-color=\"F6F6F6\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">outline-result</span><span class=\"informations\">1506×520 97.9 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "I say it is great 🥹 your approach is way more elegant as it doesn't make it necessary to reassemble the links. Thank you very much!\n\nMaybe you had another version of your code that made the first level bold, because in the pasted example, that doesn't seem to be the case?\n\nSo this is what I ended up with:\n\n```typ\n// style outline\n#show outline.entry: entry => {\n  if entry.element.func() == heading {\n    // because we modify entries by replacing them with new ones, we need to recognize them to avoid endless recursion\n    if entry.at(\"label\", default: none) == <modified-outline-entry> {\n      entry\n    } else {\n      // we destructure entry, change fields and then reassemble the entry\n      let fields = entry.fields()\n      let he = fields.element\n      let number = if he.numbering != none {\n        numbering(he.numbering, ..counter(heading).at(he.location()))\n      }\n      let prefix = if number != none [ #number #h(0.8em) ]\n      fields.body = [ #prefix #he.body ]\n      let newe = outline.entry(..fields.values())\n      if entry.level == 1 {\n        [ *#newe <modified-outline-entry>* ]  \n      }\n      else if entry.level == 3 {\n        [ #h(0.6em) #newe <modified-outline-entry> ]\n      }\n      else {\n        [ #newe <modified-outline-entry> ]  \n      }\n      v(-0.4em, weak: true)\n    }\n  } else {\n    entry\n  }\n}\n```\n\nBasically just adding/changing this part:\n\n```typ\n      if entry.level == 1 {\n        [ *#newe <modified-outline-entry>* ]  \n      }\n      else if entry.level == 3 {\n        [ #h(0.6em) #newe <modified-outline-entry> ]\n      }\n      else {\n        [ #newe <modified-outline-entry> ]  \n      }\n      v(-0.4em, weak: true)\n```\n\nTo:\n- Make level 1 bold\n- Correct the level 3 indent (this wasn't in the original question/case it come up once I added a level 3 headline in my paper 😅)\n- Add vertical spacing (still in the weird negative way, but hey… it works)\n\nOverall this feels like a lot of hassle to style outlines currently, especially since even the outrageous package suffers from some of the problems (especially the unwanted line break if a space is added between prefix-number and body).\n\nBut I think your solution is as good as currently possibly. So everybody landing here, please give issues like the on of PgBiel https://github.com/typst/typst/issues/1424 some thumbs up 🆙☺️\n\nThe result:\n![outline-result|690x238](upload://moKZQUTyZvOZAoBRbZmzAjAyARQ.png)",
      "reply_to_post_number": 20,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 32,
      "score": 21.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 566
    },
    {
      "id": 5703,
      "post_number": 22,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-16T18:28:18.069Z",
      "updated_at": "2024-11-16T18:28:18.069Z",
      "cooked": "<p>Some further thoughts on your last code snippet:</p>\n<p>A)<br>\nI prefer to change the weight or add a strong function. This makes it more obvious what is different in the two cases:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#{\n      let w = if entry.level == 1 { \"bold\" } else { \"regular\" }\n      text(weight: w)[ #newe &lt;modified-outline-entry&gt; ] \n}\n</code></pre>\n<p>But this is probably really just preference.</p>\n<p>B)<br>\nI saw that you added another case for <code>level == 3</code> with even more indent. Maybe you should then use a separate function to control the indent:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let indent_func = i =&gt; {\n  (0em, 1.5em, 3.6em).at(i)\n}\n#outline(indent: indent_func)\n</code></pre>\n<p>This again separates the different logical units.</p>\n<details>\n<summary>\nOutput</summary>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/8/8178dad43d846fa6fe4ba8eed739f073f8a557ad.png\" data-download-href=\"https://forum.typst.app/uploads/default/8178dad43d846fa6fe4ba8eed739f073f8a557ad\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/8/8178dad43d846fa6fe4ba8eed739f073f8a557ad_2_690x304.png\" alt=\"image\" data-base62-sha1=\"itmwtTdJQwa6d9tB7OEIYEvDcEl\" width=\"690\" height=\"304\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/8/8178dad43d846fa6fe4ba8eed739f073f8a557ad_2_690x304.png, https://forum.typst.app/uploads/default/original/2X/8/8178dad43d846fa6fe4ba8eed739f073f8a557ad.png 1.5x, https://forum.typst.app/uploads/default/original/2X/8/8178dad43d846fa6fe4ba8eed739f073f8a557ad.png 2x\" data-dominant-color=\"F5F5F5\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">978×431 79.5 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n</details>",
      "raw": "Some further thoughts on your last code snippet:\n\nA)\nI prefer to change the weight or add a strong function. This makes it more obvious what is different in the two cases:\n```typst\n#{\n      let w = if entry.level == 1 { \"bold\" } else { \"regular\" }\n      text(weight: w)[ #newe <modified-outline-entry> ] \n}\n```\nBut this is probably really just preference.\n\nB)\nI saw that you added another case for `level == 3` with even more indent. Maybe you should then use a separate function to control the indent:\n```typst\n#let indent_func = i => {\n  (0em, 1.5em, 3.6em).at(i)\n}\n#outline(indent: indent_func)\n```\nThis again separates the different logical units.\n\n[details=\"Output\"]\n![image|690x304](upload://itmwtTdJQwa6d9tB7OEIYEvDcEl.png)\n[/details]",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 28,
      "score": 30.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 5705,
      "post_number": 23,
      "username": "a_w",
      "name": "Alex",
      "created_at": "2024-11-16T18:57:28.216Z",
      "updated_at": "2024-11-16T18:57:28.216Z",
      "cooked": "<p>Wow, thanks again, great additions.</p>\n<blockquote>\n<p>But this is probably really just preference.</p>\n</blockquote>\n<p>No, no, I actually asked about exactly that case above. So how it could be improved/reduced the repetitiveness. So perfect, learned something, I wondered a couple of times how others solve these cases.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let indent_func = i =&gt; {\n  (0em, 1.5em, 3.6em).at(i)\n}\n#outline(indent: indent_func)\n</code></pre>\n<p>Black magic. How does that even work <img src=\"https://forum.typst.app/images/emoji/apple/open_mouth.png?v=12\" title=\":open_mouth:\" class=\"emoji\" alt=\":open_mouth:\" loading=\"lazy\" width=\"20\" height=\"20\"> <code>i</code>… no loop, no count up, no nothing?</p>",
      "raw": "Wow, thanks again, great additions.\n\n> But this is probably really just preference.\n\nNo, no, I actually asked about exactly that case above. So how it could be improved/reduced the repetitiveness. So perfect, learned something, I wondered a couple of times how others solve these cases.\n\n```typ\n#let indent_func = i => {\n  (0em, 1.5em, 3.6em).at(i)\n}\n#outline(indent: indent_func)\n```\n\nBlack magic. How does that even work 😮 `i`… no loop, no count up, no nothing?",
      "reply_to_post_number": 22,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 27,
      "score": 10.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 566
    },
    {
      "id": 5706,
      "post_number": 24,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-16T19:22:09.542Z",
      "updated_at": "2024-11-16T19:26:58.788Z",
      "cooked": "<p>(Now our discussion is not about the original topic anymore xD)</p>\n<p>My intuition told me that the devs probably added the option to provide a function for the outline indent … and indeed they did: <a href=\"https://typst.app/docs/reference/model/outline/#parameters-indent\" class=\"inline-onebox\">Outline Function – Typst Documentation</a></p>\n<p>I think the part in the documentation about the function is very well written. You can provide a function that takes one number as argument and returns a relative length or even content. (I think the documentation is mostly very worth to read and often provides answers. If you are used to this.)</p>\n<p>So i defined the function <code>indent_func</code>. In it I create an array with 3 elements and return the element at position <code>i</code>, which is the level of the entry.</p>\n<p>All three following code snippets should be equivalent to the above:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let arr = (0em, 1.5em, 3.6em)\n#let func(i) = arr.at(i)\n#outline(indent: func)\n</code></pre>\n<p>and</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#outline(indent: i =&gt; (0em, 1.5em, 3.6em).at(i))\n</code></pre>\n<p>I like this the most:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let indent_func(i) = (0em, 1.5em, 3.6em).at(i)\n#outline(indent: indent_func)\n</code></pre>\n<p>(That being said: my original function is somewhat ugly as it states an anonymous function which is then given an explicit name.)</p>\n<p>If you are not familiar with the concepts used here, you might want to read about:</p>\n<ul>\n<li>arrays: <a href=\"https://typst.app/docs/reference/foundations/array/\">array (docs)</a></li>\n<li>functions: <a href=\"https://typst.app/docs/reference/foundations/function/#unnamed\">unnamed functions (docs)</a></li>\n</ul>",
      "raw": "(Now our discussion is not about the original topic anymore xD)\n\nMy intuition told me that the devs probably added the option to provide a function for the outline indent ... and indeed they did: https://typst.app/docs/reference/model/outline/#parameters-indent\n\nI think the part in the documentation about the function is very well written. You can provide a function that takes one number as argument and returns a relative length or even content. (I think the documentation is mostly very worth to read and often provides answers. If you are used to this.)\n\nSo i defined the function `indent_func`. In it I create an array with 3 elements and return the element at position `i`, which is the level of the entry.\n\nAll three following code snippets should be equivalent to the above:\n```typst\n#let arr = (0em, 1.5em, 3.6em)\n#let func(i) = arr.at(i)\n#outline(indent: func)\n```\nand\n```typst\n#outline(indent: i => (0em, 1.5em, 3.6em).at(i))\n```\n\nI like this the most:\n```typst\n#let indent_func(i) = (0em, 1.5em, 3.6em).at(i)\n#outline(indent: indent_func)\n```\n\n(That being said: my original function is somewhat ugly as it states an anonymous function which is then given an explicit name.)\n\nIf you are not familiar with the concepts used here, you might want to read about:\n- arrays: [array (docs)](https://typst.app/docs/reference/foundations/array/)\n- functions: [unnamed functions (docs)](https://typst.app/docs/reference/foundations/function/#unnamed)",
      "reply_to_post_number": 23,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 30,
      "score": 31.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 5707,
      "post_number": 25,
      "username": "a_w",
      "name": "Alex",
      "created_at": "2024-11-16T19:38:05.365Z",
      "updated_at": "2024-11-16T19:38:05.365Z",
      "cooked": "<blockquote>\n<p>(Now our discussion is not about the original topic anymore xD)</p>\n</blockquote>\n<p>Well, it explains how the solution works <img src=\"https://forum.typst.app/images/emoji/apple/blush.png?v=12\" title=\":blush:\" class=\"emoji\" alt=\":blush:\" loading=\"lazy\" width=\"20\" height=\"20\"> thanks for taking the time to explain!</p>\n<p>And for anyone landing here because you want the number of your outline indented/add space before the numbering, make the level 1 headings bold and horizontally align the levels in the outline. Here is the refactored code you can copy and paste:</p>\n<p>(Adjust em-values as needed)</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show outline.entry: entry =&gt; {\n  if entry.element.func() == heading {\n    // because we modify entries by replacing them with new ones, we need to recognize them to avoid endless recursion\n    if entry.at(\"label\", default: none) == &lt;modified-outline-entry&gt; {\n      entry\n    } else {\n      // we destructure entry, change fields and then reassemble the entry\n      let fields = entry.fields()\n      let he = fields.element\n      let number = if he.numbering != none {\n        numbering(he.numbering, ..counter(heading).at(he.location()))\n      }\n      let prefix = if number != none [ #number #h(0.5em) ]\n      fields.body = [ #prefix #he.body ]\n      let newe = outline.entry(..fields.values())\n      let w = if entry.level == 1 {\n        \"bold\"\n      } else {\n        \"regular\"\n      }\n      text(weight: w)[ #newe &lt;modified-outline-entry&gt; ]\n      v(-0.4em, weak: true)\n    }\n  } else {\n    entry\n  }\n}\n\n#let indent_level(i) = (0em, 1.575em, 4em).at(i)\n#outline(indent: indent_level)\n</code></pre>\n<p>PS: <a class=\"mention\" href=\"/u/pgbiel\">@PgBiel</a> since this topic evolved from numbering and adjusting the spacing of headlines to also control said spacing in the outline, but provides solutions for both now, maybe it would make sense to rename the topic to reflect that? <img src=\"https://forum.typst.app/images/emoji/apple/smiling_face.png?v=12\" title=\":smiling_face:\" class=\"emoji\" alt=\":smiling_face:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "> (Now our discussion is not about the original topic anymore xD)\n\nWell, it explains how the solution works 😊 thanks for taking the time to explain!\n\nAnd for anyone landing here because you want the number of your outline indented/add space before the numbering, make the level 1 headings bold and horizontally align the levels in the outline. Here is the refactored code you can copy and paste:\n\n(Adjust em-values as needed) \n\n```typ\n#show outline.entry: entry => {\n  if entry.element.func() == heading {\n    // because we modify entries by replacing them with new ones, we need to recognize them to avoid endless recursion\n    if entry.at(\"label\", default: none) == <modified-outline-entry> {\n      entry\n    } else {\n      // we destructure entry, change fields and then reassemble the entry\n      let fields = entry.fields()\n      let he = fields.element\n      let number = if he.numbering != none {\n        numbering(he.numbering, ..counter(heading).at(he.location()))\n      }\n      let prefix = if number != none [ #number #h(0.5em) ]\n      fields.body = [ #prefix #he.body ]\n      let newe = outline.entry(..fields.values())\n      let w = if entry.level == 1 {\n        \"bold\"\n      } else {\n        \"regular\"\n      }\n      text(weight: w)[ #newe <modified-outline-entry> ]\n      v(-0.4em, weak: true)\n    }\n  } else {\n    entry\n  }\n}\n\n#let indent_level(i) = (0em, 1.575em, 4em).at(i)\n#outline(indent: indent_level)\n```\n\nPS: @PgBiel since this topic evolved from numbering and adjusting the spacing of headlines to also control said spacing in the outline, but provides solutions for both now, maybe it would make sense to rename the topic to reflect that? ☺️",
      "reply_to_post_number": 24,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 32,
      "score": 6.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 566
    }
  ],
  "scraped_at": "2025-06-10T09:58:11.995166"
}