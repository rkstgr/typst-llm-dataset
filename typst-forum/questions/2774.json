{
  "topic_metadata": {
    "id": 2774,
    "title": "How can one substitute variables in raw blocks?",
    "slug": "how-can-one-substitute-variables-in-raw-blocks",
    "posts_count": 4,
    "created_at": "2025-02-11T14:28:50.592Z",
    "last_posted_at": "2025-02-11T15:41:24.897Z",
    "views": 167,
    "like_count": 1,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "Electron_Wizard",
    "tags": [
      "scripting"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 360
  },
  "posts": [
    {
      "id": 8471,
      "post_number": 1,
      "username": "Cass",
      "name": "Cass",
      "created_at": "2025-02-11T14:28:51.000Z",
      "updated_at": "2025-02-11T16:58:44.533Z",
      "cooked": "<p>Hi all,</p>\n<p>New to Typst, so sorry if this is a rather obvious/silly question.<br>\nAs I understand it, is it possible to perform variable substitutions in raw blocks, like</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/codly:1.2.0\": *\n#import \"@preview/codly-languages:0.1.1\": *\n#show: codly-init.with()\n\n#let version = \"1.0\"\n\n#codly(enabled: true, number-format: none)\n```bash\n#!/bin/bash\n\n# How could I replace $version?\necho $version\n\n```\n</code></pre>\n<p>Thanks in advance<br>\nBrgds</p>",
      "raw": "\nHi all,\n\nNew to Typst, so sorry if this is a rather obvious/silly question.\nAs I understand it, is it possible to perform variable substitutions in raw blocks, like\n\n````typ\n#import \"@preview/codly:1.2.0\": *\n#import \"@preview/codly-languages:0.1.1\": *\n#show: codly-init.with()\n\n#let version = \"1.0\"\n\n#codly(enabled: true, number-format: none)\n```bash\n#!/bin/bash\n\n# How could I replace $version?\necho $version\n\n```\n````\nThanks in advance \nBrgds",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 329.8,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1179
    },
    {
      "id": 8472,
      "post_number": 2,
      "username": "Electron_Wizard",
      "name": "Electron Wizard",
      "created_at": "2025-02-11T14:33:27.161Z",
      "updated_at": "2025-02-11T14:36:21.367Z",
      "cooked": "<p>By using the <code>#raw</code> function instead of the <em>shorthand</em> form of it:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">```&lt;lang&gt;\n...\n```\n\nversus\n\n#raw(lang: \"lang\", \"...\")\n</code></pre>\n<p>you can include variables into the text:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#import \"@preview/codly:1.2.0\": *\n#import \"@preview/codly-languages:0.1.1\": *\n#show: codly-init.with()\n\n#let version = \"1.0\"\n\n#codly(enabled: true, number-format: none)\n#raw(block: true,\n     \"#!/bin/bash\necho \" + version, // must be at column 0 (else adds spaces)\n     lang: \"bash\"\n)\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/1/1f375428219a65ddda746d0c517ce0dcf1c3669d.png\" alt=\"image\" data-base62-sha1=\"4s9lfWqaNM1x5LgxLQB5KT8DIXX\" width=\"479\" height=\"85\"></p>\n<p>Hope that helps :)</p>",
      "raw": "By using the `#raw` function instead of the _shorthand_ form of it:\n````typst\n```<lang>\n...\n```\n\nversus\n\n#raw(lang: \"lang\", \"...\")\n````\nyou can include variables into the text:\n\n````typst\n#import \"@preview/codly:1.2.0\": *\n#import \"@preview/codly-languages:0.1.1\": *\n#show: codly-init.with()\n\n#let version = \"1.0\"\n\n#codly(enabled: true, number-format: none)\n#raw(block: true,\n     \"#!/bin/bash\necho \" + version, // must be at column 0 (else adds spaces)\n     lang: \"bash\"\n)\n````\n\n![image|479x85](upload://4s9lfWqaNM1x5LgxLQB5KT8DIXX.png)\n\nHope that helps :)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 25,
      "score": 60.0,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 997
    },
    {
      "id": 8473,
      "post_number": 3,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-02-11T15:22:10.100Z",
      "updated_at": "2025-02-11T15:24:36.832Z",
      "cooked": "<p>you can use <a href=\"https://typst.app/universe/package/crudo\">crudo</a> to help yourself with that. An alternative approach that fails here would be using a show rule.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let version = \"1.0\"\n#let code = ```bash\n#!/bin/bash\n\n# How could I replace $version?\necho $version\n\n```\n\n= No substitution\n\n#code\n\n= Substitution (attempt) using `show`\n\n#{\n  show \"$version\": version\n  code\n}\n\n= Substitution using `crudo`\n\n#import \"@preview/crudo:0.1.1\"\n#crudo.map(code, line =&gt; line.replace(\"$version\", version))\n\n= Substitution using `crudo`, ignoring comments\n\n#import \"@preview/crudo:0.1.1\"\n#crudo.map(code, line =&gt; {\n  if line.trim().starts-with(\"#\") { return line }\n  line.replace(\"$version\", version)\n})\n</code></pre>\n<p>The substitution attempt using <code>show</code> only succeeds in the comment because the <code>$version</code> in the actual code is parsed as two separate tokens (for syntax highlighting purposes). Replacing <code>$version</code> with e.g. <code>VERSION</code> should fix that, though.</p>\n<p>Alternatively, Crudo allows you to treat raw blocks more like arrays of strings (lines) that content elements. In particular, <code>crudo.map()</code> will replace each line with the result of the function, which can then replace stuff. Since it’s line-by-line, you can easily check if you’re in a comment line, just in case you want to only replace the code occurrences of the version.</p>",
      "raw": "you can use [crudo](https://typst.app/universe/package/crudo) to help yourself with that. An alternative approach that fails here would be using a show rule.\n\n````typ\n#let version = \"1.0\"\n#let code = ```bash\n#!/bin/bash\n\n# How could I replace $version?\necho $version\n\n```\n\n= No substitution\n\n#code\n\n= Substitution (attempt) using `show`\n\n#{\n  show \"$version\": version\n  code\n}\n\n= Substitution using `crudo`\n\n#import \"@preview/crudo:0.1.1\"\n#crudo.map(code, line => line.replace(\"$version\", version))\n\n= Substitution using `crudo`, ignoring comments\n\n#import \"@preview/crudo:0.1.1\"\n#crudo.map(code, line => {\n  if line.trim().starts-with(\"#\") { return line }\n  line.replace(\"$version\", version)\n})\n````\n\nThe substitution attempt using `show` only succeeds in the comment because the `$version` in the actual code is parsed as two separate tokens (for syntax highlighting purposes). Replacing `$version` with e.g. `VERSION` should fix that, though.\n\nAlternatively, Crudo allows you to treat raw blocks more like arrays of strings (lines) that content elements. In particular, `crudo.map()` will replace each line with the result of the function, which can then replace stuff. Since it's line-by-line, you can easily check if you're in a comment line, just in case you want to only replace the code occurrences of the version.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 22,
      "score": 409.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 8474,
      "post_number": 4,
      "username": "Cass",
      "name": "Cass",
      "created_at": "2025-02-11T15:41:24.897Z",
      "updated_at": "2025-02-11T15:41:24.897Z",
      "cooked": "<p>Thank you for your replies. Marked as solved.</p>",
      "raw": "Thank you for your replies. Marked as solved.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 19,
      "score": 8.8,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1179
    }
  ],
  "scraped_at": "2025-06-10T09:51:48.928887"
}