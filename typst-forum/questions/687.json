{
  "topic_metadata": {
    "id": 687,
    "title": "How can I define custom colored blocks, e.g. green \"Do\" and red \"Don't\" blocks?",
    "slug": "how-can-i-define-custom-colored-blocks-e-g-green-do-and-red-dont-blocks",
    "posts_count": 5,
    "created_at": "2024-09-25T18:29:37.156Z",
    "last_posted_at": "2024-09-25T20:57:01.404Z",
    "views": 198,
    "like_count": 7,
    "reply_count": 2,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "xkevio",
    "tags": [
      "scripting",
      "layout"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 346
  },
  "posts": [
    {
      "id": 2605,
      "post_number": 1,
      "username": "jsx97",
      "name": "jsx97",
      "created_at": "2024-09-25T18:29:37.309Z",
      "updated_at": "2024-10-02T19:42:05.148Z",
      "cooked": "<p>I have a document with many “do” and “don’t” examples. I want to fill “dos” with green and “donts” with red. How is it possible without specifying color for each block again and again?</p>\n<p>Here is my current attempt (Doesn’t work. Both “do” and “dont” blocks are white.):</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">// This is for \"do\" and \"don't\" blocks.\n// Not sure it will affect them.\n#set block(\n  inset: 8pt,\n  radius: 4pt,\n)\n\n#let do() = {\n  fill: green\n}\n\n#let dont() = {\n  fill: red\n}\n\n= Heading\n\nBody text.\n\n#do[\n  Do this. This should be green.\n]\n\n#dont[\n  Don't do this. This should be red.\n]\n\nBody text.\n</code></pre>",
      "raw": "I have a document with many \"do\" and \"don't\" examples. I want to fill \"dos\" with green and \"donts\" with red. How is it possible without specifying color for each block again and again?\n\nHere is my current attempt (Doesn't work. Both \"do\" and \"dont\" blocks are white.):\n\n```typ\n// This is for \"do\" and \"don't\" blocks.\n// Not sure it will affect them.\n#set block(\n  inset: 8pt,\n  radius: 4pt,\n)\n\n#let do() = {\n  fill: green\n}\n\n#let dont() = {\n  fill: red\n}\n\n= Heading\n\nBody text.\n\n#do[\n  Do this. This should be green.\n]\n\n#dont[\n  Don't do this. This should be red.\n]\n\nBody text.\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 51,
      "score": 485.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 477
    },
    {
      "id": 2607,
      "post_number": 2,
      "username": "xkevio",
      "name": "Kevio",
      "created_at": "2024-09-25T18:42:29.371Z",
      "updated_at": "2024-09-25T18:42:29.371Z",
      "cooked": "<p>Currently, your <code>#do</code> and <code>#dont</code> functions do not generate <code>block</code>s but rather they just enter code mode and imitate dictionary syntax but not in a valid way. You have to explicitly return a block with the fill applied like this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let do = block.with(fill: green)\n\n#do[\n  Do this. This should be green.\n]\n</code></pre>",
      "raw": "Currently, your `#do` and `#dont` functions do not generate `block`s but rather they just enter code mode and imitate dictionary syntax but not in a valid way. You have to explicitly return a block with the fill applied like this:\n\n```typ\n#let do = block.with(fill: green)\n\n#do[\n  Do this. This should be green.\n]\n```",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 49,
      "score": 34.8,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 21
    },
    {
      "id": 2611,
      "post_number": 3,
      "username": "Andrew",
      "name": "",
      "created_at": "2024-09-25T19:27:09.742Z",
      "updated_at": "2024-09-25T19:27:09.742Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"jsx97\" data-post=\"1\" data-topic=\"687\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/j/3DA8FF/48.png\" class=\"avatar\"> jsx97:</div>\n<blockquote>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">// This is for \"do\" and \"don't\" blocks.\n// Not sure it will affect them.\n#set block(\n  inset: 8pt,\n  radius: 4pt,\n)\n</code></pre>\n</blockquote>\n</aside>\n<p>It <em>will</em> if functions are defined something like <a href=\"https://forum.typst.app/t/do-and-dont-blocks-green-and-red-fill/687/2\">this</a>.</p>",
      "raw": "[quote=\"jsx97, post:1, topic:687\"]\n```typ\n// This is for \"do\" and \"don't\" blocks.\n// Not sure it will affect them.\n#set block(\n  inset: 8pt,\n  radius: 4pt,\n)\n```\n[/quote]\n\nIt *will* if functions are defined something like [this](https://forum.typst.app/t/do-and-dont-blocks-green-and-red-fill/687/2).",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 1,
      "reads": 47,
      "score": 39.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 2621,
      "post_number": 4,
      "username": "jsx97",
      "name": "jsx97",
      "created_at": "2024-09-25T20:49:57.450Z",
      "updated_at": "2024-09-25T20:55:04.999Z",
      "cooked": "<p>But then <code>inset</code> and <code>radius</code> affect headings, aren’t they?</p>\n<p>To add <code>inset</code> and <code>radius</code> for “dos” and “donts” only, I currently use this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let do = block.with(fill: green, inset: 8pt, radius: 4pt)\n#let dont = block.with(fill: red, inset: 8pt, radius: 4pt)\n</code></pre>\n<p>But I would prefer to avoid using <code>inset: 8pt, radius: 4pt</code> twice. Maybe there exists something like this?</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let [do, dont](inset: 8pt, radius: 4pt)\n#let do = block.with(fill: green)\n#let dont = block.with(fill: red)\n</code></pre>",
      "raw": "But then `inset` and `radius` affect headings, aren't they?\n\nTo add `inset` and `radius` for \"dos\" and \"donts\" only, I currently use this:\n\n```typ\n#let do = block.with(fill: green, inset: 8pt, radius: 4pt)\n#let dont = block.with(fill: red, inset: 8pt, radius: 4pt)\n```\n\nBut I would prefer to avoid using `inset: 8pt, radius: 4pt` twice. Maybe there exists something like this?\n\n```typ\n#let [do, dont](inset: 8pt, radius: 4pt)\n#let do = block.with(fill: green)\n#let dont = block.with(fill: red)\n```",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 43,
      "score": 18.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 477
    },
    {
      "id": 2622,
      "post_number": 5,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2024-09-25T20:57:01.404Z",
      "updated_at": "2024-09-25T20:57:11.109Z",
      "cooked": "<p><code>with()</code> makes a new function out of a different function by setting some of its parameters, so you can call <code>with()</code> again on its result. That means you can do the following:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let block-template = block.with(inset: 8pt, radius: 4pt)\n\n#let do = block-template.with(fill: green)\n#let dont = block-template.with(fill: red)\n</code></pre>",
      "raw": "`with()` makes a new function out of a different function by setting some of its parameters, so you can call `with()` again on its result. That means you can do the following:\n\n```typ\n#let block-template = block.with(inset: 8pt, radius: 4pt)\n\n#let do = block-template.with(fill: green)\n#let dont = block-template.with(fill: red)\n```",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 5,
      "reads": 43,
      "score": 83.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    }
  ],
  "scraped_at": "2025-06-10T09:58:03.104684"
}