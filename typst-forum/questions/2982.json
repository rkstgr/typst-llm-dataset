{
  "topic_metadata": {
    "id": 2982,
    "title": "How to add a negative space between symbols in math mode?",
    "slug": "how-to-add-a-negative-space-between-symbols-in-math-mode",
    "posts_count": 6,
    "created_at": "2025-02-25T14:24:21.248Z",
    "last_posted_at": "2025-03-09T11:38:05.539Z",
    "views": 201,
    "like_count": 8,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 5,
    "accepted_answer_username": "sijo",
    "tags": [
      "math",
      "spacing"
    ],
    "category_id": 5,
    "participant_count": 5,
    "word_count": 506
  },
  "posts": [
    {
      "id": 9044,
      "post_number": 1,
      "username": "DreamerPhi",
      "name": "",
      "created_at": "2025-02-25T14:24:21.323Z",
      "updated_at": "2025-03-09T11:11:49.364Z",
      "cooked": "<p>Hi,<br>\nI would like to find an equivalent to <code>\\!</code> used in LaTeX for negative spaces in math mode, as describe in the answer to this <a href=\"https://tex.stackexchange.com/questions/318142/typeseeting-a-multiset-with-double-curly-braces\" rel=\"noopener nofollow ugc\">post</a>.<br>\nThanks.</p>",
      "raw": "Hi,\nI would like to find an equivalent to `\\!` used in LaTeX for negative spaces in math mode, as describe in the answer to this [post](https://tex.stackexchange.com/questions/318142/typeseeting-a-multiset-with-double-curly-braces).\nThanks.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 41,
      "score": 703.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1251
    },
    {
      "id": 9045,
      "post_number": 2,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2025-02-25T14:33:44.967Z",
      "updated_at": "2025-02-25T14:33:44.967Z",
      "cooked": "<p>Hello <a class=\"mention\" href=\"/u/dreamerphi\">@DreamerPhi</a>, the <a href=\"https://typst.app/docs/reference/layout/h/\">horizontal spacing</a> works in equations too!</p>\n<p>Hence</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show math.equation: it =&gt; {\n  show \"!\": h(-2pt)\n  it\n}\n${{ A, B, C }}$\n\n${!{ A, B, C }!}$\n\n${!!{ A, B, C }!!}$\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/e/eb4d5d865562ad06ea05ce09936051f5ba2c6ff0.png\" alt=\"image\" data-base62-sha1=\"xzzXwhVp5Po4hKQ9dBewAhBoHV6\" width=\"208\" height=\"213\"></p>\n<p>Above is the Typst output, you can compare it to the LaTeX output below<br>\n<img src=\"https://forum.typst.app/uploads/default/original/2X/5/52bc8ecabb79ab47436c3e772874ab3201986fed.png\" alt=\"image\" data-base62-sha1=\"bNV8pRfS1BY7LYLwKmaU4yNMMsl\" width=\"150\" height=\"105\"></p>",
      "raw": "Hello @DreamerPhi, the [horizontal spacing](https://typst.app/docs/reference/layout/h/) works in equations too!\n\nHence\n\n```typ\n#show math.equation: it => {\n  show \"!\": h(-2pt)\n  it\n}\n${{ A, B, C }}$\n\n${!{ A, B, C }!}$\n\n${!!{ A, B, C }!!}$\n```\n![image|208x213](upload://xzzXwhVp5Po4hKQ9dBewAhBoHV6.png)\n\nAbove is the Typst output, you can compare it to the LaTeX output below\n![image|150x105](upload://bNV8pRfS1BY7LYLwKmaU4yNMMsl.png)",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 41,
      "score": 33.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 9053,
      "post_number": 3,
      "username": "DreamerPhi",
      "name": "",
      "created_at": "2025-02-25T15:06:29.329Z",
      "updated_at": "2025-02-25T15:06:29.329Z",
      "cooked": "<p>Thank you !<br>\nBut is there a way to have <code>!</code> still printing an exclamation mark, and maybe <code>\\!</code> used for the horizontal spacing (or the opposite)?</p>",
      "raw": "Thank you !\nBut is there a way to have `!` still printing an exclamation mark, and maybe `\\!` used for the horizontal spacing (or the opposite)?",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 38,
      "score": 12.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1251
    },
    {
      "id": 9056,
      "post_number": 4,
      "username": "gezepi",
      "name": "",
      "created_at": "2025-02-25T15:28:23.891Z",
      "updated_at": "2025-02-25T15:29:21.362Z",
      "cooked": "<p>In theory you could create a function like this: <code>#let ! = h(-2pt)</code> and anywhere you want a negative space you would write <code>#!()</code>.  However, this <em>doesn’t</em> work.<br>\nSee <a href=\"https://forum.typst.app/t/what-are-the-rules-for-identifiers-in-typst/665/2\">this forum post by xkevio</a> for the variable naming rules in Typst.</p>\n<p>You can use <a class=\"mention\" href=\"/u/quachpas\">@quachpas</a>’ solution and replace the ! in the <code>show</code> rule with any single character that you know won’t be found in any of your equations:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show math.equation: it =&gt; {\n  show \"ü\": h(-2pt)\n  it\n}\n${{ A!, B, C }}$\\\n${ü{ A!, B, C }ü}$\\\n${ü ü{ A!, B, C }ü ü}$\n</code></pre>\n<details>\n<summary>\nOutput</summary>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/5/5d524d1b2e26e79927c42fca643a80cbb8a3d7a4.png\" alt=\"image\" data-base62-sha1=\"djyJwsyEpJMVnzt6p4ZKEYudjTe\" width=\"163\" height=\"106\"></p>\n</details>\n<p>Or you could use a function.</p>\n<details>\n<summary>\nUsing a Function</summary>\n<p>It’s not as clean but you can define a function with a short name (here <code>ns</code> for negative space):</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let ns = h.with(-2pt)\n${#ns()#ns(){ A!, B!, C! }#ns()#ns()}$\n</code></pre>\n<p>The <code>.with()</code> basically asks the compiler \"please create a function that calls <code>h()</code> with these given arguments.  This new function is stored with the name <code>ns</code>.</p>\n</details>",
      "raw": "In theory you could create a function like this: `#let ! = h(-2pt)` and anywhere you want a negative space you would write `#!()`.  However, this _doesn't_ work.\nSee [this forum post by xkevio](https://forum.typst.app/t/what-are-the-rules-for-identifiers-in-typst/665/2?u=gezepi) for the variable naming rules in Typst.\n\nYou can use @quachpas' solution and replace the ! in the `show` rule with any single character that you know won't be found in any of your equations:\n```typ\n#show math.equation: it => {\n  show \"ü\": h(-2pt)\n  it\n}\n${{ A!, B, C }}$\\\n${ü{ A!, B, C }ü}$\\\n${ü ü{ A!, B, C }ü ü}$\n```\n[details=\"Output\"]\n![image|163x106](upload://djyJwsyEpJMVnzt6p4ZKEYudjTe.png)\n[/details]\n\n\n\nOr you could use a function.\n[details=\"Using a Function\"]\nIt's not as clean but you can define a function with a short name (here `ns` for negative space):\n```typ\n#let ns = h.with(-2pt)\n${#ns()#ns(){ A!, B!, C! }#ns()#ns()}$\n```\nThe `.with()` basically asks the compiler \"please create a function that calls `h()` with these given arguments.  This new function is stored with the name `ns`.\n[/details]",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 35,
      "score": 47.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 326
    },
    {
      "id": 9058,
      "post_number": 5,
      "username": "sijo",
      "name": "",
      "created_at": "2025-02-25T16:22:32.036Z",
      "updated_at": "2025-03-03T08:36:07.125Z",
      "cooked": "<p>Instead of a function you can just use a variable:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let ns = h(-2pt)\n${#ns#ns{ A!, B!, C! }#ns#ns}$\n</code></pre>\n<p>Edit: you can also leave out the <code>#</code> symbols:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let ns = h(-2pt)\n${ns ns { A!, B!, C! } ns ns}$\n</code></pre>",
      "raw": "Instead of a function you can just use a variable:\n\n```typ\n#let ns = h(-2pt)\n${#ns#ns{ A!, B!, C! }#ns#ns}$\n```\n\nEdit: you can also leave out the `#` symbols:\n\n```typ\n#let ns = h(-2pt)\n${ns ns { A!, B!, C! } ns ns}$\n```",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 3,
      "reads": 31,
      "score": 56.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 9515,
      "post_number": 6,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-03-09T11:38:05.539Z",
      "updated_at": "2025-03-09T11:38:05.539Z",
      "cooked": "<p>I’m not saying I’d recommend this, but the following seems to work, using <code>\\\\!</code> as the negative space:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show math.equation: it =&gt; {\n  let target = [\\\\!]\n  show target.func().where(children: target.children): h(-2pt)\n  it\n}\n${{ A!, B, C }}$\n\n${\\\\!{ A!, B, C }\\\\!}$\n\n${\\\\!\\\\!{ A!, B, C }\\\\!\\\\!}$\n</code></pre>\n<p><code>\\!</code> on its own won’t work because the backslash is special in Typst in a completely different way from LaTeX, but <code>\\\\</code> results in a regular character which with some work you can make a show rule for.</p>\n<p>Luckily, Typst seems to parse anything suffixed by <code>!</code> as a separate sequence (in math), so we can replace that whole sequence with what we want.</p>\n<p>There may be edge cases where the sequence would not be detected, but I was not able to construct one. This manually constructed sequence <em>would</em> break it:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let target = [\\\\!]\n#let strange = target.func()((..target.children, [a]))\n\n${\\\\!{ A!, B, C }strange}$\n</code></pre>\n<p>The output contains an unreplaced <code>[\\\\!]</code>.</p>",
      "raw": "I'm not saying I'd recommend this, but the following seems to work, using `\\\\!` as the negative space:\n\n```typ\n#show math.equation: it => {\n  let target = [\\\\!]\n  show target.func().where(children: target.children): h(-2pt)\n  it\n}\n${{ A!, B, C }}$\n\n${\\\\!{ A!, B, C }\\\\!}$\n\n${\\\\!\\\\!{ A!, B, C }\\\\!\\\\!}$\n```\n\n`\\!` on its own won't work because the backslash is special in Typst in a completely different way from LaTeX, but `\\\\` results in a regular character which with some work you can make a show rule for.\n\nLuckily, Typst seems to parse anything suffixed by `!` as a separate sequence (in math), so we can replace that whole sequence with what we want.\n\nThere may be edge cases where the sequence would not be detected, but I was not able to construct one. This manually constructed sequence _would_ break it:\n\n```typ\n#let target = [\\\\!]\n#let strange = target.func()((..target.children, [a]))\n\n${\\\\!{ A!, B, C }strange}$\n```\nThe output contains an unreplaced `[\\\\!]`.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 15,
      "score": 38.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    }
  ],
  "scraped_at": "2025-06-10T09:51:08.994773"
}