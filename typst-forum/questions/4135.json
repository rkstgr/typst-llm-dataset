{
  "topic_metadata": {
    "id": 4135,
    "title": "How to duplicate a function, but with different settables?",
    "slug": "how-to-duplicate-a-function-but-with-different-settables",
    "posts_count": 15,
    "created_at": "2025-05-17T15:21:56.036Z",
    "last_posted_at": "2025-05-17T21:24:51.575Z",
    "views": 68,
    "like_count": 3,
    "reply_count": 11,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 6,
    "accepted_answer_username": "AprilGrimoire",
    "tags": [
      "scripting"
    ],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 571
  },
  "posts": [
    {
      "id": 12653,
      "post_number": 1,
      "username": "AprilGrimoire",
      "name": "AprilGrimoire",
      "created_at": "2025-05-17T15:21:56.171Z",
      "updated_at": "2025-05-17T15:21:56.171Z",
      "cooked": "<p>Hi. I want to create a variant of a standard function:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let major-enum = enum\n\n#set major-enum(\n  spacing: 0.5cm,\n)\n</code></pre>\n<p>However it didn’t work as intended, since <code>major-enum</code> would be considered the same object as <code>enum</code>, and <code>#set</code> statements would be applied to them at the same time.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let major-enum(..args) = enum(..args)\n</code></pre>\n<p>won’t work either, since <code>spacing</code> would not be considered as a named argument of <code>major-enum</code>, thus not settable.</p>\n<p>How can I achieve this effect?</p>",
      "raw": "Hi. I want to create a variant of a standard function:\n\n```\n#let major-enum = enum\n\n#set major-enum(\n  spacing: 0.5cm,\n)\n```\n\nHowever it didn't work as intended, since `major-enum` would be considered the same object as `enum`, and `#set` statements would be applied to them at the same time.\n\n```\n#let major-enum(..args) = enum(..args)\n```\nwon't work either, since `spacing` would not be considered as a named argument of `major-enum`, thus not settable.\n\nHow can I achieve this effect?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 29,
      "score": 75.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1309
    },
    {
      "id": 12654,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-17T15:40:13.775Z",
      "updated_at": "2025-05-17T15:40:36.647Z",
      "cooked": "<p>Hi. Without a concrete use case, this is just <a href=\"https://forum.typst.app/t/how-can-i-have-global-configuration-parameters-for-a-module-package/3365/2\" class=\"inline-onebox\">How can I have global configuration parameters for a module/package? - #2 by Andrew</a>, but from a different angle.</p>\n<p>Generally speaking, you can’t. But with enough hacks you can manually exploit one element for storing relevant/updated field values with a set rule, like here:</p>\n<aside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/lilaq-project/lilaq/blob/1e38c166eeb674a293ea1821993e9cd1afa3da95/src/style/styling.typ#L13\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/lilaq-project/lilaq/blob/1e38c166eeb674a293ea1821993e9cd1afa3da95/src/style/styling.typ#L13\" target=\"_blank\" rel=\"noopener\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/lilaq-project/lilaq/blob/1e38c166eeb674a293ea1821993e9cd1afa3da95/src/style/styling.typ#L13\" target=\"_blank\" rel=\"noopener\">lilaq-project/lilaq/blob/1e38c166eeb674a293ea1821993e9cd1afa3da95/src/style/styling.typ#L13</a></h4>\n\n\n\n    <pre class=\"onebox\"><code class=\"lang-typ\">\n      <ol class=\"start lines\" start=\"3\" style=\"counter-reset: li-counter 2 ;\">\n          <li>#import \"../process-styles.typ\": merge-strokes, merge-fills</li>\n          <li>#import \"../utility.typ\": if-none</li>\n          <li>#import \"../model/mark.typ\": mark, marks</li>\n          <li></li>\n          <li>#import \"map.typ\": petroff10</li>\n          <li>#import \"cycle.typ\": generic</li>\n          <li></li>\n          <li></li>\n          <li>#let _auto = rgb(\"#0000A1AA\")</li>\n          <li></li>\n          <li class=\"selected\">#let style = std.circle</li>\n          <li></li>\n          <li>#let process-stroke(stroke, color) = {</li>\n          <li>  if stroke == none { return none }</li>\n          <li>  if stroke.paint == _auto {</li>\n          <li>    std.stroke(paint: color, thickness: stroke.thickness, cap: stroke.cap, join: stroke.join, dash: stroke.dash, miter-limit: stroke.miter-limit)</li>\n          <li>  } else { </li>\n          <li>    stroke</li>\n          <li>  }</li>\n          <li>}</li>\n          <li></li>\n      </ol>\n    </code></pre>\n\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>Or use <a href=\"https://pgbiel.github.io/elembic\" class=\"inline-onebox\">Introduction - The Elembic Handbook</a>.</p>",
      "raw": "Hi. Without a concrete use case, this is just https://forum.typst.app/t/how-can-i-have-global-configuration-parameters-for-a-module-package/3365/2, but from a different angle.\n\nGenerally speaking, you can't. But with enough hacks you can manually exploit one element for storing relevant/updated field values with a set rule, like here:\n\nhttps://github.com/lilaq-project/lilaq/blob/1e38c166eeb674a293ea1821993e9cd1afa3da95/src/style/styling.typ#L13\n\nOr use https://pgbiel.github.io/elembic.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 27,
      "score": 30.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12655,
      "post_number": 3,
      "username": "AprilGrimoire",
      "name": "AprilGrimoire",
      "created_at": "2025-05-17T15:43:09.939Z",
      "updated_at": "2025-05-17T15:43:09.939Z",
      "cooked": "<p>Hi. Thanks for your answer! The use case is to create a different style of <code>enum</code> for a very long <code>enum</code> spanning multiple pages, containing a few homework exercises. I don['t want this style to interfere with usual enums.</p>",
      "raw": "Hi. Thanks for your answer! The use case is to create a different style of `enum` for a very long `enum` spanning multiple pages, containing a few homework exercises. I don['t want this style to interfere with usual enums.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 9.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1309
    },
    {
      "id": 12658,
      "post_number": 4,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-17T15:54:12.809Z",
      "updated_at": "2025-05-17T15:55:24.782Z",
      "cooked": "<p>Have you tried just adding <code>#[</code> at the start and <code>]</code> at the end of the section with a normal set rule? This is the most straightforward way, with no hacking. Or <code>#custom-enum[]</code>.</p>",
      "raw": "Have you tried just adding `#[` at the start and `]` at the end of the section with a normal set rule? This is the most straightforward way, with no hacking. Or `#custom-enum[]`.",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 26,
      "score": 20.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12660,
      "post_number": 5,
      "username": "AprilGrimoire",
      "name": "AprilGrimoire",
      "created_at": "2025-05-17T17:10:12.178Z",
      "updated_at": "2025-05-17T17:10:12.178Z",
      "cooked": "<p>No, that’s not possible, because I want normal enums inside it.</p>",
      "raw": "No, that's not possible, because I want normal enums inside it.",
      "reply_to_post_number": 4,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 9.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1309
    },
    {
      "id": 12661,
      "post_number": 6,
      "username": "AprilGrimoire",
      "name": "AprilGrimoire",
      "created_at": "2025-05-17T17:12:12.160Z",
      "updated_at": "2025-05-17T17:12:12.160Z",
      "cooked": "<p>Thanks <a class=\"mention\" href=\"/u/bluss\">@bluss</a> in Discord for the answer!</p>\n<aside class=\"quote no-group\" data-username=\"bluss\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/b/441A5E/48.png\" class=\"avatar\"> bluss:</div>\n<blockquote>\n<p>it’s also good to know about the with method which is very useful. let major-enum = enum.with(spacing: 0.5em)  It provides a “copy” of the function with specified arguments but they can also be overridden later. It’s not a “settable element function” but it’s a regular function.</p>\n</blockquote>\n</aside>",
      "raw": "Thanks @bluss in Discord for the answer!\n[quote=\"bluss\"]\nit's also good to know about the with method which is very useful. let major-enum = enum.with(spacing: 0.5em)  It provides a \"copy\" of the function with specified arguments but they can also be overridden later. It's not a \"settable element function\" but it's a regular function. \n[/quote]",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 24,
      "score": 24.8,
      "accepted_answer": true,
      "trust_level": 1,
      "user_id": 1309
    },
    {
      "id": 12667,
      "post_number": 7,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-17T17:30:35.146Z",
      "updated_at": "2025-05-17T17:30:35.146Z",
      "cooked": "<p>You <em>will</em> use normal enums inside of it…</p>",
      "raw": "You *will* use normal enums inside of it...",
      "reply_to_post_number": 5,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 9.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12668,
      "post_number": 8,
      "username": "AprilGrimoire",
      "name": "AprilGrimoire",
      "created_at": "2025-05-17T17:31:53.523Z",
      "updated_at": "2025-05-17T17:31:53.523Z",
      "cooked": "<p>Do you mean the section where I want normal enums, or the section containing the mega enum?</p>",
      "raw": "Do you mean the section where I want normal enums, or the section containing the mega enum?",
      "reply_to_post_number": 7,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 9.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1309
    },
    {
      "id": 12669,
      "post_number": 9,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-17T17:33:07.666Z",
      "updated_at": "2025-05-17T17:34:32.726Z",
      "cooked": "<blockquote>\n<p>Do you mean the section where I want normal enums, or the section containing the mega enum?</p>\n</blockquote>\n<p>Both. That’s the whole point of scoping the set rules.</p>",
      "raw": "> Do you mean the section where I want normal enums, or the section containing the mega enum?\n\nBoth. That's the whole point of scoping the set rules.",
      "reply_to_post_number": 8,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 14.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12670,
      "post_number": 10,
      "username": "AprilGrimoire",
      "name": "AprilGrimoire",
      "created_at": "2025-05-17T17:34:50.030Z",
      "updated_at": "2025-05-17T17:34:50.030Z",
      "cooked": "<p>That seems cumbersome, since I will have many items inside the mega enum. Thanks for <a class=\"mention\" href=\"/u/bluss\">@bluss</a>,</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let major-enum = enum.with(spacing: 0.5cm)\n</code></pre>\n<p>worked perfectly.</p>",
      "raw": "That seems cumbersome, since I will have many items inside the mega enum. Thanks for @bluss,\n\n```\n#let major-enum = enum.with(spacing: 0.5cm)\n```\n\nworked perfectly.",
      "reply_to_post_number": 9,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 24,
      "score": 24.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1309
    },
    {
      "id": 12672,
      "post_number": 11,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-17T17:37:28.359Z",
      "updated_at": "2025-05-17T17:37:42.730Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"AprilGrimoire\" data-post=\"10\" data-topic=\"4135\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/aprilgrimoire/48/2108_2.png\" class=\"avatar\"> AprilGrimoire:</div>\n<blockquote>\n<p>That seems cumbersome</p>\n</blockquote>\n</aside>\n<p>You are literally providing a <code>custom-enum</code>, but you are calling it <code>major-enum</code> here.</p>",
      "raw": "[quote=\"AprilGrimoire, post:10, topic:4135\"]\nThat seems cumbersome\n[/quote]\n\nYou are literally providing a `custom-enum`, but you are calling it `major-enum` here.",
      "reply_to_post_number": 10,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 0,
      "reads": 23,
      "score": 9.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12674,
      "post_number": 12,
      "username": "AprilGrimoire",
      "name": "AprilGrimoire",
      "created_at": "2025-05-17T17:39:33.817Z",
      "updated_at": "2025-05-17T17:42:38.367Z",
      "cooked": "<p>Yeah, that’s my problem: I wanted to provide a custom-enum, but I didn’t know the <code>function.with(...)</code> syntax, and there isn’t a dedicated documentation page for <code>with</code>.</p>\n<p>EDIT: I looked for <code>set</code> in the documentations, but didn’t find it.</p>",
      "raw": "Yeah, that's my problem: I wanted to provide a custom-enum, but I didn't know the `function.with(...)` syntax, and there isn't a dedicated documentation page for `with`.\n\nEDIT: I looked for `set` in the documentations, but didn't find it.",
      "reply_to_post_number": 11,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 23,
      "score": 9.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1309
    },
    {
      "id": 12675,
      "post_number": 13,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-17T17:42:37.557Z",
      "updated_at": "2025-05-17T17:43:22.139Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"AprilGrimoire\" data-post=\"12\" data-topic=\"4135\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/aprilgrimoire/48/2108_2.png\" class=\"avatar\"> AprilGrimoire:</div>\n<blockquote>\n<p>there isn’t a dedicated documentation page for <code>with</code>.</p>\n</blockquote>\n</aside>\n<p><a href=\"https://typst.app/docs/reference/foundations/function/#definitions-with\"><code>function.with</code></a></p>\n<p><a href=\"https://typst.app/docs/tutorial/making-a-template/#separate-file:~:text=Another%20thing%20that%20you%20can,this%20style%20of%20function%20call\" class=\"inline-onebox\">Making a Template – Typst Documentation</a>.</p>\n<p>If this is not enough, you can request more documentation about this.</p>",
      "raw": "[quote=\"AprilGrimoire, post:12, topic:4135\"]\nthere isn’t a dedicated documentation page for `with`.\n[/quote]\n\n[`function.with`](https://typst.app/docs/reference/foundations/function/#definitions-with)\n\nhttps://typst.app/docs/tutorial/making-a-template/#separate-file:~:text=Another%20thing%20that%20you%20can,this%20style%20of%20function%20call.\n\nIf this is not enough, you can request more documentation about this.",
      "reply_to_post_number": 12,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 0,
      "reads": 22,
      "score": 14.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12678,
      "post_number": 14,
      "username": "AprilGrimoire",
      "name": "AprilGrimoire",
      "created_at": "2025-05-17T18:41:01.267Z",
      "updated_at": "2025-05-17T18:41:01.267Z",
      "cooked": "<p>Where can I request for new documentation? Can I request for it here?</p>\n<ul>\n<li>There is a ref of <code>set</code> in <code>function.with</code>, but not its reverse.</li>\n<li>Instead of <code>styling</code>, I think they could be best categorized as <code>scripting</code>.</li>\n</ul>",
      "raw": "Where can I request for new documentation? Can I request for it here?\n\n* There is a ref of `set` in `function.with`, but not its reverse.\n* Instead of `styling`, I think they could be best categorized as `scripting`.",
      "reply_to_post_number": 13,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 21,
      "score": 9.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1309
    },
    {
      "id": 12679,
      "post_number": 15,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-17T21:24:51.575Z",
      "updated_at": "2025-05-17T21:24:51.575Z",
      "cooked": "<p>To track it, it needs to be in the <a href=\"https://github.com/typst/typst/issues\">issue tracker</a>.</p>",
      "raw": "To track it, it needs to be in the [issue tracker](https://github.com/typst/typst/issues).",
      "reply_to_post_number": 14,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 21,
      "score": 4.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    }
  ],
  "scraped_at": "2025-06-10T09:47:43.936277"
}