{
  "topic_metadata": {
    "id": 2462,
    "title": "How to check if a variable exists?",
    "slug": "how-to-check-if-a-variable-exists",
    "posts_count": 6,
    "created_at": "2025-01-18T20:18:22.800Z",
    "last_posted_at": "2025-01-19T11:19:17.728Z",
    "views": 440,
    "like_count": 4,
    "reply_count": 4,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 6,
    "accepted_answer_username": "laurmaedje",
    "tags": [
      "scripting"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 507
  },
  "posts": [
    {
      "id": 7638,
      "post_number": 1,
      "username": "Florian",
      "name": "Florian",
      "created_at": "2025-01-18T20:18:22.999Z",
      "updated_at": "2025-01-19T11:23:51.886Z",
      "cooked": "<p>Hey <img src=\"https://forum.typst.app/images/emoji/apple/wave.png?v=12\" title=\":wave:\" class=\"emoji\" alt=\":wave:\" loading=\"lazy\" width=\"20\" height=\"20\"> ,</p>\n<p>I am trying to check if a variable exists - but as far as i could imagine doing it, i don’t see a way to do it.</p>\n<p>Say i’d like to detect if “a” is being <s>defined</s> declared - i thought of using something like <code>if a ...</code> which of course fails.</p>\n<p>So how actually check if an variable exists?</p>",
      "raw": "Hey :wave: ,\n\nI am trying to check if a variable exists - but as far as i could imagine doing it, i don't see a way to do it.\n\nSay i'd like to detect if \"a\" is being ~~defined~~ declared - i thought of using something like `if a ...` which of course fails.\n\nSo how actually check if an variable exists?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 61,
      "score": 1847.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 251
    },
    {
      "id": 7639,
      "post_number": 2,
      "username": "gpr",
      "name": "Greg",
      "created_at": "2025-01-18T20:42:11.177Z",
      "updated_at": "2025-01-18T20:42:11.177Z",
      "cooked": "<p>You can check it yourself, e.g.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let a\n</code></pre>\n<p><code>a</code> is declared but not defined. The representation of <code>a</code> is</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">repr(a) // none\n</code></pre>\n<p><code>none</code>. So checking for <code>none</code> should be sufficient:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#{a == none} // true\n</code></pre>\n<p>Since <code>if</code> requires a boolean condition to be met, we can check:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#if a == none [Yes] else [No] // Yes\n</code></pre>\n<p>On the other hand. <code>a</code> is not <code>none</code> when it is defined:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let a = 5 // declared and defined\n#{a == none} // false\n</code></pre>",
      "raw": "You can check it yourself, e.g.\n\n```typ\n#let a\n```\n\n`a` is declared but not defined. The representation of `a` is\n\n```typ\nrepr(a) // none\n```\n\n`none`. So checking for `none` should be sufficient:\n\n```typ\n#{a == none} // true\n```\n\nSince `if` requires a boolean condition to be met, we can check:\n\n```typ\n#if a == none [Yes] else [No] // Yes\n```\n\nOn the other hand. `a` is not `none` when it is defined:\n\n```typ\n#let a = 5 // declared and defined\n#{a == none} // false\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 61,
      "score": 57.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1052
    },
    {
      "id": 7641,
      "post_number": 3,
      "username": "Florian",
      "name": "Florian",
      "created_at": "2025-01-18T21:11:47.416Z",
      "updated_at": "2025-01-18T21:11:47.416Z",
      "cooked": "<p>Dear <a class=\"mention\" href=\"/u/gpr\">@gpr</a> - thank you very much for your expressive example! I am so sorry i didn’t make clear that i actually try to detect if a variable is already declared (not defined). <img src=\"https://forum.typst.app/images/emoji/apple/bowing_man.png?v=12\" title=\":bowing_man:\" class=\"emoji\" alt=\":bowing_man:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Dear @gpr - thank you very much for your expressive example! I am so sorry i didn't make clear that i actually try to detect if a variable is already declared (not defined). :bowing_man:",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 55,
      "score": 16.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 251
    },
    {
      "id": 7644,
      "post_number": 5,
      "username": "gpr",
      "name": "Greg",
      "created_at": "2025-01-18T21:29:23.647Z",
      "updated_at": "2025-01-18T22:21:11.133Z",
      "cooked": "<p>Sorry, maybe I misunderstood something, but this is how you would check whether a variable is defined:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">a != none // checks whether a is defined\n</code></pre>\n<p>Evaluates to <code>true</code> if <code>a</code> is defined, e.g.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#{if a != none [a is defined here continue...]}\n</code></pre>\n<p>As far as I know there is no syntax like <code>if a</code></p>",
      "raw": "Sorry, maybe I misunderstood something, but this is how you would check whether a variable is defined:\n\n```typ\na != none // checks whether a is defined\n```\nEvaluates to `true` if `a` is defined, e.g.\n\n```typ\n#{if a != none [a is defined here continue...]}\n````\n\nAs far as I know there is no syntax like `if a`",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 53,
      "score": 30.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1052
    },
    {
      "id": 7652,
      "post_number": 6,
      "username": "laurmaedje",
      "name": "Laurenz Mädje",
      "created_at": "2025-01-19T08:57:10.892Z",
      "updated_at": "2025-01-19T08:57:10.892Z",
      "cooked": "<p>This will error if <code>a</code> is not in scope. I think what <a class=\"mention\" href=\"/u/florian\">@Florian</a> is trying to do is to check whether it is in scope.</p>\n<p>It’s not possible to check this (at least I’m not aware of any way). There is a small exception: If the bindings come from an imported module, you can convert the whole module to a dictionary with the dictionary constructor and check whether it’s contained. For the standard library definitions that module would be <code>std</code>. That lets you solve a subproblem of your question.</p>\n<p>All that said: Even if there was a way, it would be quite unorthodox to perform such a check. What are you actually trying to achieve? Maybe there is a better way.</p>",
      "raw": "This will error if `a` is not in scope. I think what @Florian is trying to do is to check whether it is in scope.\n\nIt's not possible to check this (at least I'm not aware of any way). There is a small exception: If the bindings come from an imported module, you can convert the whole module to a dictionary with the dictionary constructor and check whether it's contained. For the standard library definitions that module would be `std`. That lets you solve a subproblem of your question.\n\nAll that said: Even if there was a way, it would be quite unorthodox to perform such a check. What are you actually trying to achieve? Maybe there is a better way.",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 40,
      "score": 28.0,
      "accepted_answer": true,
      "trust_level": 4,
      "user_id": 2
    },
    {
      "id": 7659,
      "post_number": 7,
      "username": "Florian",
      "name": "Florian",
      "created_at": "2025-01-19T11:19:17.728Z",
      "updated_at": "2025-01-19T11:19:17.728Z",
      "cooked": "<p>Thanks a lot <a class=\"mention\" href=\"/u/gpr\">@gpr</a> and <a class=\"mention\" href=\"/u/laurmaedje\">@laurmaedje</a>.</p>\n<p>I am recently thinking of and writing modules for different use cases.</p>\n<p>And of course i am aware of a) the immutable nature of the processing pipeline diverging to the best result and b) i usually would recommend to put a lot of the data preparing to a preprocessing outside of Typst.</p>\n<p>But i experiment a lot with different ways to use Typst as the interface for more or less complex tasks which leads to a annoyingly enjoyable experience creating user interfaces in the Typst scripting language.</p>\n<p>In that regard i thought about using state variables behind the scenes, to allow modules to implicitly use the state of other modules.</p>\n<p>Don’t get me wrong i think that’s a bit of an antipattern since it could raise issues but in terms of exploring what one could achieve i was interested to find out if it’s possible.</p>",
      "raw": "Thanks a lot @gpr and @laurmaedje.\n\nI am recently thinking of and writing modules for different use cases.\n\nAnd of course i am aware of a) the immutable nature of the processing pipeline diverging to the best result and b) i usually would recommend to put a lot of the data preparing to a preprocessing outside of Typst.\n\nBut i experiment a lot with different ways to use Typst as the interface for more or less complex tasks which leads to a annoyingly enjoyable experience creating user interfaces in the Typst scripting language.\n\nIn that regard i thought about using state variables behind the scenes, to allow modules to implicitly use the state of other modules.\n\nDon't get me wrong i think that's a bit of an antipattern since it could raise issues but in terms of exploring what one could achieve i was interested to find out if it's possible.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 39,
      "score": 7.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 251
    }
  ],
  "scraped_at": "2025-06-10T09:52:42.550126"
}