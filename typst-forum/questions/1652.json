{
  "topic_metadata": {
    "id": 1652,
    "title": "Is there a way to make arguments of element function optional/dependent?",
    "slug": "is-there-a-way-to-make-arguments-of-element-function-optional-dependent",
    "posts_count": 7,
    "created_at": "2024-11-10T11:08:24.642Z",
    "last_posted_at": "2024-11-11T04:02:35.519Z",
    "views": 361,
    "like_count": 9,
    "reply_count": 2,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 3,
    "accepted_answer_username": "Eric",
    "tags": [
      "scripting",
      "layout"
    ],
    "category_id": 5,
    "participant_count": 5,
    "word_count": 429
  },
  "posts": [
    {
      "id": 5449,
      "post_number": 1,
      "username": "a_w",
      "name": "Alex",
      "created_at": "2024-11-10T11:08:24.779Z",
      "updated_at": "2024-11-10T11:09:23.565Z",
      "cooked": "<p>Say you have a longer element function where one or multiple parameters depend on something. Is there a way to make single (or multiple) parameters optional without repeating the whole element in an if-clause?</p>\n<p>Non-working example to showcase what I mean:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let warning = true\n#block(\n  stroke: 1pt + black,\n  (if warning { (fill: red) }), //something like that\n  inset: 10pt,\n  radius: 2pt,\n)[Test]\n</code></pre>\n<details>\n<summary>\nExample Result</summary>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/c/cd88184edef046d1c943f7bd6016732c32c5130b.png\" alt=\"test-showcase\" data-base62-sha1=\"tkdsJPoy49bmIJsnq4KHmr52ufh\" width=\"244\" height=\"188\"></p>\n</details>\n<p>PS: I know you could define a variable like <code>fill: some-fillcolor</code> and make that dependent on x. But I was wondering if it was possible, so it is not necessary to restore defaults or change multiple parameters combined at once etc.</p>",
      "raw": "Say you have a longer element function where one or multiple parameters depend on something. Is there a way to make single (or multiple) parameters optional without repeating the whole element in an if-clause?\n\nNon-working example to showcase what I mean:\n\n```typ\n#let warning = true\n#block(\n  stroke: 1pt + black,\n  (if warning { (fill: red) }), //something like that\n  inset: 10pt,\n  radius: 2pt,\n)[Test]\n```\n\n[details=\"Example Result\"]\n![test-showcase|244x188](upload://tkdsJPoy49bmIJsnq4KHmr52ufh.png)\n[/details]\n\nPS: I know you could define a variable like `fill: some-fillcolor` and make that dependent on x. But I was wondering if it was possible, so it is not necessary to restore defaults or change multiple parameters combined at once etc.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 43,
      "score": 1488.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 566
    },
    {
      "id": 5454,
      "post_number": 2,
      "username": "LordBaryhobal",
      "name": "Baryhobal",
      "created_at": "2024-11-10T13:47:47.315Z",
      "updated_at": "2024-11-10T13:47:47.315Z",
      "cooked": "<p>You have two options afaik</p>\n<ol>\n<li>If in the value:<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let warning = true\n#block(\n  fill: if warning {red} else {none}\n)[test]\n</code></pre>\n</li>\n<li>Args dictionary:<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let warning = true\n#let args = (:)\n#if warning {\n  args.insert(\"fill\", red)\n}\n#block(..args)[Test]\n</code></pre>\n</li>\n</ol>",
      "raw": "You have two options afaik\n1. If in the value:\n    ```typ\n    #let warning = true\n    #block(\n      fill: if warning {red} else {none}\n    )[test]\n    ```\n2. Args dictionary:\n    ```typ\n    #let warning = true\n    #let args = (:)\n    #if warning {\n      args.insert(\"fill\", red)\n    }\n    #block(..args)[Test]\n    ```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 41,
      "score": 43.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 585
    },
    {
      "id": 5467,
      "post_number": 3,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2024-11-10T16:25:33.473Z",
      "updated_at": "2024-11-10T16:25:33.473Z",
      "cooked": "<p>You were actually already very close to something that works. You just need spread the if statement with the dictionary with <code>..</code> instead of passing it as is:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let warning = true\n#block(\n  stroke: 1pt + black,\n  ..if warning { (fill: red) },\n  inset: 10pt,\n  radius: 2pt,\n)[Test]\n</code></pre>",
      "raw": "You were actually already very close to something that works. You just need spread the if statement with the dictionary with `..` instead of passing it as is:\n\n```typ\n#let warning = true\n#block(\n  stroke: 1pt + black,\n  ..if warning { (fill: red) },\n  inset: 10pt,\n  radius: 2pt,\n)[Test]\n```",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 3,
      "reads": 37,
      "score": 157.4,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 5469,
      "post_number": 4,
      "username": "a_w",
      "name": "Alex",
      "created_at": "2024-11-10T19:30:32.466Z",
      "updated_at": "2024-11-10T19:33:22.524Z",
      "cooked": "<p>Aahhh, perfect! Thank you both. I learned from all approaches! I would have marked both answers as solution, but since that is not possible the one <a class=\"mention\" href=\"/u/eric\">@Eric</a> gave is maybe even a little closer to what I want to achieve since it omits the parameter completely and is the very compact at the same time.</p>\n<p><img src=\"https://forum.typst.app/images/emoji/apple/pray.png?v=12\" title=\":pray:\" class=\"emoji only-emoji\" alt=\":pray:\" loading=\"lazy\" width=\"20\" height=\"20\"><img src=\"https://forum.typst.app/images/emoji/apple/pray.png?v=12\" title=\":pray:\" class=\"emoji only-emoji\" alt=\":pray:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Aahhh, perfect! Thank you both. I learned from all approaches! I would have marked both answers as solution, but since that is not possible the one @Eric gave is maybe even a little closer to what I want to achieve since it omits the parameter completely and is the very compact at the same time.\n\nüôèüôè",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 34,
      "score": 71.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 566
    },
    {
      "id": 5473,
      "post_number": 5,
      "username": "Mc-Zen",
      "name": "Mc-Zen",
      "created_at": "2024-11-10T23:12:45.123Z",
      "updated_at": "2024-11-10T23:13:41.183Z",
      "cooked": "<p>I think your solution is very idiomatic. To make it even a little more compact, let me note:<br>\n<code>else {none}</code> can be omitted altogether since if-statements without an else statement will produce <code>none</code> in the negative branch.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#block(\n  fill: if warning {red}\n)\n</code></pre>\n<p>This should then be the shortest solution of all :)</p>",
      "raw": "I think your solution is very idiomatic. To make it even a little more compact, let me note:\n`else {none}` can be omitted altogether since if-statements without an else statement will produce `none` in the negative branch. \n```typ\n#block(\n  fill: if warning {red}\n)\n```\nThis should then be the shortest solution of all :)",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 30,
      "score": 31.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 9
    },
    {
      "id": 5474,
      "post_number": 6,
      "username": "Mc-Zen",
      "name": "Mc-Zen",
      "created_at": "2024-11-10T23:15:45.140Z",
      "updated_at": "2024-11-10T23:15:45.140Z",
      "cooked": "<p>Erics solution is of course great when you have more than one parameter depending on the warning (which could be a common case). Otherwise, <code>fill: if warning {red}</code> seems a tad more readable.</p>",
      "raw": "Erics solution is of course great when you have more than one parameter depending on the warning (which could be a common case). Otherwise, `fill: if warning {red}` seems a tad more readable.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 30,
      "score": 16.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 9
    },
    {
      "id": 5479,
      "post_number": 7,
      "username": "PgBiel",
      "name": "",
      "created_at": "2024-11-11T04:02:35.519Z",
      "updated_at": "2024-11-11T04:02:35.519Z",
      "cooked": "<p>Eric‚Äôs solution is also necessary when the default value of the parameter isn‚Äôt <code>none</code>. For example, <code>stroke: if warning { red }</code> for a table would cause it to not have any stroke if <code>warning</code> is false, which might be fair (but might not be the desired behavior, depending on what one wishes to do). Personally, I usually use the <code>if warning { red }</code> solution because what I usually want is precisely to have it be <code>none</code> (i.e. remove stroke / fill / ‚Ä¶), but it all depends on your goal <img src=\"https://forum.typst.app/images/emoji/apple/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Eric's solution is also necessary when the default value of the parameter isn't `none`. For example, `stroke: if warning { red }` for a table would cause it to not have any stroke if `warning` is false, which might be fair (but might not be the desired behavior, depending on what one wishes to do). Personally, I usually use the `if warning { red }` solution because what I usually want is precisely to have it be `none` (i.e. remove stroke / fill / ...), but it all depends on your goal :slight_smile:",
      "reply_to_post_number": 6,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 28,
      "score": 45.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    }
  ],
  "scraped_at": "2025-06-10T09:55:12.473814"
}