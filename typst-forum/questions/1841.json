{
  "topic_metadata": {
    "id": 1841,
    "title": "How do I create a show rule to replace `lr` in inline math equations?",
    "slug": "how-do-i-create-a-show-rule-to-replace-lr-in-inline-math-equations",
    "posts_count": 6,
    "created_at": "2024-11-22T11:56:28.379Z",
    "last_posted_at": "2024-11-24T18:14:27.445Z",
    "views": 138,
    "like_count": 5,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 5,
    "accepted_answer_username": "Eric",
    "tags": [
      "math"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 436
  },
  "posts": [
    {
      "id": 5989,
      "post_number": 1,
      "username": "Arthur",
      "name": "Arthur",
      "created_at": "2024-11-22T11:56:28.525Z",
      "updated_at": "2024-11-22T12:00:39.603Z",
      "cooked": "<p>Hello!<br>\nI basically have the same problem as <a href=\"https://forum.typst.app/t/is-there-a-way-to-remove-automatic-scaling-of-nested-braces-brackets-parentheses-in-math-mode/875\">this</a> post.<br>\nMy question is: how do I create a show rule that replaces <code>lr</code> by <code>\\( content \\)</code>, only in math equations that are not in block mode, so that the parentheses don’t scale, and exponents and subscripts are on the same level in nested expressions?<br>\nThanks!</p>",
      "raw": "Hello!\nI basically have the same problem as [this](https://forum.typst.app/t/is-there-a-way-to-remove-automatic-scaling-of-nested-braces-brackets-parentheses-in-math-mode/875) post. \nMy question is: how do I create a show rule that replaces `lr` by `\\( content \\)`, only in math equations that are not in block mode, so that the parentheses don't scale, and exponents and subscripts are on the same level in nested expressions?\nThanks!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 41,
      "score": 313.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 339
    },
    {
      "id": 5991,
      "post_number": 2,
      "username": "sijo",
      "name": "",
      "created_at": "2024-11-22T15:51:31.755Z",
      "updated_at": "2024-11-22T15:51:31.755Z",
      "cooked": "<p>I guess you could try</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show math.equation.where(block: false): it =&gt; {\n  show math.lr: it =&gt; it.body\n  it\n}\n</code></pre>",
      "raw": "I guess you could try\n\n```typ\n#show math.equation.where(block: false): it => {\n  show math.lr: it => it.body\n  it\n}\n```",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 41,
      "score": 8.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 5992,
      "post_number": 3,
      "username": "Arthur",
      "name": "Arthur",
      "created_at": "2024-11-22T16:08:24.452Z",
      "updated_at": "2024-11-22T16:08:24.452Z",
      "cooked": "<p>Hey, thanks for answering! I hadn’t thought of nesting show rules. It almost works. Unfortunately, if I use your version, the parentheses don’t scale, as if I’d done</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#set math.lr(size: 1em)\n</code></pre>\n<p>It’s partly what I want, but it doesn’t help for the alignment of the superscripts and subscripts. But what I want is to replace the parentheses with <code>\\(</code> and <code>\\)</code>, and doing</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#show math.equation.where(block: false): it =&gt; {\n  show math.lr: it =&gt; [\\( #it.body \\)]\n  it\n}\n</code></pre>\n<p>duplicates the parentheses as <code>body</code> already includes the parentheses.<br>\nI’m open to other ideas.</p>",
      "raw": "Hey, thanks for answering! I hadn't thought of nesting show rules. It almost works. Unfortunately, if I use your version, the parentheses don't scale, as if I'd done \n```typst\n#set math.lr(size: 1em)\n```\nIt's partly what I want, but it doesn't help for the alignment of the superscripts and subscripts. But what I want is to replace the parentheses with `\\(` and `\\)`, and doing \n```typst\n#show math.equation.where(block: false): it => {\n  show math.lr: it => [\\( #it.body \\)]\n  it\n}\n```\nduplicates the parentheses as `body` already includes the parentheses.\nI'm open to other ideas.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 40,
      "score": 13.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 339
    },
    {
      "id": 5993,
      "post_number": 4,
      "username": "sijo",
      "name": "",
      "created_at": "2024-11-22T18:50:29.677Z",
      "updated_at": "2024-11-22T18:50:29.677Z",
      "cooked": "<p>Ah yes. Maybe there’s a way to fix this with a show rule on <code>attach</code>, but I’m not sure it can be done correctly for the general case. Example:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show math.equation.where(block: false): it =&gt; {\n  show math.attach: it =&gt; it.base + super(it.t)\n  it\n}\n\n$((...((x - 2)^2 - 2)^2... - 2)^2)$\n</code></pre>\n<p>but this is wrong in many ways (it works only for this case, and uses wrong superscripts). To fix it you’d have to take apart the arguments of <code>attach</code> in the show rule. I’m not sure this can or should be done, but maybe yes? I think touying for example does something similar.</p>",
      "raw": "Ah yes. Maybe there's a way to fix this with a show rule on `attach`, but I'm not sure it can be done correctly for the general case. Example:\n\n```typ\n#show math.equation.where(block: false): it => {\n  show math.attach: it => it.base + super(it.t)\n  it\n}\n\n$((...((x - 2)^2 - 2)^2... - 2)^2)$\n```\n\nbut this is wrong in many ways (it works only for this case, and uses wrong superscripts). To fix it you'd have to take apart the arguments of `attach` in the show rule. I'm not sure this can or should be done, but maybe yes? I think touying for example does something similar.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 36,
      "score": 12.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 5996,
      "post_number": 5,
      "username": "Eric",
      "name": "Eric Biedert",
      "created_at": "2024-11-22T19:43:55.911Z",
      "updated_at": "2024-11-22T19:44:50.634Z",
      "cooked": "<p>Maybe something like this can fix it:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show math.equation.where(block: false): eq =&gt; {\n  show math.lr: it =&gt; it.body\n  show math.attach: it =&gt; {\n    if it.base.func() != math.lr {\n      return it\n    }\n    \n    let fields = it.fields()\n    let right = math.attach(none, t: fields.t, b: fields.b)\n    let left = if fields.tl != none or fields.bl != none {\n      math.attach(none, tl: fields.tl, bl: fields.bl)\n    }\n    \n    left + it.base + right\n  }\n  \n  eq\n}\n</code></pre>\n<p>This removes the automatic <code>lr</code> and then also moves the attachments of the original <code>lr</code> outside so that they are attached to nothing instead. Note that this won’t work properly when using <code>limits</code>, but that doesn’t really make sense with <code>lr</code> anyway.</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/b/b8e63dbecebf20b2789563a22a0f1f8e1ec65907.png\" alt=\"image\" data-base62-sha1=\"qnH8VHuw8O3Qj4ytevGeh7w5DG7\" width=\"147\" height=\"64\"></p>",
      "raw": "Maybe something like this can fix it:\n```typ\n#show math.equation.where(block: false): eq => {\n  show math.lr: it => it.body\n  show math.attach: it => {\n    if it.base.func() != math.lr {\n      return it\n    }\n    \n    let fields = it.fields()\n    let right = math.attach(none, t: fields.t, b: fields.b)\n    let left = if fields.tl != none or fields.bl != none {\n      math.attach(none, tl: fields.tl, bl: fields.bl)\n    }\n    \n    left + it.base + right\n  }\n  \n  eq\n}\n```\nThis removes the automatic `lr` and then also moves the attachments of the original `lr` outside so that they are attached to nothing instead. Note that this won't work properly when using `limits`, but that doesn't really make sense with `lr` anyway.\n\n![image|147x64](upload://qnH8VHuw8O3Qj4ytevGeh7w5DG7.png)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 3,
      "reads": 35,
      "score": 52.0,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 88
    },
    {
      "id": 6038,
      "post_number": 6,
      "username": "Arthur",
      "name": "Arthur",
      "created_at": "2024-11-24T18:14:27.445Z",
      "updated_at": "2024-11-24T18:14:27.445Z",
      "cooked": "<p>It looks like this works for me. Thanks!</p>",
      "raw": "It looks like this works for me. Thanks!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 23,
      "score": 19.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 339
    }
  ],
  "scraped_at": "2025-06-10T09:54:31.582226"
}