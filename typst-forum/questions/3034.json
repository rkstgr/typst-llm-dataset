{
  "topic_metadata": {
    "id": 3034,
    "title": "How to export Cetz diagrams in HTML?",
    "slug": "how-to-export-cetz-diagrams-in-html",
    "posts_count": 7,
    "created_at": "2025-02-27T20:14:22.309Z",
    "last_posted_at": "2025-03-03T15:34:09.270Z",
    "views": 164,
    "like_count": 3,
    "reply_count": 4,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "SillyFreak",
    "tags": [
      "cetz",
      "html"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 484
  },
  "posts": [
    {
      "id": 9144,
      "post_number": 1,
      "username": "Chrysoberyl",
      "name": "",
      "created_at": "2025-02-27T20:14:22.421Z",
      "updated_at": "2025-03-03T15:32:50.736Z",
      "cooked": "<p>With the new experimental HTML exporter, is there a way to export Cetz diagrams? Currently if I compile a document</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#import \"@preview/cetz:0.3.2\"\n//#set page(width: auto, height: auto, margin: .5cm)\n\n#show math.equation: block.with(fill: white, inset: 1pt)\n\n#cetz.canvas(length: 3cm, {\n ...\n})\n</code></pre>\n<p>with <code>typst compile --features html --format html ...</code>, I get</p>\n<pre data-code-wrap=\"sh\"><code class=\"lang-sh\">warning: block was ignored during HTML export\n    ┌─ @preview/cetz:0.3.2/src/canvas.typ:18:90\n</code></pre>\n<p>I don’t see this explicitly mentioned on the roadmap for HTML, so I wonder if there is a way to do it. This would be very helpful for preparing lecture slides.</p>",
      "raw": "With the new experimental HTML exporter, is there a way to export Cetz diagrams? Currently if I compile a document\n```typst\n#import \"@preview/cetz:0.3.2\"\n//#set page(width: auto, height: auto, margin: .5cm)\n\n#show math.equation: block.with(fill: white, inset: 1pt)\n\n#cetz.canvas(length: 3cm, {\n ...\n})\n```\nwith `typst compile --features html --format html ...`, I get\n```sh\nwarning: block was ignored during HTML export\n    ┌─ @preview/cetz:0.3.2/src/canvas.typ:18:90\n```\nI don't see this explicitly mentioned on the roadmap for HTML, so I wonder if there is a way to do it. This would be very helpful for preparing lecture slides.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 46,
      "score": 334.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1277
    },
    {
      "id": 9145,
      "post_number": 2,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-02-27T20:20:05.054Z",
      "updated_at": "2025-02-27T20:22:15.879Z",
      "cooked": "<p>I haven’t used it myself yet, but that’s what this function is for:</p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://typst.app/docs/reference/html/frame/\">\n  <header class=\"source\">\n      <img src=\"https://forum.typst.app/uploads/default/original/1X/098187a593d51c4db99324614e2baeeb1bb355cc.png\" class=\"site-icon\" data-dominant-color=\"3CA8B6\" width=\"32\" height=\"32\">\n\n      <a href=\"https://typst.app/docs/reference/html/frame/\" target=\"_blank\" rel=\"noopener\">Typst</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/361;\"><img src=\"https://forum.typst.app/uploads/default/optimized/1X/db1c18ed802fe6841bee62606931f352da10ed09_2_690x362.png\" class=\"thumbnail\" data-dominant-color=\"7CC2C5\" width=\"690\" height=\"362\"></div>\n\n<h3><a href=\"https://typst.app/docs/reference/html/frame/\" target=\"_blank\" rel=\"noopener\">Frame Function – Typst Documentation</a></h3>\n\n  <p>Documentation for the `frame` function.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>It designates part of the document as something that should use the regular Typst layouting. The result is included as an SVG image.</p>",
      "raw": "I haven't used it myself yet, but that's what this function is for:\n\nhttps://typst.app/docs/reference/html/frame/\n\nIt designates part of the document as something that should use the regular Typst layouting. The result is included as an SVG image.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 43,
      "score": 18.6,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 9146,
      "post_number": 3,
      "username": "Chrysoberyl",
      "name": "",
      "created_at": "2025-02-27T20:25:44.040Z",
      "updated_at": "2025-02-27T20:34:37.424Z",
      "cooked": "<p>Like <code>#html.frame(cetz.canvas(...))</code>?</p>",
      "raw": "Like `#html.frame(cetz.canvas(...))`?",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 42,
      "score": 13.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1277
    },
    {
      "id": 9161,
      "post_number": 4,
      "username": "sijo",
      "name": "",
      "created_at": "2025-02-28T10:24:33.252Z",
      "updated_at": "2025-02-28T10:24:33.252Z",
      "cooked": "<p>Yes, here’s a complete example:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/cetz:0.3.2\"\n\n#show figure.where(kind: \"cetz\"): it =&gt; {\n  if target() == \"html\" { html.frame(it) } else { it }\n}\n\n#let drawing(..args) = figure(\n  kind: \"cetz\",\n  supplement: none,\n  cetz.canvas(..args),\n)\n\n#drawing(length: 3cm, {\n  import cetz.draw:* \n  line((0, 0), (1, 1))\n  line((1, 0), (0, 1))\n})\n</code></pre>",
      "raw": "Yes, here's a complete example:\n\n```typ\n#import \"@preview/cetz:0.3.2\"\n\n#show figure.where(kind: \"cetz\"): it => {\n  if target() == \"html\" { html.frame(it) } else { it }\n}\n\n#let drawing(..args) = figure(\n  kind: \"cetz\",\n  supplement: none,\n  cetz.canvas(..args),\n)\n\n#drawing(length: 3cm, {\n  import cetz.draw:* \n  line((0, 0), (1, 1))\n  line((1, 0), (0, 1))\n})\n```",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 36,
      "score": 12.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 9185,
      "post_number": 5,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-02-28T11:42:16.808Z",
      "updated_at": "2025-02-28T11:42:16.808Z",
      "cooked": "<p>hmm, I’m not sure I’d do it like that. If I’m not mistaken, that would include the caption in the frame and thus make it part of the SVG image (not selectable, at least in most browsers, and inconsistent with non-cetz figures). – oh! I just noticed that actually doesn’t <em>allow</em> you to add a caption since all args are passed to CeTZ.</p>\n<p>Also, the custom kind could lead to outline problems if the cetz drawing should be a regular image (or some other existing kind).</p>\n<p>I would rather define a wrapper function:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/cetz:0.3.2\"\n\n#let drawing(..args) = {\n  let canvas = cetz.canvas(..args)\n  context if target() == \"html\" {\n    html.frame(canvas)\n  } else {\n    canvas\n  }\n}\n\n#figure(\n  drawing(length: 3cm, {\n    import cetz.draw:* \n    line((0, 0), (1, 1))\n    line((1, 0), (0, 1))\n  }),\n)\n</code></pre>\n<p>Then you can still configure the figure element however it’s necessary. The only downside is that <code>drawing</code> is opaque due to context.</p>",
      "raw": "hmm, I'm not sure I'd do it like that. If I'm not mistaken, that would include the caption in the frame and thus make it part of the SVG image (not selectable, at least in most browsers, and inconsistent with non-cetz figures). -- oh! I just noticed that actually doesn't _allow_ you to add a caption since all args are passed to CeTZ.\n\nAlso, the custom kind could lead to outline problems if the cetz drawing should be a regular image (or some other existing kind).\n\nI would rather define a wrapper function:\n\n```typ\n#import \"@preview/cetz:0.3.2\"\n\n#let drawing(..args) = {\n  let canvas = cetz.canvas(..args)\n  context if target() == \"html\" {\n    html.frame(canvas)\n  } else {\n    canvas\n  }\n}\n\n#figure(\n  drawing(length: 3cm, {\n    import cetz.draw:* \n    line((0, 0), (1, 1))\n    line((1, 0), (0, 1))\n  }),\n)\n```\n\nThen you can still configure the figure element however it's necessary. The only downside is that `drawing` is opaque due to context.",
      "reply_to_post_number": 4,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 32,
      "score": 31.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 9188,
      "post_number": 6,
      "username": "sijo",
      "name": "",
      "created_at": "2025-02-28T12:30:25.392Z",
      "updated_at": "2025-02-28T12:31:14.283Z",
      "cooked": "<p>Here I use figure as a poor man’s custom type, so that cetz diagrams can be easily queried and configured with show rules. It’s not meant to include a caption. If the user wants the diagram in an actual figure, they’re expected to write <code>figure(drawing(...), caption: ...)</code>. But I also like your version, it’s a simpler example.</p>",
      "raw": "Here I use figure as a poor man's custom type, so that cetz diagrams can be easily queried and configured with show rules. It's not meant to include a caption. If the user wants the diagram in an actual figure, they're expected to write `figure(drawing(...), caption: ...)`. But I also like your version, it's a simpler example.",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 31,
      "score": 51.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 9319,
      "post_number": 7,
      "username": "PgBiel",
      "name": "",
      "created_at": "2025-03-03T15:34:09.270Z",
      "updated_at": "2025-03-03T15:34:09.270Z",
      "cooked": "<p>Hey <a class=\"mention\" href=\"/u/chrysoberyl\">@Chrysoberyl</a>, welcome to the forum! I’ve changed your question post’s title to better fit our guidelines: <a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11\" class=\"inline-onebox\">How to post in the Questions category</a></p>\n<p>For future posts, make sure your title is a question you’d ask to a friend about Typst. <img src=\"https://forum.typst.app/images/emoji/apple/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Hey @Chrysoberyl, welcome to the forum! I’ve changed your question post’s title to better fit our guidelines: https://forum.typst.app/t/how-to-post-in-the-questions-category/11\n\nFor future posts, make sure your title is a question you’d ask to a friend about Typst. :wink:",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 18,
      "score": 18.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    }
  ],
  "scraped_at": "2025-06-10T09:51:01.108486"
}