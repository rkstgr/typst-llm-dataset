{
  "topic_metadata": {
    "id": 4145,
    "title": "How can I access which position in a grid a cell is?",
    "slug": "how-can-i-access-which-position-in-a-grid-a-cell-is",
    "posts_count": 5,
    "created_at": "2025-05-18T17:02:49.533Z",
    "last_posted_at": "2025-05-18T19:01:40.812Z",
    "views": 34,
    "like_count": 3,
    "reply_count": 2,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "bluss",
    "tags": [],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 377
  },
  "posts": [
    {
      "id": 12706,
      "post_number": 1,
      "username": "Sinthoras",
      "name": "",
      "created_at": "2025-05-18T17:02:49.865Z",
      "updated_at": "2025-05-18T17:02:49.865Z",
      "cooked": "<p>I create a three column grid like this:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#grid(\n  columns: (28%, 28%, 28%),\n  rows: 17%,\n  gutter: 1.3em,\n  person(\n    numarg: \"1\",\n    arg: \"A\",\n  ),\n    person(\n    numarg: \"2\",\n    arg: \"B\",\n  ),\n    person(\n    numarg: \"3\",\n    arg: \"C\",\n  ),\n)\n</code></pre>\n<p>where in my case I call the function <code>person</code> more often than 3 times and with more different arguments that <code>arg</code>. The important thing is that there is one argument that is always just the number at which position this person gets called.</p>\n<p>Now, if I exchange two persons, then I always have to also change the numbers to reflect their new position. The <code>numarg</code> argument feels redundant to me, because it is already completely fixed by the position, where in the grid it is.</p>\n<p>Is there a way to circumvent the redundancy and program it, such that either I have to just change the number and then the position in the grid gets matched accordingly or just write the position and the numarg gets calculated from the position?</p>",
      "raw": "I create a three column grid like this:\n```typst\n#grid(\n  columns: (28%, 28%, 28%),\n  rows: 17%,\n  gutter: 1.3em,\n  person(\n    numarg: \"1\",\n    arg: \"A\",\n  ),\n    person(\n    numarg: \"2\",\n    arg: \"B\",\n  ),\n    person(\n    numarg: \"3\",\n    arg: \"C\",\n  ),\n)\n```\nwhere in my case I call the function `person` more often than 3 times and with more different arguments that `arg`. The important thing is that there is one argument that is always just the number at which position this person gets called.\n\nNow, if I exchange two persons, then I always have to also change the numbers to reflect their new position. The `numarg` argument feels redundant to me, because it is already completely fixed by the position, where in the grid it is.\n\nIs there a way to circumvent the redundancy and program it, such that either I have to just change the number and then the position in the grid gets matched accordingly or just write the position and the numarg gets calculated from the position?",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 22,
      "score": 24.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 511
    },
    {
      "id": 12707,
      "post_number": 2,
      "username": "bluss",
      "name": "Ulrik",
      "created_at": "2025-05-18T17:11:48.506Z",
      "updated_at": "2025-05-18T17:12:49.564Z",
      "cooked": "<p>In this exact case I’d write it like this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#grid(\n  columns: (28%, 28%, 28%),\n  rows: 17%,\n  gutter: 1.3em,\n  ..(\"A\", \"B\", \"C\").enumerate(start: 1).map(((i, arg)) =&gt; person(numarg: str(i), arg: arg))\n)\n</code></pre>\n<p>You could <code>zip</code> in more arrays for multiple arguments.</p>",
      "raw": "In this exact case I'd write it like this:\n\n```\n#grid(\n  columns: (28%, 28%, 28%),\n  rows: 17%,\n  gutter: 1.3em,\n  ..(\"A\", \"B\", \"C\").enumerate(start: 1).map(((i, arg)) => person(numarg: str(i), arg: arg))\n)\n```\n\nYou could `zip` in more arrays for multiple arguments.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 21,
      "score": 44.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 1272
    },
    {
      "id": 12708,
      "post_number": 3,
      "username": "Sinthoras",
      "name": "",
      "created_at": "2025-05-18T17:23:34.857Z",
      "updated_at": "2025-05-18T17:23:34.857Z",
      "cooked": "<p>Thank you! I could adapt your code to do exactly what I want. :)</p>",
      "raw": "Thank you! I could adapt your code to do exactly what I want. :)",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 20,
      "score": 19.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 511
    },
    {
      "id": 12709,
      "post_number": 4,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-18T18:50:53.295Z",
      "updated_at": "2025-05-18T19:31:57.660Z",
      "cooked": "<p>You can’t directly access cell position within cell unless you use <code>show grid.cell.where(x: 0, y: 0)</code>, but to set cell position you can use <a href=\"https://typst.app/docs/reference/layout/grid/#definitions-cell-x\"><code>grid.cell.x</code></a> and <a href=\"https://typst.app/docs/reference/layout/grid/#definitions-cell-y\"><code>grid.cell.y</code></a>.</p>\n<aside class=\"quote no-group\" data-username=\"Sinthoras\" data-post=\"1\" data-topic=\"4145\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/s/F64C96/48.png\" class=\"avatar\"> Sinthoras:</div>\n<blockquote>\n<p>The <code>numarg</code> argument feels redundant to me, because it is already completely fixed by the position, where in the grid it is.</p>\n</blockquote>\n</aside>\n<p>Then why are you using it? Do you need to display cell order number?</p>",
      "raw": "You can't directly access cell position within cell unless you use `show grid.cell.where(x: 0, y: 0)`, but to set cell position you can use [`grid.cell.x`](https://typst.app/docs/reference/layout/grid/#definitions-cell-x) and [`grid.cell.y`](https://typst.app/docs/reference/layout/grid/#definitions-cell-y).\n\n[quote=\"Sinthoras, post:1, topic:4145\"]\nThe `numarg` argument feels redundant to me, because it is already completely fixed by the position, where in the grid it is.\n[/quote]\n\nThen why are you using it? Do you need to display cell order number?",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 0,
      "reads": 18,
      "score": 13.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12710,
      "post_number": 5,
      "username": "Sinthoras",
      "name": "",
      "created_at": "2025-05-18T19:01:40.812Z",
      "updated_at": "2025-05-18T19:01:40.812Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Andrew\" data-post=\"4\" data-topic=\"4145\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/andrew/48/62_2.png\" class=\"avatar\"> Andrew:</div>\n<blockquote>\n<p>Then why are you using it? Do you need to display cell order number?</p>\n</blockquote>\n</aside>\n<p>Yes, I need it. It is for an election poster, where the number shows the place on the party list. (I will probably even post it in showcase, once it is public, if I remember to do so.)</p>",
      "raw": "[quote=\"Andrew, post:4, topic:4145\"]\nThen why are you using it? Do you need to display cell order number?\n[/quote]\n\nYes, I need it. It is for an election poster, where the number shows the place on the party list. (I will probably even post it in showcase, once it is public, if I remember to do so.)",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 0,
      "reads": 17,
      "score": 3.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 511
    }
  ],
  "scraped_at": "2025-06-10T09:47:42.477249"
}