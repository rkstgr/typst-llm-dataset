{
  "topic_metadata": {
    "id": 3947,
    "title": "Can alignment be changed from the 2nd line on in a paragraph?",
    "slug": "can-alignment-be-changed-from-the-2nd-line-on-in-a-paragraph",
    "posts_count": 5,
    "created_at": "2025-05-06T10:03:16.663Z",
    "last_posted_at": "2025-05-06T12:19:14.005Z",
    "views": 50,
    "like_count": 5,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 4,
    "accepted_answer_username": "sijo",
    "tags": [
      "alignment",
      "text"
    ],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 291
  },
  "posts": [
    {
      "id": 12028,
      "post_number": 1,
      "username": "Mc-Zen",
      "name": "Mc-Zen",
      "created_at": "2025-05-06T10:03:16.772Z",
      "updated_at": "2025-05-09T13:54:36.111Z",
      "cooked": "<p>I’d like to achieve the following:</p>\n<ul>\n<li>The first line is left-aligned</li>\n<li>If the text spills onto the second line, it should be right-aligned from the second line on.</li>\n</ul>\n<p>Something like that:</p>\n<pre data-code-wrap=\"txt\"><code class=\"lang-txt\">Forever young\nI want to be forever young\nDo you really want to live \n                   forever?\nForever and ever\n</code></pre>\n<p>Is this possible (without inserting linebreaks etc. manually)?</p>",
      "raw": "I'd like to achieve the following: \n- The first line is left-aligned\n- If the text spills onto the second line, it should be right-aligned from the second line on. \n\nSomething like that:\n```txt\nForever young\nI want to be forever young\nDo you really want to live \n                   forever?\nForever and ever\n```\n\nIs this possible (without inserting linebreaks etc. manually)?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 18,
      "score": 28.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 9
    },
    {
      "id": 12029,
      "post_number": 2,
      "username": "sijo",
      "name": "",
      "created_at": "2025-05-06T11:23:05.343Z",
      "updated_at": "2025-05-06T11:23:54.880Z",
      "cooked": "<p>Why would the first line stop at “young” if you don’t have a manual linebreak? (I’m trying to understand the desired output)</p>",
      "raw": "Why would the first line stop at \"young\" if you don't have a manual linebreak? (I'm trying to understand the desired output)",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 17,
      "score": 8.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 12035,
      "post_number": 3,
      "username": "Mc-Zen",
      "name": "Mc-Zen",
      "created_at": "2025-05-06T11:34:35.591Z",
      "updated_at": "2025-05-06T11:50:34.646Z",
      "cooked": "<p>Ah yes. My example has four lines of the chorus of that song. It happens to be that the third line is too long to fit the container width, so the line is broken. What I want is that the broken part is right-aligned. So basically similar to a <code>hanging-indent</code> but a “hanging-alignment”.</p>\n<p>Edit: I have tried to work with lists here (but with an insivible marker) but for those not even <code>set par(hanging-indent: true)</code> works.</p>",
      "raw": "Ah yes. My example has four lines of the chorus of that song. It happens to be that the third line is too long to fit the container width, so the line is broken. What I want is that the broken part is right-aligned. So basically similar to a `hanging-indent` but a \"hanging-alignment\".\n\n\nEdit: I have tried to work with lists here (but with an insivible marker) but for those not even `set par(hanging-indent: true)` works.",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 17,
      "score": 8.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 9
    },
    {
      "id": 12037,
      "post_number": 4,
      "username": "sijo",
      "name": "",
      "created_at": "2025-05-06T12:07:15.155Z",
      "updated_at": "2025-05-06T12:07:21.602Z",
      "cooked": "<p>For justified text you could do something like</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set page(width: 6cm)\n#set par(justify: true)\n\n#let f(it) = layout(size =&gt; {\n   it.children.split(linebreak()).map(array.join).map(x =&gt; {\n      if measure(x).width &gt; size.width {\n         box(width: 100%, align(right, x))\n      } else {\n         x + linebreak()\n      }\n   }).join()\n})\n\n#f[\n   Forever young\\\n   I want to be forever young\\\n   Do you really want to live forever?\\\n   Forever and ever\n]\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/7/75977a0f2bc166f46ccf4d4c166872298eed71ea.png\" alt=\"image\" data-base62-sha1=\"gMgoTF1n85C8blNOUAeylBtjKdQ\" width=\"210\" height=\"122\"></p>\n<p>but for ragged text I don’t know… It seems that this would require hooking up into the paragraph shaping algorithm, after the linebreaks have been decided but before the final result. You can do this in LuaTeX but I don’t think Typst supports that yet.</p>",
      "raw": "For justified text you could do something like\n\n```typ\n#set page(width: 6cm)\n#set par(justify: true)\n\n#let f(it) = layout(size => {\n   it.children.split(linebreak()).map(array.join).map(x => {\n      if measure(x).width > size.width {\n         box(width: 100%, align(right, x))\n      } else {\n         x + linebreak()\n      }\n   }).join()\n})\n\n#f[\n   Forever young\\\n   I want to be forever young\\\n   Do you really want to live forever?\\\n   Forever and ever\n]\n```\n\n![image|280x163, 75%](upload://gMgoTF1n85C8blNOUAeylBtjKdQ.png)\n\nbut for ragged text I don't know... It seems that this would require hooking up into the paragraph shaping algorithm, after the linebreaks have been decided but before the final result. You can do this in LuaTeX but I don't think Typst supports that yet.",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 4,
      "reads": 15,
      "score": 98.0,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 12041,
      "post_number": 5,
      "username": "Mc-Zen",
      "name": "Mc-Zen",
      "created_at": "2025-05-06T12:19:14.005Z",
      "updated_at": "2025-05-06T12:19:14.005Z",
      "cooked": "<p>Thank you, this works for me!</p>",
      "raw": "Thank you, this works for me!",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 14,
      "score": 17.8,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 9
    }
  ],
  "scraped_at": "2025-06-10T09:48:17.227131"
}