{
  "topic_metadata": {
    "id": 3496,
    "title": "How to combine the title of the document with the page counter in the footer",
    "slug": "how-to-combine-the-title-of-the-document-with-the-page-counter-in-the-footer",
    "posts_count": 11,
    "created_at": "2025-04-02T12:06:01.936Z",
    "last_posted_at": "2025-04-04T08:08:45.716Z",
    "views": 120,
    "like_count": 4,
    "reply_count": 8,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 4,
    "accepted_answer_username": "Adrian_Weitkemper",
    "tags": [
      "layout",
      "counter",
      "header-footer"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 1243
  },
  "posts": [
    {
      "id": 10532,
      "post_number": 1,
      "username": "jamie.bowman",
      "name": "Jamie Bowman",
      "created_at": "2025-04-02T12:06:02.110Z",
      "updated_at": "2025-04-02T12:06:02.110Z",
      "cooked": "<p>Hi,</p>\n<p>I’m trying to create a footer that is made up of both the title of the document (as a variable) and the current page counter, e.g. “Document title | 1”. Everything I’ve tried is giving me syntax errors.</p>\n<p>This is what I’m trying to edit that currently works (aligning left and right on opposite pages):</p>\n<pre><code class=\"lang-auto\">footer: context {\n      set text(8pt)\n      if calc.odd(here().page()) {\n        align(right, counter(page).display(\" | 1\"))\n      } else {\n        align(left, counter(page).display(\"| 1\"))\n      }\n    }\n</code></pre>\n<p>What I’ve tried that doesn’t work:</p>\n<ol>\n<li><code>align(right, counter(page).display(\" | 1\"))[#title]</code></li>\n<li><code>align(right)[#text], counter(page).display(\" | 1\"))</code></li>\n</ol>\n<p>Is there an easy way to combine two strings (that are both variables) in the footer? Thanks!</p>",
      "raw": "Hi, \n\nI'm trying to create a footer that is made up of both the title of the document (as a variable) and the current page counter, e.g. \"Document title | 1\". Everything I've tried is giving me syntax errors.\n\nThis is what I'm trying to edit that currently works (aligning left and right on opposite pages):\n```\nfooter: context {\n      set text(8pt)\n      if calc.odd(here().page()) {\n        align(right, counter(page).display(\" | 1\"))\n      } else {\n        align(left, counter(page).display(\"| 1\"))\n      }\n    }\n```\n\nWhat I've tried that doesn't work:\n1. `align(right, counter(page).display(\" | 1\"))[#title]`\n2. `align(right)[#text], counter(page).display(\" | 1\"))`\n\nIs there an easy way to combine two strings (that are both variables) in the footer? Thanks!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 30,
      "score": 166.0,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1410
    },
    {
      "id": 10533,
      "post_number": 2,
      "username": "Adrian_Weitkemper",
      "name": "Adron",
      "created_at": "2025-04-02T12:28:07.167Z",
      "updated_at": "2025-04-02T12:28:07.167Z",
      "cooked": "<p>Hi there! Welcome to the forum. You can combine two strings with the “+” operator (see the <a href=\"https://typst.app/docs/reference/foundations/str/\">Typst documentation</a>):</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let title = \"your title variable\"\n#align(right, context counter(page).display(title + \" | 1\"))\n</code></pre>\n<p>If this does not solve your problem, don’t hesitate to ask a follow up question. Otherwise, please mark this answer as the solution <img src=\"https://forum.typst.app/images/emoji/apple/blush.png?v=12\" title=\":blush:\" class=\"emoji\" alt=\":blush:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Hi there! Welcome to the forum. You can combine two strings with the \"+\" operator (see the [Typst documentation](https://typst.app/docs/reference/foundations/str/)): \n```typst\n#let title = \"your title variable\"\n#align(right, context counter(page).display(title + \" | 1\"))\n```\nIf this does not solve your problem, don't hesitate to ask a follow up question. Otherwise, please mark this answer as the solution :blush:",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 30,
      "score": 26.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 277
    },
    {
      "id": 10534,
      "post_number": 3,
      "username": "jamie.bowman",
      "name": "Jamie Bowman",
      "created_at": "2025-04-02T12:41:50.654Z",
      "updated_at": "2025-04-02T12:41:50.654Z",
      "cooked": "<p>Thanks for the warm welcome and helpful suggestion. I’ve tried solving it with this, but I’m still getting errors. What I’ve tried:</p>\n<ol>\n<li><code>align(right, counter(page).display(title + \"1\"))</code></li>\n<li><code>align(right, counter(page).display([title] + \"1\"))</code></li>\n<li><code>align(right, counter(page).display([#title] + \"1\"))</code></li>\n</ol>\n<p>None of which works, unfortunately. I’m certain the variable is assigned because it’s working elsewhere in the document. The error I’m getting is <code>error: expected string, function, or auto, found content</code>.</p>\n<p>Would it be helpful to share the full template?</p>",
      "raw": "Thanks for the warm welcome and helpful suggestion. I've tried solving it with this, but I'm still getting errors. What I've tried:\n\n1. `align(right, counter(page).display(title + \"1\"))`\n2. `align(right, counter(page).display([title] + \"1\"))`\n3. `align(right, counter(page).display([#title] + \"1\"))`\n\nNone of which works, unfortunately. I'm certain the variable is assigned because it's working elsewhere in the document. The error I'm getting is `error: expected string, function, or auto, found content`.\n\nWould it be helpful to share the full template?",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 27,
      "score": 10.4,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1410
    },
    {
      "id": 10535,
      "post_number": 4,
      "username": "Adrian_Weitkemper",
      "name": "Adron",
      "created_at": "2025-04-02T12:59:11.941Z",
      "updated_at": "2025-04-02T13:00:27.486Z",
      "cooked": "<p>Oh, I messed up, sry…</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#align(right, title + context counter(page).display(\" | 1 \"))\n</code></pre>\n<p>should work. “<span class=\"hashtag-raw\">#align</span>(right, context counter(page).display(” | 1 \") \" outputs \" | \" followed by the number and the title is not part of the pattern of the display function.<br>\nI changed the order (title to the left) and didn’t check again if it works <img src=\"https://forum.typst.app/images/emoji/apple/frowning.png?v=12\" title=\":frowning:\" class=\"emoji\" alt=\":frowning:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Oh, I messed up, sry...\n```typst\n#align(right, title + context counter(page).display(\" | 1 \"))\n```\nshould work. \"#align(right, context counter(page).display(\" | 1 \") \" outputs \" | \" followed by the number and the title is not part of the pattern of the display function. \nI changed the order (title to the left) and didn't check again if it works :frowning:",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 27,
      "score": 15.4,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 277
    },
    {
      "id": 10536,
      "post_number": 5,
      "username": "jamie.bowman",
      "name": "Jamie Bowman",
      "created_at": "2025-04-02T13:24:56.191Z",
      "updated_at": "2025-04-02T13:24:56.191Z",
      "cooked": "<p>That’s done the trick! Thanks so much for your help – it’s much appreciated.</p>",
      "raw": "That's done the trick! Thanks so much for your help -- it's much appreciated.",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 28,
      "score": 5.6,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1410
    },
    {
      "id": 10544,
      "post_number": 6,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-02T14:36:55.769Z",
      "updated_at": "2025-04-03T12:58:44.281Z",
      "cooked": "<p>This is not how you’re supposed to use <a href=\"https://typst.app/docs/reference/introspection/counter/#definitions-display-numbering\"><code>counter.display.numbering</code></a> (<a href=\"https://typst.app/docs/reference/introspection/counter/#definitions-display-numbering\"><code>numbering.numbering</code></a>).</p>\n<p>All non-numbering formatting should be done outside like this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let title = [Document title]\n#set page(\n  footer: context {\n    let page = counter(page).get().first()\n    set text(8pt)\n    if calc.odd(page) {\n      align(right)[#title | #page]\n    } else {\n      align(left)[#page | #title]\n    }\n  },\n)\n#set par(justify: true)\n\n#range(5).map(_ =&gt; lorem(150)).intersperse(parbreak()).join()\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/f/fd0f2c1125dfe47270174cf0f4c665b93d7d98d9.png\" data-download-href=\"https://forum.typst.app/uploads/default/fd0f2c1125dfe47270174cf0f4c665b93d7d98d9\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/f/fd0f2c1125dfe47270174cf0f4c665b93d7d98d9_2_690x463.png\" alt=\"image\" data-base62-sha1=\"A6FiYWqyFFKveV2O4do0vIKhMal\" width=\"690\" height=\"463\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/f/fd0f2c1125dfe47270174cf0f4c665b93d7d98d9_2_690x463.png, https://forum.typst.app/uploads/default/original/2X/f/fd0f2c1125dfe47270174cf0f4c665b93d7d98d9.png 1.5x, https://forum.typst.app/uploads/default/original/2X/f/fd0f2c1125dfe47270174cf0f4c665b93d7d98d9.png 2x\" data-dominant-color=\"0B0B0B\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">916×615 145 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n<p>Or a more proper way that is customizable:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let title = [Document title]\n#set page(\n  numbering: \"I\",\n  footer: context {\n    assert(page.numbering != none) // Assumes this is always true.\n    let page-number = counter(page).get().first()\n    let page-formatted = counter(page).display() // `page.numbering` is used automatically.k\n    set text(8pt)\n    if calc.odd(page-number) {\n      align(right)[#title | #page-formatted]\n    } else {\n      align(left)[#page-formatted | #title]\n    }\n  },\n)\n#set par(justify: true)\n\n#range(5).map(_ =&gt; lorem(150)).intersperse(parbreak()).join()\n</code></pre>\n<hr>\n<p>Also, if you want to add a code mode snippet, you can use <code>typc</code> language marker:</p>\n<pre data-code-wrap=\"md\"><code class=\"lang-md\">```typc\n```\n</code></pre>\n<p>So that the syntax highlight is correct:</p>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">footer: context {\n      set text(8pt)\n      if calc.odd(here().page()) {\n        align(right, counter(page).display(\" | 1\"))\n      } else {\n        align(left, counter(page).display(\"| 1\"))\n      }\n    }\n</code></pre>\n<p>There is also <code>typ</code> and <code>typm</code> for math.</p>",
      "raw": "This is not how you're supposed to use [`counter.display.numbering`](https://typst.app/docs/reference/introspection/counter/#definitions-display-numbering) ([`numbering.numbering`](https://typst.app/docs/reference/introspection/counter/#definitions-display-numbering)).\n\nAll non-numbering formatting should be done outside like this:\n\n```typ\n#let title = [Document title]\n#set page(\n  footer: context {\n    let page = counter(page).get().first()\n    set text(8pt)\n    if calc.odd(page) {\n      align(right)[#title | #page]\n    } else {\n      align(left)[#page | #title]\n    }\n  },\n)\n#set par(justify: true)\n\n#range(5).map(_ => lorem(150)).intersperse(parbreak()).join()\n```\n\n![image|690x463](upload://A6FiYWqyFFKveV2O4do0vIKhMal.png)\n\nOr a more proper way that is customizable:\n\n```typ\n#let title = [Document title]\n#set page(\n  numbering: \"I\",\n  footer: context {\n    assert(page.numbering != none) // Assumes this is always true.\n    let page-number = counter(page).get().first()\n    let page-formatted = counter(page).display() // `page.numbering` is used automatically.k\n    set text(8pt)\n    if calc.odd(page-number) {\n      align(right)[#title | #page-formatted]\n    } else {\n      align(left)[#page-formatted | #title]\n    }\n  },\n)\n#set par(justify: true)\n\n#range(5).map(_ => lorem(150)).intersperse(parbreak()).join()\n```\n---\n\nAlso, if you want to add a code mode snippet, you can use `typc` language marker:\n\n````md\n```typc\n```\n````\n\nSo that the syntax highlight is correct:\n\n```typc\nfooter: context {\n      set text(8pt)\n      if calc.odd(here().page()) {\n        align(right, counter(page).display(\" | 1\"))\n      } else {\n        align(left, counter(page).display(\"| 1\"))\n      }\n    }\n```\n\nThere is also `typ` and `typm` for math.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 28,
      "score": 15.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 10585,
      "post_number": 7,
      "username": "sijo",
      "name": "",
      "created_at": "2025-04-03T09:15:10.215Z",
      "updated_at": "2025-04-03T09:15:10.215Z",
      "cooked": "<p>I think you can just call <code>.display()</code> and not worry about <code>page.numbering</code>:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let title = [Document title]\n#set page(\n  numbering: \"I\",\n  footer: context {\n    set text(8pt)\n    let n = counter(page).display()\n    if calc.odd(here().page()) {\n      align(right)[#title | #n]\n    } else {\n      align(left)[#n | #title]\n    }\n  },\n)\n#set par(justify: true)\n\n#range(5).map(_ =&gt; lorem(150)).intersperse(parbreak()).join()\n</code></pre>\n<p>To check for left or right side it’s maybe better to use <code>here().page()</code> which gives the physical page number (so odd should always be on the right) while <code>counter(page)</code> can be set to anything by the user/template.</p>",
      "raw": "I think you can just call `.display()` and not worry about `page.numbering`:\n\n```typ\n#let title = [Document title]\n#set page(\n  numbering: \"I\",\n  footer: context {\n    set text(8pt)\n    let n = counter(page).display()\n    if calc.odd(here().page()) {\n      align(right)[#title | #n]\n    } else {\n      align(left)[#n | #title]\n    }\n  },\n)\n#set par(justify: true)\n\n#range(5).map(_ => lorem(150)).intersperse(parbreak()).join()\n```\n\nTo check for left or right side it's maybe better to use `here().page()` which gives the physical page number (so odd should always be on the right) while `counter(page)` can be set to anything by the user/template.",
      "reply_to_post_number": 6,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 22,
      "score": 44.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 10593,
      "post_number": 8,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-03T12:57:11.920Z",
      "updated_at": "2025-04-03T12:57:11.920Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"sijo\" data-post=\"7\" data-topic=\"3496\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/s/0A3649/48.png\" class=\"avatar\"> sijo:</div>\n<blockquote>\n<p>I think you can just call <code>.display()</code> and not worry about <code>page.numbering</code>:</p>\n</blockquote>\n</aside>\n<p><a href=\"https://typst.app/docs/reference/introspection/counter/#definitions-display\">Indeed</a>, but the <code>numbering</code> still should be set, because if the default numbering would be <code>\"1.1.\"</code> then it would add a period, so the assertion is just a best practice.</p>\n<blockquote>\n<p>If this is omitted or set to <code>auto</code>, displays the counter with the numbering style for the counted element or with the pattern <code>\"1.1\"</code> if no such style exists.</p>\n</blockquote>\n<aside class=\"quote no-group\" data-username=\"sijo\" data-post=\"7\" data-topic=\"3496\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/s/0A3649/48.png\" class=\"avatar\"> sijo:</div>\n<blockquote>\n<p>To check for left or right side it’s maybe better to use <code>here().page()</code> which gives the physical page number (so odd should always be on the right) while <code>counter(page)</code> can be set to anything by the user/template.</p>\n</blockquote>\n</aside>\n<p>Since I don’t know how exactly the pages will look like, I used the more flexible option where you can change where the odd numbers start. If the intent is to start with the first physical page, then <code>here().page()</code> should be used.</p>",
      "raw": "[quote=\"sijo, post:7, topic:3496\"]\nI think you can just call `.display()` and not worry about `page.numbering`:\n[/quote]\n\n[Indeed](https://typst.app/docs/reference/introspection/counter/#definitions-display), but the `numbering` still should be set, because if the default numbering would be `\"1.1.\"` then it would add a period, so the assertion is just a best practice.\n\n> If this is omitted or set to `auto`, displays the counter with the numbering style for the counted element or with the pattern `\"1.1\"` if no such style exists.\n\n[quote=\"sijo, post:7, topic:3496\"]\nTo check for left or right side it’s maybe better to use `here().page()` which gives the physical page number (so odd should always be on the right) while `counter(page)` can be set to anything by the user/template.\n[/quote]\n\nSince I don't know how exactly the pages will look like, I used the more flexible option where you can change where the odd numbers start. If the intent is to start with the first physical page, then `here().page()` should be used.",
      "reply_to_post_number": 7,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 0,
      "reads": 21,
      "score": 9.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 10598,
      "post_number": 9,
      "username": "sijo",
      "name": "",
      "created_at": "2025-04-03T15:52:16.143Z",
      "updated_at": "2025-04-03T15:52:55.710Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Andrew\" data-post=\"8\" data-topic=\"3496\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/andrew/48/62_2.png\" class=\"avatar\"> Andrew:</div>\n<blockquote>\n<p><a href=\"https://typst.app/docs/reference/introspection/counter/#definitions-display\">Indeed</a>, but the <code>numbering</code> still should be set, because if the default numbering would be <code>\"1.1.\"</code> then it would add a period, so the assertion is just a best practice.</p>\n</blockquote>\n</aside>\n<p>The documentation says</p>\n<blockquote>\n<p>If [the numbering] is omitted or set to <code>auto</code>, displays the counter with the numbering style for the counted element</p>\n</blockquote>\n<p>For the page counter this defaults to <code>\"1\"</code> so that’s fine.</p>\n<p>Regarding <code>here().page()</code> vs <code>counter(page)</code>, I don’t understand your point. We want different alignment for odd vs even <em>physical</em> pages: for a page physically on the right, we want the footer on the right. And the physical page is given by <code>here().page()</code>. For this purpose, the <code>counter(page)</code> flexibility doesn’t bring anything except bugs as far as I can see…</p>\n<p>Or do you mean that the document might be right-to-left? If that’s a concern It seems to me a better solution would be to check <code>text.dir</code>, and still use <code>here().page()</code>.</p>",
      "raw": "[quote=\"Andrew, post:8, topic:3496\"]\n[Indeed](https://typst.app/docs/reference/introspection/counter/#definitions-display), but the `numbering` still should be set, because if the default numbering would be `\"1.1.\"` then it would add a period, so the assertion is just a best practice.\n[/quote]\n\nThe documentation says\n\n> If [the numbering] is omitted or set to `auto`, displays the counter with the numbering style for the counted element\n\nFor the page counter this defaults to `\"1\"` so that's fine.\n\nRegarding `here().page()` vs `counter(page)`, I don't understand your point. We want different alignment for odd vs even *physical* pages: for a page physically on the right, we want the footer on the right. And the physical page is given by `here().page()`. For this purpose, the `counter(page)` flexibility doesn't bring anything except bugs as far as I can see...\n\nOr do you mean that the document might be right-to-left? If that's a concern It seems to me a better solution would be to check `text.dir`, and still use `here().page()`.",
      "reply_to_post_number": 8,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 1,
      "reads": 20,
      "score": 24.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 10600,
      "post_number": 10,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-03T16:48:11.827Z",
      "updated_at": "2025-04-03T16:48:11.827Z",
      "cooked": "<p>I can imagine a document where one or more first pages serve some special purpose and must not be counted toward physical pages that are used to determine which is left and which is right. There are a lot of cover/title pages where the numbering can start on the 2nd page or even after that. Without knowing the exact structure/intent, I wouldn’t suggest a single solution. In Okular, there is even a special view mode where the first page is centered, which can help in certain situations.</p>",
      "raw": "I can imagine a document where one or more first pages serve some special purpose and must not be counted toward physical pages that are used to determine which is left and which is right. There are a lot of cover/title pages where the numbering can start on the 2nd page or even after that. Without knowing the exact structure/intent, I wouldn't suggest a single solution. In Okular, there is even a special view mode where the first page is centered, which can help in certain situations.",
      "reply_to_post_number": 9,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 19,
      "score": 8.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 10605,
      "post_number": 11,
      "username": "sijo",
      "name": "",
      "created_at": "2025-04-04T08:08:45.716Z",
      "updated_at": "2025-04-04T08:08:45.716Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Andrew\" data-post=\"10\" data-topic=\"3496\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/andrew/48/62_2.png\" class=\"avatar\"> Andrew:</div>\n<blockquote>\n<p>There are a lot of cover/title pages where the numbering can start on the 2nd page or even after that.</p>\n</blockquote>\n</aside>\n<p>This is precisely why you want to use <code>here().page()</code>: it works consistently no matter where the user decides to start numbering pages. Normally it shouldn’t make a difference since the page on the right “should” show an odd number but you never know what the user will do. I think we’re going a bit in circle though… I would be interested to see a concrete document where <code>counter(page)</code> does the right thing and <code>here().page()</code> doesn’t.</p>",
      "raw": "[quote=\"Andrew, post:10, topic:3496\"]\nThere are a lot of cover/title pages where the numbering can start on the 2nd page or even after that.\n[/quote]\n\nThis is precisely why you want to use `here().page()`: it works consistently no matter where the user decides to start numbering pages. Normally it shouldn't make a difference since the page on the right \"should\" show an odd number but you never know what the user will do. I think we're going a bit in circle though... I would be interested to see a concrete document where `counter(page)` does the right thing and `here().page()` doesn't.",
      "reply_to_post_number": 10,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 1,
      "reads": 18,
      "score": 18.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 332
    }
  ],
  "scraped_at": "2025-06-10T09:49:46.639609"
}