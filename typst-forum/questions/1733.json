{
  "topic_metadata": {
    "id": 1733,
    "title": "How to find number of cited sources / number of Bibliography entries?",
    "slug": "how-to-find-number-of-cited-sources-number-of-bibliography-entries",
    "posts_count": 7,
    "created_at": "2024-11-14T21:37:02.495Z",
    "last_posted_at": "2024-11-16T09:58:24.542Z",
    "views": 191,
    "like_count": 2,
    "reply_count": 2,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 7,
    "accepted_answer_username": "NNS",
    "tags": [
      "scripting",
      "literature",
      "citation"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 478
  },
  "posts": [
    {
      "id": 5647,
      "post_number": 1,
      "username": "NNS",
      "name": "Nikolai Neff-Sarnow",
      "created_at": "2024-11-14T21:37:02.651Z",
      "updated_at": "2025-02-05T14:49:20.324Z",
      "cooked": "<p>Is there a reliable way to determine the number of cited sources with a query or any other way which lets me put that number into a variable? Another way of phrasing the question would be: can I get the count of Bibliography entries?</p>\n<p>I can’t directly count them from the BibTeX or YAML files since not all entries in there might be actually cited within the document and the number absolutely has to be accurate in all cases.</p>\n<p>I’m aware of the following workaround for getting the amount of sources cited via the @-syntax:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#context query(ref.where(element:none)).len()\n</code></pre>\n<p>but this does not work for sources cited using <code>#cite()</code>. And since <code>#cite()</code> is not locateable I can’t query them.</p>\n<p>But there must be a counter which is used for displaying the bibliography entries, but I haven’t found a way to access it from within Typst. (This is where a <a href=\"https://github.com/typst/typst/issues/2728\" rel=\"noopener nofollow ugc\">list of all available elements for counters</a> might help), or is this currently not possible?</p>",
      "raw": "Is there a reliable way to determine the number of cited sources with a query or any other way which lets me put that number into a variable? Another way of phrasing the question would be: can I get the count of Bibliography entries?\n\nI can't directly count them from the BibTeX or YAML files since not all entries in there might be actually cited within the document and the number absolutely has to be accurate in all cases.\n\nI'm aware of the following workaround for getting the amount of sources cited via the @-syntax:\n```typst\n#context query(ref.where(element:none)).len()\n```\nbut this does not work for sources cited using `#cite()`. And since `#cite()` is not locateable I can't query them.\n\nBut there must be a counter which is used for displaying the bibliography entries, but I haven't found a way to access it from within Typst. (This is where a [list of all available elements for counters](https://github.com/typst/typst/issues/2728) might help), or is this currently not possible?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 34,
      "score": 591.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 754
    },
    {
      "id": 5663,
      "post_number": 2,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-11-15T07:57:25.196Z",
      "updated_at": "2024-11-15T08:01:32.369Z",
      "cooked": "<p>You can use typst’s CLI <a href=\"https://typst.app/docs/reference/introspection/query/#:~:text=Command%20line%20queries\"><code>query</code></a>:</p>\n<pre data-code-wrap=\"bash\"><code class=\"lang-bash\">typst query doc.typ ref | jq '[.[] | select(.element == null)] | unique'\n</code></pre>\n<p>This should give you all unique bibliography’s references. If you add a final <code>length</code>, it should give you the count of unique citations in the document, i.e.,</p>\n<pre data-code-wrap=\"bash\"><code class=\"lang-bash\">typst query doc.typ ref | jq '[.[] | select(.element == null)] | unique | length'\n</code></pre>\n<p>EDIT: As for <code>cite</code>, you can try a simple</p>\n<pre data-code-wrap=\"bash\"><code class=\"lang-bash\">grep \"#cite\" doc.typ\n</code></pre>",
      "raw": "You can use typst's CLI [`query`](https://typst.app/docs/reference/introspection/query/#:~:text=Command%20line%20queries):\n\n```bash\ntypst query doc.typ ref | jq '[.[] | select(.element == null)] | unique'\n```\n\nThis should give you all unique bibliography's references. If you add a final `length`, it should give you the count of unique citations in the document, i.e.,\n```bash\ntypst query doc.typ ref | jq '[.[] | select(.element == null)] | unique | length'\n```\n\nEDIT: As for `cite`, you can try a simple \n```bash\ngrep \"#cite\" doc.typ\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 33,
      "score": 11.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 5670,
      "post_number": 3,
      "username": "NNS",
      "name": "Nikolai Neff-Sarnow",
      "created_at": "2024-11-15T12:23:33.812Z",
      "updated_at": "2024-11-15T12:24:23.692Z",
      "cooked": "<p>Unfortunately I can’t use external tools or the CLI. Also in my tests your query-example did not work for sources cited using <code>#cite()</code></p>",
      "raw": "Unfortunately I can't use external tools or the CLI. Also in my tests your query-example did not work for sources cited using `#cite()`",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 27,
      "score": 15.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 754
    },
    {
      "id": 5672,
      "post_number": 4,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-11-15T13:06:58.178Z",
      "updated_at": "2024-11-15T13:06:58.178Z",
      "cooked": "<p>Ah indeed, my bad I think I misread your initial post. As you rightly say so, <code>cite</code> is not locatable. I can’t think of any way to do that entirely in Typst however, that wouldn’t involved using a global show rule and parsing the entire AST.</p>",
      "raw": "Ah indeed, my bad I think I misread your initial post. As you rightly say so, `cite` is not locatable. I can't think of any way to do that entirely in Typst however, that wouldn't involved using a global show rule and parsing the entire AST.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 27,
      "score": 5.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 5679,
      "post_number": 5,
      "username": "PgBiel",
      "name": "",
      "created_at": "2024-11-15T17:33:55.127Z",
      "updated_at": "2024-11-15T17:33:55.127Z",
      "cooked": "<p>Hey <a class=\"mention\" href=\"/u/nns\">@NNS</a>! I’ve changed your question post’s title to better fit our guidelines: <a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11\" class=\"inline-onebox\">How to post in the Questions category</a></p>\n<p>Make sure your title is a question you’d ask to a friend about Typst. <img src=\"https://forum.typst.app/images/emoji/apple/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Hey @NNS! I've changed your question post's title to better fit our guidelines: https://forum.typst.app/t/how-to-post-in-the-questions-category/11\n\nMake sure your title is a question you'd ask to a friend about Typst. :wink:",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 27,
      "score": 95.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 5695,
      "post_number": 6,
      "username": "sjfhsjfh",
      "name": "sjfhsjfh",
      "created_at": "2024-11-16T07:55:34.578Z",
      "updated_at": "2024-11-16T11:21:54.182Z",
      "cooked": "<p>Maybe try this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let citation-counter = state(\"citation-counter\", ())\n#show cite: it =&gt; {\n  it\n  bib-count.update(((..c)) =&gt; (..c, it.key))\n}\n#let count = context citation-counter.final().dedup().len()\n</code></pre>\n<p>Edit: fixed typo</p>",
      "raw": "Maybe try this:\n```typ\n#let citation-counter = state(\"citation-counter\", ())\n#show cite: it => {\n  it\n  bib-count.update(((..c)) => (..c, it.key))\n}\n#let count = context citation-counter.final().dedup().len()\n```\n\nEdit: fixed typo",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 26,
      "score": 65.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 120
    },
    {
      "id": 5696,
      "post_number": 7,
      "username": "NNS",
      "name": "Nikolai Neff-Sarnow",
      "created_at": "2024-11-16T09:58:24.542Z",
      "updated_at": "2024-11-16T09:58:24.542Z",
      "cooked": "<p>This works, but you mixed up the variable names <img src=\"https://forum.typst.app/images/emoji/apple/grinning.png?v=12\" title=\":grinning:\" class=\"emoji\" alt=\":grinning:\" loading=\"lazy\" width=\"20\" height=\"20\"> Here’s the working code for anyone else interested:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let bib-count = state(\"citation-counter\", ())\n#show cite: it =&gt; {\n  it\n  bib-count.update(((..c)) =&gt; (..c, it.key))\n}\n#let count = context bib-count.final().dedup().len()\n</code></pre>\n<p>It still feels like there should be an easier way, but for now I’m marking this as solved. Thanks again!</p>",
      "raw": "This works, but you mixed up the variable names :grinning: Here's the working code for anyone else interested:\n\n```typst\n#let bib-count = state(\"citation-counter\", ())\n#show cite: it => {\n  it\n  bib-count.update(((..c)) => (..c, it.key))\n}\n#let count = context bib-count.final().dedup().len()\n```\nIt still feels like there should be an easier way, but for now I'm marking this as solved. Thanks again!",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 25,
      "score": 44.8,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 754
    }
  ],
  "scraped_at": "2025-06-10T09:54:53.801591"
}