{
  "topic_metadata": {
    "id": 3793,
    "title": "How to have a number with blue circle background in text?",
    "slug": "how-to-have-a-number-with-blue-circle-background-in-text",
    "posts_count": 23,
    "created_at": "2025-04-24T12:41:40.193Z",
    "last_posted_at": "2025-04-25T04:16:45.300Z",
    "views": 129,
    "like_count": 6,
    "reply_count": 20,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "vmartel08",
    "tags": [
      "text-formatting"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 1113
  },
  "posts": [
    {
      "id": 11552,
      "post_number": 1,
      "username": "Manfred_Lotz",
      "name": "Manfred Lotz",
      "created_at": "2025-04-24T12:41:40.331Z",
      "updated_at": "2025-04-26T20:16:15.465Z",
      "cooked": "<p>I tried this</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let bluenum(num) = {\n    highlight(fill: blue, radius: 9pt, extent: 7pt,)[#num]\n}\n\n#let bnum1 = { bluenum(1) }\n\nThis is very interesting #bnum1\n</code></pre>\n<p>But this isn‚Äôt exactly a circle. <img src=\"https://forum.typst.app/images/emoji/apple/grin.png?v=12\" title=\":grin:\" class=\"emoji\" alt=\":grin:\" loading=\"lazy\" width=\"20\" height=\"20\"> What‚Äôs the best way to have this with a real circle?</p>",
      "raw": "I tried this\n\n```typst\n#let bluenum(num) = {\n    highlight(fill: blue, radius: 9pt, extent: 7pt,)[#num]\n}\n\n#let bnum1 = { bluenum(1) }\n\nThis is very interesting #bnum1\n```\n\nBut this isn't exactly a circle. üòÅ What's the best way to have this with a real circle?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 45,
      "score": 173.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 638
    },
    {
      "id": 11553,
      "post_number": 2,
      "username": "vmartel08",
      "name": "Vincent Martel",
      "created_at": "2025-04-24T13:01:00.425Z",
      "updated_at": "2025-04-24T13:01:00.425Z",
      "cooked": "<p>Hi there, something like this?</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">This is more #box(circle(fill: blue, \"1\"))\n</code></pre>",
      "raw": "Hi there, something like this?\n\n```typ \nThis is more #box(circle(fill: blue, \"1\"))\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 45,
      "score": 18.8,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 936
    },
    {
      "id": 11554,
      "post_number": 3,
      "username": "Manfred_Lotz",
      "name": "Manfred Lotz",
      "created_at": "2025-04-24T13:17:50.028Z",
      "updated_at": "2025-04-24T13:17:50.028Z",
      "cooked": "<p>Thanks a lot. I tried <code>#circle</code> but missed <code>#box</code>.</p>\n<p>So this looks now quite ok</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let cnum(num) = {\n  box(height: 0.9em, circle(fill: blue, [#set align(center + horizon)\n      #num]))\n}\n\n#let cnum1 = { cnum(1) }\n\nThis is very interesting #cnum1\n</code></pre>",
      "raw": "Thanks a lot. I tried `#circle` but missed `#box`.\n\nSo this looks now quite ok\n\n```typst\n#let cnum(num) = {\n  box(height: 0.9em, circle(fill: blue, [#set align(center + horizon)\n      #num]))\n}\n\n#let cnum1 = { cnum(1) }\n\nThis is very interesting #cnum1\n```",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 44,
      "score": 18.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 638
    },
    {
      "id": 11555,
      "post_number": 4,
      "username": "Manfred_Lotz",
      "name": "Manfred Lotz",
      "created_at": "2025-04-24T14:07:38.433Z",
      "updated_at": "2025-04-24T14:07:50.758Z",
      "cooked": "<p>Using unicode characters also seem to be a possibility</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let nnum1 = { strong(text(fill:blue, [‚ù∂])) }\n\nThis is very interesting #nnum1\n</code></pre>",
      "raw": "Using unicode characters also seem to be a possibility\n\n```typst\n#let nnum1 = { strong(text(fill:blue, [‚ù∂])) }\n\nThis is very interesting #nnum1\n```",
      "reply_to_post_number": 3,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 0,
      "reads": 43,
      "score": 23.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 638
    },
    {
      "id": 11557,
      "post_number": 5,
      "username": "gezepi",
      "name": "",
      "created_at": "2025-04-24T14:26:40.690Z",
      "updated_at": "2025-04-25T06:09:29.464Z",
      "cooked": "<p>I got curious if it was possible to generalize using Unicode characters and turns out it is:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let nnum(num) = {\n  if num &lt; 1 or num &gt; 10 { panic(\"Given number must be between 1 and 10 (inclusive)\") }\n  let numId = \"‚ù∂\".to-unicode() + (num - 1)\n  strong(text(fill:blue, str.from-unicode(numId)))\n}\n</code></pre>\n<p><strong>Edit</strong>: <a href=\"https://forum.typst.app/u/vmartel08\">vmartel08</a> pointed out that <a href=\"https://typst.app/docs/reference/model/numbering/\"><code>numbering</code></a> already has the capability to display numbers this way, so this function is unnecessary.</p>",
      "raw": "I got curious if it was possible to generalize using Unicode characters and turns out it is:\n```typ\n#let nnum(num) = {\n  if num < 1 or num > 10 { panic(\"Given number must be between 1 and 10 (inclusive)\") }\n  let numId = \"‚ù∂\".to-unicode() + (num - 1)\n  strong(text(fill:blue, str.from-unicode(numId)))\n}\n```\n\n**Edit**: [vmartel08](https://forum.typst.app/u/vmartel08) pointed out that [`numbering`](https://typst.app/docs/reference/model/numbering/) already has the capability to display numbers this way, so this function is unnecessary.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 40,
      "score": 17.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 326
    },
    {
      "id": 11559,
      "post_number": 6,
      "username": "vmartel08",
      "name": "Vincent Martel",
      "created_at": "2025-04-24T14:36:50.031Z",
      "updated_at": "2025-04-24T14:36:50.031Z",
      "cooked": "<p>Lots of symbols are actually available for automatic numbering. <a href=\"https://typst.app/docs/reference/model/numbering/#parameters-numbering\" class=\"inline-onebox\">Numbering Function ‚Äì Typst Documentation</a></p>\n<blockquote>\n<p><strong>Counting symbols</strong> are <code>1</code>, <code>a</code>, <code>A</code>, <code>i</code>, <code>I</code>, <code>Œ±</code>, <code>Œë</code>, <code>‰∏Ä</code>, <code>Â£π</code>, <code>„ÅÇ</code>, <code>„ÅÑ</code>, <code>„Ç¢</code>, <code>„Ç§</code>, <code>◊ê</code>, <code>Í∞Ä</code>, <code>„Ñ±</code>, <code>*</code>, <code>Ÿ°</code>, <code>€±</code>, <code>‡•ß</code>, <code>‡ßß</code>, <code>‡¶ï</code>, <code>‚ë†</code>, and <code>‚ìµ</code>. They are replaced by the number in the sequence, preserving the original case.</p>\n</blockquote>",
      "raw": "Lots of symbols are actually available for automatic numbering. https://typst.app/docs/reference/model/numbering/#parameters-numbering\n>**Counting symbols** are `1`, `a`, `A`, `i`, `I`, `Œ±`, `Œë`, `‰∏Ä`, `Â£π`, `„ÅÇ`, `„ÅÑ`, `„Ç¢`, `„Ç§`, `◊ê`, `Í∞Ä`, `„Ñ±`, `*`, `Ÿ°`, `€±`, `‡•ß`, `‡ßß`, `‡¶ï`, `‚ë†`, and `‚ìµ`. They are replaced by the number in the sequence, preserving the original case.",
      "reply_to_post_number": 4,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 39,
      "score": 42.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 936
    },
    {
      "id": 11567,
      "post_number": 7,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-24T17:39:30.304Z",
      "updated_at": "2025-04-24T17:39:30.304Z",
      "cooked": "<p>You don‚Äôt need curly braces in let assignment. <code>text.fill</code> and <code>text.size</code> can be passed without name.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let nnum1 = text(blue)[*‚ù∂*]\n#let nnum1 = strong(text(blue)[‚ù∂])\n\nThis is very interesting #nnum1\n</code></pre>",
      "raw": "You don't need curly braces in let assignment. `text.fill` and `text.size` can be passed without name.\n\n```typ\n#let nnum1 = text(blue)[*‚ù∂*]\n#let nnum1 = strong(text(blue)[‚ù∂])\n\nThis is very interesting #nnum1\n```",
      "reply_to_post_number": 4,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 35,
      "score": 11.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11568,
      "post_number": 8,
      "username": "Manfred_Lotz",
      "name": "Manfred Lotz",
      "created_at": "2025-04-24T17:44:26.575Z",
      "updated_at": "2025-04-24T17:44:26.575Z",
      "cooked": "<p>Ah, thanks. Didn‚Äôt know. Is this specifically when I call built in functions?</p>",
      "raw": "Ah, thanks. Didn't know. Is this specifically when I call built in functions?",
      "reply_to_post_number": 7,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 34,
      "score": 11.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 638
    },
    {
      "id": 11570,
      "post_number": 9,
      "username": "Manfred_Lotz",
      "name": "Manfred Lotz",
      "created_at": "2025-04-24T17:45:25.538Z",
      "updated_at": "2025-04-24T17:45:25.538Z",
      "cooked": "<p>Thanks for this functions.</p>",
      "raw": "Thanks for this functions.",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 33,
      "score": 6.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 638
    },
    {
      "id": 11571,
      "post_number": 10,
      "username": "Manfred_Lotz",
      "name": "Manfred Lotz",
      "created_at": "2025-04-24T17:47:36.378Z",
      "updated_at": "2025-04-24T17:49:53.751Z",
      "cooked": "<p><code>numbering</code> is indeed interesting.</p>\n<p>I am thinking if it would be possible to combine numbering with the function <a class=\"mention\" href=\"/u/gezepi\">@gezepi</a> gave.  Then one could invoke that function without a parameter and<br>\n‚Äú‚ù∂‚Äù would get incremented automatically when that function would be called again.</p>",
      "raw": "`numbering` is indeed interesting. \n\nI am thinking if it would be possible to combine numbering with the function @gezepi gave.  Then one could invoke that function without a parameter and\n\"‚ù∂\" would get incremented automatically when that function would be called again.",
      "reply_to_post_number": 6,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 32,
      "score": 11.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 638
    },
    {
      "id": 11572,
      "post_number": 11,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-24T18:04:32.157Z",
      "updated_at": "2025-04-24T18:04:32.157Z",
      "cooked": "<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let nnum(num) = {\n  strong(text(blue, numbering(\"‚ë†\", num)))\n  strong(text(blue, numbering(\"‚ìµ\", num)))\n}\n\n#range(51).map(i =&gt; nnum(i + 1)).map(list.item).join()\n</code></pre>\n<p>Automatic counting:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set page(height: auto)\n\n#let nnum() = {\n  let counter = counter(\"blue-number\")\n  counter.step()\n  context {\n    strong(text(blue, counter.display(\"‚ë†\")))\n    strong(text(blue, counter.display(\"‚ìµ\")))\n  }\n}\n\n#for _ in range(51) [- #nnum()]\n</code></pre>\n<details><summary>output</summary>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/2/28ba2e47bf683c3617ca3f588e76f0d17ff90a34.png\" data-download-href=\"https://forum.typst.app/uploads/default/28ba2e47bf683c3617ca3f588e76f0d17ff90a34\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/2/28ba2e47bf683c3617ca3f588e76f0d17ff90a34_2_32x500.png\" alt=\"image\" data-base62-sha1=\"5OhZkSVkwkggjwlAPZeBT3HGpiQ\" width=\"32\" height=\"500\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/2/28ba2e47bf683c3617ca3f588e76f0d17ff90a34_2_32x500.png, https://forum.typst.app/uploads/default/optimized/2X/2/28ba2e47bf683c3617ca3f588e76f0d17ff90a34_2_48x750.png 1.5x, https://forum.typst.app/uploads/default/optimized/2X/2/28ba2e47bf683c3617ca3f588e76f0d17ff90a34_2_64x1000.png 2x\" data-dominant-color=\"18232B\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">65√ó1012 20.2 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n</details>",
      "raw": "```typ\n#let nnum(num) = {\n  strong(text(blue, numbering(\"‚ë†\", num)))\n  strong(text(blue, numbering(\"‚ìµ\", num)))\n}\n\n#range(51).map(i => nnum(i + 1)).map(list.item).join()\n```\n\nAutomatic counting:\n\n```typ\n#set page(height: auto)\n\n#let nnum() = {\n  let counter = counter(\"blue-number\")\n  counter.step()\n  context {\n    strong(text(blue, counter.display(\"‚ë†\")))\n    strong(text(blue, counter.display(\"‚ìµ\")))\n  }\n}\n\n#for _ in range(51) [- #nnum()]\n```\n\n<details><summary>output</summary>\n\n![image|32x500](upload://5OhZkSVkwkggjwlAPZeBT3HGpiQ.png)\n\n</details>",
      "reply_to_post_number": 10,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 30,
      "score": 40.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11573,
      "post_number": 12,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-24T18:05:29.953Z",
      "updated_at": "2025-04-24T18:05:29.953Z",
      "cooked": "<p>What exactly do you refer to?</p>",
      "raw": "What exactly do you refer to?",
      "reply_to_post_number": 8,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 30,
      "score": 15.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11574,
      "post_number": 13,
      "username": "Manfred_Lotz",
      "name": "Manfred Lotz",
      "created_at": "2025-04-24T18:16:36.755Z",
      "updated_at": "2025-04-24T18:17:55.085Z",
      "cooked": "<p>Actually I want to have some text organized like this</p>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/a/a9d250f171b94ae179b2b18e03e7512cdee41deb.png\" alt=\"image\" data-base62-sha1=\"oeji9ITEqFhv8qJtjA2SdRev7hF\" width=\"406\" height=\"112\"></p>\n<p>where I can add additional information to 1 and 2. below the given text.</p>\n<p>Here it would perhaps be best if I call a function with a number parameter like for example <code>#cnum(1)</code> and <code>#cnum(2)</code></p>\n<p>But then I got curious (due to <a class=\"mention\" href=\"/u/vmartel08\">@vmartel08</a> reference to counting) how to be able to do automatical counting.</p>",
      "raw": "Actually I want to have some text organized like this\n\n![image|406x112](upload://oeji9ITEqFhv8qJtjA2SdRev7hF.png)\n\nwhere I can add additional information to 1 and 2. below the given text.\n\nHere it would perhaps be best if I call a function with a number parameter like for example `#cnum(1)` and `#cnum(2)` \n\nBut then I got curious (due to @vmartel08 reference to counting) how to be able to do automatical counting.",
      "reply_to_post_number": 12,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 32,
      "score": 26.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 638
    },
    {
      "id": 11575,
      "post_number": 14,
      "username": "Manfred_Lotz",
      "name": "Manfred Lotz",
      "created_at": "2025-04-24T18:34:52.550Z",
      "updated_at": "2025-04-24T18:36:52.977Z",
      "cooked": "<p>Or perhaps in better words: I like to have a verbatim block where I can include such numbers. Later I want to refer to those numbers</p>",
      "raw": "Or perhaps in better words: I like to have a verbatim block where I can include such numbers. Later I want to refer to those numbers",
      "reply_to_post_number": 13,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 30,
      "score": 11.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 638
    },
    {
      "id": 11576,
      "post_number": 15,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-24T18:45:15.946Z",
      "updated_at": "2025-04-24T18:45:15.946Z",
      "cooked": "<p>How do you want to refer to them later?</p>\n<p>Maybe you should create a new general question for that.</p>",
      "raw": "How do you want to refer to them later?\n\nMaybe you should create a new general question for that.",
      "reply_to_post_number": 14,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 27,
      "score": 10.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11577,
      "post_number": 16,
      "username": "Manfred_Lotz",
      "name": "Manfred Lotz",
      "created_at": "2025-04-24T18:57:50.575Z",
      "updated_at": "2025-04-24T18:59:10.856Z",
      "cooked": "<p>When I use <code>#nnum(1)</code> aso (from your first example)  I later can refer to them again with <code>#nnum(1)</code> aso.</p>\n<p>Somehow like this:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#text(font: \"FiraCode Nerd Font\")[\nNAME    TYPE       SIZE USED PRIO\\\n/dev/zram0#nnum(1) partition 30,6G 4,2G  100#nnum(2)\n]\n\n/ #nnum(1): name of the swap device\n/ #nnum(2): swap priority\n</code></pre>",
      "raw": "When I use `#nnum(1)` aso (from your first example)  I later can refer to them again with `#nnum(1)` aso.\n\nSomehow like this:\n\n```typst\n#text(font: \"FiraCode Nerd Font\")[\nNAME    TYPE       SIZE USED PRIO\\\n/dev/zram0#nnum(1) partition 30,6G 4,2G  100#nnum(2)\n]\n\n/ #nnum(1): name of the swap device\n/ #nnum(2): swap priority\n```",
      "reply_to_post_number": 15,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 28,
      "score": 10.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 638
    },
    {
      "id": 11578,
      "post_number": 17,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-24T18:59:37.861Z",
      "updated_at": "2025-04-24T19:22:40.173Z",
      "cooked": "<p>What if you have 2 code blocks with blue circles?</p>\n<details><summary>Codly highlights + auto counter solution</summary>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/codly:1.3.0\": *\n#show: codly-init\n\n#set page(height: auto)\n\n#let ncounter = counter(\"blue-number\")\n#let nnum() = {\n  ncounter.step()\n  context strong(text(blue, ncounter.display(\"‚ë†\")))\n}\n#show raw.where(block: true): it =&gt; it + ncounter.update(0)\n\n#codly(\n  highlight-fill: _ =&gt; none,\n  highlight-stroke: _ =&gt; none,\n  highlights: (\n    (line: 2, tag: nnum(), label: &lt;a&gt;),\n    (line: 4, tag: nnum(), label: &lt;b&gt;),\n  ),\n)\n\n#figure(```\nciea\nastehasi\n\nstehasi\nieasti\n```) &lt;code&gt;\n\n@code:2 &amp; @code:4\n\nor\n\n@a &amp; @b\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/c/ce14cf932e0a02f1111badd7398ef639d720177e.png\" data-download-href=\"https://forum.typst.app/uploads/default/ce14cf932e0a02f1111badd7398ef639d720177e\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/c/ce14cf932e0a02f1111badd7398ef639d720177e_2_690x239.png\" alt=\"image\" data-base62-sha1=\"tp4WE9K3fczjl3h9Rngju3jUPaS\" width=\"690\" height=\"239\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/c/ce14cf932e0a02f1111badd7398ef639d720177e_2_690x239.png, https://forum.typst.app/uploads/default/original/2X/c/ce14cf932e0a02f1111badd7398ef639d720177e.png 1.5x, https://forum.typst.app/uploads/default/original/2X/c/ce14cf932e0a02f1111badd7398ef639d720177e.png 2x\" data-dominant-color=\"161716\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">764√ó265 14.7 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n</details>\n<details><summary>For multiple numbers per line with latest version</summary>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#codly(\n  highlight-fill: _ =&gt; none,\n  highlight-stroke: _ =&gt; none,\n  highlight-inset: 0pt, // https://github.com/Dherse/codly/issues/81\n  highlights: (\n    (line: 2, start: 4, end: 4, tag: nnum(), label: &lt;a&gt;),\n    (line: 2, start: 8, tag: nnum(), label: &lt;b&gt;),\n  ),\n)\n\n#figure(```\ncode\nthis that\n```) &lt;code&gt;\n\n@a, @b\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/3/3a93a4e3c8f844dd9b3f9a9382a7b50be94dd7d0.png\" data-download-href=\"https://forum.typst.app/uploads/default/3a93a4e3c8f844dd9b3f9a9382a7b50be94dd7d0\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/3/3a93a4e3c8f844dd9b3f9a9382a7b50be94dd7d0_2_690x129.png\" alt=\"image\" data-base62-sha1=\"8mc1ceOSb0Lc4SRCk8fPVzQeYI8\" width=\"690\" height=\"129\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/3/3a93a4e3c8f844dd9b3f9a9382a7b50be94dd7d0_2_690x129.png, https://forum.typst.app/uploads/default/original/2X/3/3a93a4e3c8f844dd9b3f9a9382a7b50be94dd7d0.png 1.5x, https://forum.typst.app/uploads/default/original/2X/3/3a93a4e3c8f844dd9b3f9a9382a7b50be94dd7d0.png 2x\" data-dominant-color=\"131413\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">780√ó146 7.07 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n</details>",
      "raw": "What if you have 2 code blocks with blue circles?\n\n<details><summary>Codly highlights + auto counter solution</summary>\n\n````typ\n#import \"@preview/codly:1.3.0\": *\n#show: codly-init\n\n#set page(height: auto)\n\n#let ncounter = counter(\"blue-number\")\n#let nnum() = {\n  ncounter.step()\n  context strong(text(blue, ncounter.display(\"‚ë†\")))\n}\n#show raw.where(block: true): it => it + ncounter.update(0)\n\n#codly(\n  highlight-fill: _ => none,\n  highlight-stroke: _ => none,\n  highlights: (\n    (line: 2, tag: nnum(), label: <a>),\n    (line: 4, tag: nnum(), label: <b>),\n  ),\n)\n\n#figure(```\nciea\nastehasi\n\nstehasi\nieasti\n```) <code>\n\n@code:2 & @code:4\n\nor\n\n@a & @b\n````\n\n![image|690x239](upload://tp4WE9K3fczjl3h9Rngju3jUPaS.png)\n\n</details>\n\n<details><summary>For multiple numbers per line with latest version</summary>\n\n````typ\n#codly(\n  highlight-fill: _ => none,\n  highlight-stroke: _ => none,\n  highlight-inset: 0pt, // https://github.com/Dherse/codly/issues/81\n  highlights: (\n    (line: 2, start: 4, end: 4, tag: nnum(), label: <a>),\n    (line: 2, start: 8, tag: nnum(), label: <b>),\n  ),\n)\n\n#figure(```\ncode\nthis that\n```) <code>\n\n@a, @b\n````\n\n![image|690x129](upload://8mc1ceOSb0Lc4SRCk8fPVzQeYI8.png)\n\n</details>",
      "reply_to_post_number": 16,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 9.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11579,
      "post_number": 18,
      "username": "Manfred_Lotz",
      "name": "Manfred Lotz",
      "created_at": "2025-04-24T19:18:06.373Z",
      "updated_at": "2025-04-24T19:20:25.536Z",
      "cooked": "<p><code>codly</code> is interesting. Thanks.</p>\n<p>When having more than one code block one could use</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let nnum(num) = {\n  strong(text(blue, numbering(\"‚ìµ\", num)))\n}\n</code></pre>\n<p>which you gave previously.</p>",
      "raw": "`codly` is interesting. Thanks.\n\nWhen having more than one code block one could use \n\n```typst\n#let nnum(num) = {\n  strong(text(blue, numbering(\"‚ìµ\", num)))\n}\n```\nwhich you gave previously.",
      "reply_to_post_number": 17,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 25,
      "score": 9.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 638
    },
    {
      "id": 11581,
      "post_number": 19,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-24T19:25:25.511Z",
      "updated_at": "2025-04-24T19:25:25.511Z",
      "cooked": "<p>So you expect <code>nnum(1)</code> to refer to different code block (lines) depending on location of the reference (with respect to code blocks)?</p>",
      "raw": "So you expect `nnum(1)` to refer to different code block (lines) depending on location of the reference (with respect to code blocks)?",
      "reply_to_post_number": 18,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 23,
      "score": 9.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11582,
      "post_number": 20,
      "username": "Manfred_Lotz",
      "name": "Manfred Lotz",
      "created_at": "2025-04-24T19:27:01.966Z",
      "updated_at": "2025-04-24T19:27:01.966Z",
      "cooked": "<p>Yes, as I reference to <code>nnum(...)</code> directly after the code block.</p>",
      "raw": "Yes, as I reference to `nnum(...)` directly after the code block.",
      "reply_to_post_number": 19,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 25,
      "score": 14.8,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 638
    },
    {
      "id": 11584,
      "post_number": 21,
      "username": "Manfred_Lotz",
      "name": "Manfred Lotz",
      "created_at": "2025-04-24T20:02:14.733Z",
      "updated_at": "2025-04-24T20:02:14.733Z",
      "cooked": "<p>Something like this would be fine for me</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let nnum(num) = {\n  strong(text(blue, numbering(\"‚ë†\", num)))\n}\n\n#codly(\n  highlight-fill: _ =&gt; none,\n  highlight-stroke: _ =&gt; none,\n    number-format: none,\n  highlights: (\n    (line: 1, tag: nnum(1)),\n    (line: 3, tag: nnum(2)),\n  ),\n)\n\n\n#figure(```\n something\n   more\n what is that?\n```)\n\n/ #nnum(1): something can be important\n/ #nnum(2): this is a question\n</code></pre>",
      "raw": "Something like this would be fine for me\n\n```typst\n#let nnum(num) = {\n  strong(text(blue, numbering(\"‚ë†\", num)))\n}\n\n#codly(\n  highlight-fill: _ => none,\n  highlight-stroke: _ => none,\n    number-format: none,\n  highlights: (\n    (line: 1, tag: nnum(1)),\n    (line: 3, tag: nnum(2)),\n  ),\n)\n\n\n#figure(```\n something\n   more\n what is that?\n```)\n\n/ #nnum(1): something can be important\n/ #nnum(2): this is a question\n```",
      "reply_to_post_number": 20,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 9.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 638
    },
    {
      "id": 11586,
      "post_number": 22,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-24T20:18:31.998Z",
      "updated_at": "2025-04-24T20:18:31.998Z",
      "cooked": "<p>So when you say ‚Äúreference‚Äù you just mean display the same number without creating a link like <code>ref</code> function does?</p>\n<p>Anyway, here is the proper reference solution:</p>\n<details><summary>Solution</summary>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/codly:1.3.0\": *\n#show: codly-init\n#codly(\n  highlight-fill: _ =&gt; none,\n  highlight-stroke: _ =&gt; none,\n  number-format: none,\n  highlight-inset: 0pt, // https://github.com/Dherse/codly/issues/81\n)\n\n#let raw-count() = counter(figure.where(kind: raw)).get().first()\n#let nnum-label(raw-num, n) = label(str(raw-num) + \"-\" + str(n))\n\n#let nnum(n) = context {\n  let label = nnum-label(raw-count(), n)\n  let body = strong(text(0.8em, baseline: 0.1em, blue, numbering(\"‚ìµ\", n)))\n  link(label, body)\n}\n\n#let add-markers(..markers) = context {\n  let raw-num = raw-count() + 1\n  let markers = for marker in markers.pos() {\n    let n = marker.remove(\"nnum\")\n    ((..marker, tag: nnum(n), label: nnum-label(raw-num, n)),)\n  }\n  codly(highlights: markers)\n}\n\n#let unique-code-block(body) = context {\n  [#figure(body)#label(\"code\" + str(raw-count() + 1))]\n}\n\n#add-markers((line: 2, start: 4, end: 4, nnum: 1), (line: 2, start: 8, nnum: 2))\n#unique-code-block(```\ncode\nthis that\n```)\n\n/ #nnum(1): first\n/ #nnum(2): second\n\n#add-markers((line: 1, nnum: 1), (line: 2, nnum: 2), (line: 3, nnum: 3))\n#unique-code-block(```\ncode\nwiedahie\ndorfkie\n```)\n\n/ #nnum(1): first\n/ #nnum(2): second\n/ #nnum(3): third\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/c/c5fe7b1e77a44b78c380c6a5bf94723393eecdd0.png\" data-download-href=\"https://forum.typst.app/uploads/default/c5fe7b1e77a44b78c380c6a5bf94723393eecdd0\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/c/c5fe7b1e77a44b78c380c6a5bf94723393eecdd0_2_690x271.png\" alt=\"image\" data-base62-sha1=\"sfxhDRD4hDX2cCP1CUjZ6qAlFII\" width=\"690\" height=\"271\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/c/c5fe7b1e77a44b78c380c6a5bf94723393eecdd0_2_690x271.png, https://forum.typst.app/uploads/default/original/2X/c/c5fe7b1e77a44b78c380c6a5bf94723393eecdd0.png 1.5x, https://forum.typst.app/uploads/default/original/2X/c/c5fe7b1e77a44b78c380c6a5bf94723393eecdd0.png 2x\" data-dominant-color=\"151615\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">787√ó310 15.5 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n</details>",
      "raw": "So when you say \"reference\" you just mean display the same number without creating a link like `ref` function does?\n\nAnyway, here is the proper reference solution:\n\n<details><summary>Solution</summary>\n\n```typ\n#import \"@preview/codly:1.3.0\": *\n#show: codly-init\n#codly(\n  highlight-fill: _ => none,\n  highlight-stroke: _ => none,\n  number-format: none,\n  highlight-inset: 0pt, // https://github.com/Dherse/codly/issues/81\n)\n\n#let raw-count() = counter(figure.where(kind: raw)).get().first()\n#let nnum-label(raw-num, n) = label(str(raw-num) + \"-\" + str(n))\n\n#let nnum(n) = context {\n  let label = nnum-label(raw-count(), n)\n  let body = strong(text(0.8em, baseline: 0.1em, blue, numbering(\"‚ìµ\", n)))\n  link(label, body)\n}\n\n#let add-markers(..markers) = context {\n  let raw-num = raw-count() + 1\n  let markers = for marker in markers.pos() {\n    let n = marker.remove(\"nnum\")\n    ((..marker, tag: nnum(n), label: nnum-label(raw-num, n)),)\n  }\n  codly(highlights: markers)\n}\n\n#let unique-code-block(body) = context {\n  [#figure(body)#label(\"code\" + str(raw-count() + 1))]\n}\n\n#add-markers((line: 2, start: 4, end: 4, nnum: 1), (line: 2, start: 8, nnum: 2))\n#unique-code-block(```\ncode\nthis that\n```)\n\n/ #nnum(1): first\n/ #nnum(2): second\n\n#add-markers((line: 1, nnum: 1), (line: 2, nnum: 2), (line: 3, nnum: 3))\n#unique-code-block(```\ncode\nwiedahie\ndorfkie\n```)\n\n/ #nnum(1): first\n/ #nnum(2): second\n/ #nnum(3): third\n```\n\n![image|690x271](upload://sfxhDRD4hDX2cCP1CUjZ6qAlFII.png)\n\n</details>",
      "reply_to_post_number": 21,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 20,
      "score": 24.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11594,
      "post_number": 23,
      "username": "Manfred_Lotz",
      "name": "Manfred Lotz",
      "created_at": "2025-04-25T04:16:45.300Z",
      "updated_at": "2025-04-25T04:16:45.300Z",
      "cooked": "<p>Yes, this is exactly what I want. Thanks a lot.</p>",
      "raw": "Yes, this is exactly what I want. Thanks a lot.",
      "reply_to_post_number": 22,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 20,
      "score": 4.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 638
    }
  ],
  "scraped_at": "2025-06-10T09:48:44.487931"
}