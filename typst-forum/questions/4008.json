{
  "topic_metadata": {
    "id": 4008,
    "title": "Is there a package for common typography rules?",
    "slug": "is-there-a-package-for-common-typography-rules",
    "posts_count": 5,
    "created_at": "2025-05-09T10:58:45.850Z",
    "last_posted_at": "2025-05-14T03:43:37.314Z",
    "views": 133,
    "like_count": 4,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 4,
    "accepted_answer_username": "Andrew",
    "tags": [
      "packages",
      "typography"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 652
  },
  "posts": [
    {
      "id": 12179,
      "post_number": 1,
      "username": "gour",
      "name": "Saša Janiška",
      "created_at": "2025-05-09T10:58:46.017Z",
      "updated_at": "2025-05-10T06:18:54.970Z",
      "cooked": "<p>Hello,</p>\n<p>I’ve asked the other day on Discord how is one supposed to prepare content to typeset typographical stuff like em-dash, en-dash, ellipsis etc. I’ve found one <a href=\"https://www.flother.is/til/typst-em-dash-show-rule/\" rel=\"noopener nofollow ugc\">post</a> and wonder whether this is the recommended way or is there something else.</p>\n<p>The answer was that this is the way, but wonder if there is some pre-prepared packaged to handle such things which are pretty common in LateX world?</p>",
      "raw": "Hello,\n\nI've asked the other day on Discord how is one supposed to prepare content to typeset typographical stuff like em-dash, en-dash, ellipsis etc. I've found one [post](https://www.flother.is/til/typst-em-dash-show-rule/) and wonder whether this is the recommended way or is there something else.\n\nThe answer was that this is the way, but wonder if there is some pre-prepared packaged to handle such things which are pretty common in LateX world?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 45,
      "score": 19.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 335
    },
    {
      "id": 12183,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-09T12:11:55.671Z",
      "updated_at": "2025-05-10T10:33:06.931Z",
      "cooked": "<p>Hello. It depends on how you are going to write the dash in the source code. I didn’t find any package for dashes, and it is not package-worthy if all you want is one small text show rule. You can use predefined symbol names though:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show \" \" + sym.dash.em + \" \": it =&gt; {\n  let space = sym.space.nobreak.narrow\n  space + sym.dash.em + space\n}\n\ntest --- test\n</code></pre>\n<p>Or the shortest way, sacrificing easily seeing which exact characters are used:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show \" — \": \" — \"\n</code></pre>\n<p>If you need more customizability, then you can use <a href=\"https://typst.app/docs/reference/layout/h/\"><code>h()</code></a>:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show \" — \": h(0.1pt) + \"—\" + h(0.1pt)\n</code></pre>\n<p>To remove repetition:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show \" — \": ((h(0.1pt),) * 2).intersperse(\"—\").join()\n#show \" — \": range(2).map(_ =&gt; h(0.1pt)).intersperse(\"—\").join()\n</code></pre>\n<p>Or with a helper function:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let wrap(it, with) = with + it + with\n#show \" — \": wrap(\"—\", h(0.1pt))\n#show \" — \": wrap([---], sym.space.nobreak.narrow)\n</code></pre>",
      "raw": "Hello. It depends on how you are going to write the dash in the source code. I didn't find any package for dashes, and it is not package-worthy if all you want is one small text show rule. You can use predefined symbol names though:\n\n```typ\n#show \" \" + sym.dash.em + \" \": it => {\n  let space = sym.space.nobreak.narrow\n  space + sym.dash.em + space\n}\n\ntest --- test\n```\n\nOr the shortest way, sacrificing easily seeing which exact characters are used:\n\n```typ\n#show \" — \": \" — \"\n```\n\nIf you need more customizability, then you can use [`h()`](https://typst.app/docs/reference/layout/h/):\n\n```typ\n#show \" — \": h(0.1pt) + \"—\" + h(0.1pt)\n```\n\nTo remove repetition:\n\n```typ\n#show \" — \": ((h(0.1pt),) * 2).intersperse(\"—\").join()\n#show \" — \": range(2).map(_ => h(0.1pt)).intersperse(\"—\").join()\n```\n\nOr with a helper function:\n\n```typ\n#let wrap(it, with) = with + it + with\n#show \" — \": wrap(\"—\", h(0.1pt))\n#show \" — \": wrap([---], sym.space.nobreak.narrow)\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 2,
      "reads": 45,
      "score": 74.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12396,
      "post_number": 3,
      "username": "gour",
      "name": "Saša Janiška",
      "created_at": "2025-05-13T17:59:35.249Z",
      "updated_at": "2025-05-13T17:59:35.249Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Andrew\" data-post=\"2\" data-topic=\"4008\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/andrew/48/62_2.png\" class=\"avatar\"> Andrew:</div>\n<blockquote>\n<p>Hello. It depends on how you are going to write the dash in the source code. I didn’t find any package for dashes, and it is not package-worthy if all you want<br>\nis one small text show rule.</p>\n</blockquote>\n</aside>\n<p>Thank you very much for your input!</p>\n<p>I was thinking about the package since it is not a question just about writing a dash, iow. there are several special characters (elipsis, protected space etc.) which are taken for granted when using LaTeX, but I get your point that creating show rules is the way to go in Typst- <img src=\"https://forum.typst.app/images/emoji/apple/sunglasses.png?v=12\" title=\":sunglasses:\" class=\"emoji\" alt=\":sunglasses:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "[quote=\"Andrew, post:2, topic:4008, full:true\"]\nHello. It depends on how you are going to write the dash in the source code. I didn't find any package for dashes, and it is not package-worthy if all you want \nis one small text show rule.\n[/quote]\n\nThank you very much for your input!\n\nI was thinking about the package since it is not a question just about writing a dash, iow. there are several special characters (elipsis, protected space etc.) which are taken for granted when using LaTeX, but I get your point that creating show rules is the way to go in Typst- :sunglasses:",
      "reply_to_post_number": 2,
      "reply_count": 2,
      "quote_count": 1,
      "like_count": 0,
      "reads": 27,
      "score": 20.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 335
    },
    {
      "id": 12404,
      "post_number": 4,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-13T19:31:53.742Z",
      "updated_at": "2025-05-13T19:34:37.598Z",
      "cooked": "<p>No, not everything should use text show rule. See <a href=\"https://github.com/typst/typst/issues/5209\" class=\"inline-onebox\">Clarify the (intended) use of `show \"word\": \"substitution\"` vs. `let word = \"supstitution\"; word` · Issue #5209 · typst/typst · GitHub</a>. Typst does have all special characters in <a href=\"https://typst.app/docs/reference/symbols/sym\">one single place</a>, but how you include in your markup is a different topic. It’s recommended to create a variable and use it as a shorthand. Besides, show rules can’t always be applied because of text complexity/edge cases.</p>",
      "raw": "No, not everything should use text show rule. See https://github.com/typst/typst/issues/5209. Typst does have all special characters in [one single place](https://typst.app/docs/reference/symbols/sym), but how you include in your markup is a different topic. It's recommended to create a variable and use it as a shorthand. Besides, show rules can't always be applied because of text complexity/edge cases.",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 25,
      "score": 10.0,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12423,
      "post_number": 5,
      "username": "PgBiel",
      "name": "",
      "created_at": "2025-05-14T03:43:37.314Z",
      "updated_at": "2025-05-14T03:43:37.314Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"gour\" data-post=\"3\" data-topic=\"4008\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/gour/48/317_2.png\" class=\"avatar\"> gour:</div>\n<blockquote>\n<p>it is not a question just about writing a dash</p>\n</blockquote>\n</aside>\n<p>Just in case this isn’t known, I’ll share that there is a full list of available shorthands here: <a href=\"https://typst.app/docs/reference/symbols/#shorthands\" class=\"inline-onebox\">Symbols – Typst Documentation</a></p>\n<ul>\n<li><code>--</code> for en dash</li>\n<li><code>---</code> for em dash</li>\n<li><code>...</code> for ellipsis</li>\n</ul>\n<aside class=\"quote no-group\" data-username=\"gour\" data-post=\"3\" data-topic=\"4008\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/gour/48/317_2.png\" class=\"avatar\"> gour:</div>\n<blockquote>\n<p>creating show rules is the way to go in Typst- <img src=\"https://forum.typst.app/images/emoji/apple/sunglasses.png?v=12\" title=\":sunglasses:\" class=\"emoji\" alt=\":sunglasses:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n</blockquote>\n</aside>\n<p>Yeah, if you want to customize every occurrence of a certain special character, using a show rule just on that character is the way to go.</p>\n<aside class=\"quote no-group\" data-username=\"Andrew\" data-post=\"4\" data-topic=\"4008\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/andrew/48/62_2.png\" class=\"avatar\"> Andrew:</div>\n<blockquote>\n<p>No, not everything should use text show rule.</p>\n</blockquote>\n</aside>\n<p>I believe they weren’t necessarily referring to text show rules. But yes, be careful to not use a text show rule when you could use a variable or function instead (e.g. to apply some specific styling or display a constant multiple times).</p>\n<p>In this case a text show rule is appropriate as it is about changing the styling of the document. In other words, if a package inserts text with an em dash, you want that em dash to be affected, so a global text show rule makes sense. But you wouldn’t want the word “number” from another package to be affected when creating a constant named “number”, for example, so you should create a  <em>variable</em> named <code>number</code> instead of a show rule on that word.</p>",
      "raw": "[quote=\"gour, post:3, topic:4008\"]\nit is not a question just about writing a dash\n[/quote]\n\nJust in case this isn't known, I'll share that there is a full list of available shorthands here: https://typst.app/docs/reference/symbols/#shorthands\n\n- `--` for en dash\n- `---` for em dash\n- `...` for ellipsis\n\n[quote=\"gour, post:3, topic:4008\"]\ncreating show rules is the way to go in Typst- :sunglasses:\n[/quote]\n\nYeah, if you want to customize every occurrence of a certain special character, using a show rule just on that character is the way to go.\n\n[quote=\"Andrew, post:4, topic:4008\"]\nNo, not everything should use text show rule.\n[/quote]\n\nI believe they weren't necessarily referring to text show rules. But yes, be careful to not use a text show rule when you could use a variable or function instead (e.g. to apply some specific styling or display a constant multiple times).\n\nIn this case a text show rule is appropriate as it is about changing the styling of the document. In other words, if a package inserts text with an em dash, you want that em dash to be affected, so a global text show rule makes sense. But you wouldn't want the word \"number\" from another package to be affected when creating a constant named \"number\", for example, so you should create a  _variable_ named `number` instead of a show rule on that word.",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 2,
      "like_count": 2,
      "reads": 21,
      "score": 34.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    }
  ],
  "scraped_at": "2025-06-10T09:48:07.535604"
}