{
  "topic_metadata": {
    "id": 1273,
    "title": "How can I format the last row of a table?",
    "slug": "how-can-i-format-the-last-row-of-a-table",
    "posts_count": 8,
    "created_at": "2024-10-21T16:56:07.137Z",
    "last_posted_at": "2025-03-01T17:14:51.048Z",
    "views": 463,
    "like_count": 6,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "quachpas",
    "tags": [
      "tables",
      "styling"
    ],
    "category_id": 5,
    "participant_count": 6,
    "word_count": 559
  },
  "posts": [
    {
      "id": 4434,
      "post_number": 1,
      "username": "mgholam",
      "name": "mgholam",
      "created_at": "2024-10-21T16:56:07.233Z",
      "updated_at": "2025-03-09T10:33:31.175Z",
      "cooked": "<p>I can format the first row, I need to get the last row also</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set table(\n\tinset: (x:0.5em,y:.4em),\n\tstroke:_gridlines,\n\tfill: (x, y) =&gt; if y==0 { rgb(_shadecolor) },\n)\n</code></pre>",
      "raw": "I can format the first row, I need to get the last row also\n```typ\n#set table(\n\tinset: (x:0.5em,y:.4em),\n\tstroke:_gridlines,\n\tfill: (x, y) => if y==0 { rgb(_shadecolor) },\n)\n```",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 41,
      "score": 1778.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 608
    },
    {
      "id": 4452,
      "post_number": 2,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2024-10-22T08:02:58.718Z",
      "updated_at": "2024-10-22T08:02:58.718Z",
      "cooked": "<p>Hello <a class=\"mention\" href=\"/u/mgholam\">@mgholam</a>,</p>\n<p>Unfortunately, I don’t seem to have found a programatic way to shade the last row of your table. You should be able to using a variable, and changing n-rows appropriately for each table.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let n-rows = 3\n#set table(\n\tinset: (x:0.5em,y:.4em),\n\tstroke:_gridlines,\n\tfill: (x, y) =&gt; if y==0 or y == n-rows { rgb(_shadecolor) },\n)\n</code></pre>\n<p>don’t hesitate to provide a full minimal example the next time you ask a question, as stated in <a href=\"https://forum.typst.app/t/how-to-post-in-the-questions-category/11\" class=\"inline-onebox\">How to post in the Questions category</a>.</p>",
      "raw": "Hello @mgholam,\n\nUnfortunately, I don't seem to have found a programatic way to shade the last row of your table. You should be able to using a variable, and changing n-rows appropriately for each table.\n\n```typ\n#let n-rows = 3\n#set table(\n\tinset: (x:0.5em,y:.4em),\n\tstroke:_gridlines,\n\tfill: (x, y) => if y==0 or y == n-rows { rgb(_shadecolor) },\n)\n```\n\ndon't hesitate to provide a full minimal example the next time you ask a question, as stated in https://forum.typst.app/t/how-to-post-in-the-questions-category/11.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 41,
      "score": 93.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 4456,
      "post_number": 3,
      "username": "mgholam",
      "name": "mgholam",
      "created_at": "2024-10-22T08:16:09.777Z",
      "updated_at": "2024-10-22T08:16:09.777Z",
      "cooked": "<p>Thanks!<br>\nThat is what I did, set a variable and checked against that.</p>",
      "raw": "Thanks!\nThat is what I did, set a variable and checked against that.",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 38,
      "score": 27.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 608
    },
    {
      "id": 4503,
      "post_number": 4,
      "username": "PgBiel",
      "name": "",
      "created_at": "2024-10-22T23:15:09.859Z",
      "updated_at": "2024-10-22T23:15:09.859Z",
      "cooked": "<p>I had proposed one potential way around this in this issue: <a href=\"https://github.com/typst/typst/issues/3697\" class=\"inline-onebox\">Resolve further fields in `grid` and `table` show rules · Issue #3697 · typst/typst · GitHub</a></p>\n<p>Though I’m not fully sure whether that is the best way forward. Frankly I agree that this is quite an annoying limitation. I hope we can find a good design that solves it.</p>",
      "raw": "I had proposed one potential way around this in this issue: https://github.com/typst/typst/issues/3697\n\nThough I'm not fully sure whether that is the best way forward. Frankly I agree that this is quite an annoying limitation. I hope we can find a good design that solves it.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 37,
      "score": 12.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 4508,
      "post_number": 5,
      "username": "LordBaryhobal",
      "name": "Baryhobal",
      "created_at": "2024-10-23T05:43:31.310Z",
      "updated_at": "2024-10-23T05:43:31.310Z",
      "cooked": "<p>If you put you cells in an array, you can automatically compute the number of rows according to the number of columns, like so:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let n-cols = 3\n#let cells = ([A], [B], [C], [D], [E], [F], [G])\n#let n-rows = calc.ceil(cells.len() / n-cols)\n#table(\n  columns: n-cols,\n  fill: (_, y) =&gt; if y == n-rows - 1 {\n    gray.lighten(50%)\n  } else {\n    none\n  },\n  ..cells\n)\n</code></pre>\n<p>If this is something you need in multiple places, you could even wrap it in a function, for example:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let my-table(cells, ..args) = {\n  let columns = args.named().at(\"columns\", default: 1)\n  let n-cols = if type(columns) == int {\n    columns\n  } else {\n    columns.len()\n  }\n  let n-rows = calc.ceil(cells.len() / n-cols)\n  table(\n    columns: columns,\n    ..args,\n    fill: (_, y) =&gt; if y == n-rows - 1 {\n      gray.lighten(50%)\n    } else {\n      none\n    },\n    ..cells\n  )\n}\n</code></pre>",
      "raw": "If you put you cells in an array, you can automatically compute the number of rows according to the number of columns, like so:\n```typ\n#let n-cols = 3\n#let cells = ([A], [B], [C], [D], [E], [F], [G])\n#let n-rows = calc.ceil(cells.len() / n-cols)\n#table(\n  columns: n-cols,\n  fill: (_, y) => if y == n-rows - 1 {\n    gray.lighten(50%)\n  } else {\n    none\n  },\n  ..cells\n)\n```\nIf this is something you need in multiple places, you could even wrap it in a function, for example:\n```typ\n#let my-table(cells, ..args) = {\n  let columns = args.named().at(\"columns\", default: 1)\n  let n-cols = if type(columns) == int {\n    columns\n  } else {\n    columns.len()\n  }\n  let n-rows = calc.ceil(cells.len() / n-cols)\n  table(\n    columns: columns,\n    ..args,\n    fill: (_, y) => if y == n-rows - 1 {\n      gray.lighten(50%)\n    } else {\n      none\n    },\n    ..cells\n  )\n}\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 38,
      "score": 47.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 585
    },
    {
      "id": 4512,
      "post_number": 6,
      "username": "gezepi",
      "name": "",
      "created_at": "2024-10-23T07:03:16.267Z",
      "updated_at": "2024-10-23T07:03:16.267Z",
      "cooked": "<p>Taking <a class=\"mention\" href=\"/u/lordbaryhobal\">@LordBaryhobal</a>’s solution one step further so that it handles cells that span columns and rows:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let my-table(cells, ..args) = {\n  let columns = args.named().at(\"columns\", default: 1)\n  let n-cols = if type(columns) == int {\n    columns\n  } else {\n    columns.len()\n  }\n  let n-cells = cells.fold(\n    0,\n    (curVal, cell) =&gt; curVal + cell.at(\"colspan\", default: 1) * cell.at(\"rowspan\", default: 1)\n  )\n  let n-rows = calc.ceil(n-cells / n-cols)\n  table(\n    columns: columns,\n    ..args,\n    fill: (_, y) =&gt; if y == n-rows - 1 {\n      gray.lighten(50%)\n    } else {\n      none\n    },\n    ..cells\n  )\n}\n</code></pre>\n<p>Then it can be used as before:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#my-table(\n  (\n    table.cell(colspan: 2, [A]), table.cell(rowspan: 2, [B]),\n    [C], [D],\n    table.cell(colspan: 3, [E]),\n    [F]\n  ),\n  columns: 3\n)\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/7/743b62a40b69bc3af1408c0b0b7dfae4497fafb9.png\" alt=\"image\" data-base62-sha1=\"gAeCnwKUkR2130SYfdnTPYQCuqB\" width=\"147\" height=\"153\"></p>\n<p>The change was to not trust the length of the <code>cells</code> array, but to use <code>fold</code> to process each one, checking for <code>colspan</code> and <code>rowspan</code>, getting the total number of spaces taken up by the given cells.</p>",
      "raw": "Taking @LordBaryhobal's solution one step further so that it handles cells that span columns and rows:\n```typ\n#let my-table(cells, ..args) = {\n  let columns = args.named().at(\"columns\", default: 1)\n  let n-cols = if type(columns) == int {\n    columns\n  } else {\n    columns.len()\n  }\n  let n-cells = cells.fold(\n    0,\n    (curVal, cell) => curVal + cell.at(\"colspan\", default: 1) * cell.at(\"rowspan\", default: 1)\n  )\n  let n-rows = calc.ceil(n-cells / n-cols)\n  table(\n    columns: columns,\n    ..args,\n    fill: (_, y) => if y == n-rows - 1 {\n      gray.lighten(50%)\n    } else {\n      none\n    },\n    ..cells\n  )\n}\n```\nThen it can be used as before:\n```typ\n#my-table(\n  (\n    table.cell(colspan: 2, [A]), table.cell(rowspan: 2, [B]),\n    [C], [D],\n    table.cell(colspan: 3, [E]),\n    [F]\n  ),\n  columns: 3\n)\n```\n![image|147x153](upload://gAeCnwKUkR2130SYfdnTPYQCuqB.png)\n\nThe change was to not trust the length of the `cells` array, but to use `fold` to process each one, checking for `colspan` and `rowspan`, getting the total number of spaces taken up by the given cells.",
      "reply_to_post_number": 5,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 4,
      "reads": 33,
      "score": 126.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 326
    },
    {
      "id": 4687,
      "post_number": 7,
      "username": "PgBiel",
      "name": "",
      "created_at": "2024-10-25T20:51:22.325Z",
      "updated_at": "2024-10-25T20:51:22.325Z",
      "cooked": "<p>Now you’re thinking in tables <img src=\"https://forum.typst.app/images/emoji/apple/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"><br>\nGood job!</p>",
      "raw": "Now you're thinking in tables :wink:\nGood job!",
      "reply_to_post_number": 6,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 31,
      "score": 21.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 9272,
      "post_number": 8,
      "username": "lelimacon",
      "name": "",
      "created_at": "2025-03-01T17:14:51.048Z",
      "updated_at": "2025-03-01T17:15:17.587Z",
      "cooked": "<p>You can customize some cell properties based on the table size like this :</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#show table: t =&gt; {\n  let width = t.columns.len()\n  let height = t.children.len() / width\n\n  show table.cell.where(y: height - 1): strong\n  show table.cell.where(x: width - 1): c =&gt; {\n    set align(right)\n    c\n  }\n\n  t\n}\n</code></pre>\n<p>Unfortunately I couldn’t make it work with the <code>fill</code> property.</p>",
      "raw": "You can customize some cell properties based on the table size like this :\n\n```typst\n#show table: t => {\n  let width = t.columns.len()\n  let height = t.children.len() / width\n\n  show table.cell.where(y: height - 1): strong\n  show table.cell.where(x: width - 1): c => {\n    set align(right)\n    c\n  }\n\n  t\n}\n```\n\nUnfortunately I couldn't make it work with the `fill` property.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 19,
      "score": 13.8,
      "accepted_answer": false,
      "trust_level": 0,
      "user_id": 1290
    }
  ],
  "scraped_at": "2025-06-10T09:56:14.833412"
}