{
  "topic_metadata": {
    "id": 2517,
    "title": "How can I use codly only for specific code blocks?",
    "slug": "how-can-i-use-codly-only-for-specific-code-blocks",
    "posts_count": 5,
    "created_at": "2025-01-23T13:20:40.906Z",
    "last_posted_at": "2025-01-25T19:59:18.996Z",
    "views": 98,
    "like_count": 3,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 5,
    "accepted_answer_username": "laurmaedje",
    "tags": [
      "codly"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 252
  },
  "posts": [
    {
      "id": 7803,
      "post_number": 1,
      "username": "TheJanzap",
      "name": "",
      "created_at": "2025-01-23T13:20:41.062Z",
      "updated_at": "2025-01-23T13:21:22.813Z",
      "cooked": "<p>I’d like to use codly only for longer snippets of code and leave shorter blocks in the normal Typst style. What’s the recommended way to do that?</p>",
      "raw": "I'd like to use codly only for longer snippets of code and leave shorter blocks in the normal Typst style. What's the recommended way to do that?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 28,
      "score": 115.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 132
    },
    {
      "id": 7804,
      "post_number": 2,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-01-23T13:27:00.695Z",
      "updated_at": "2025-01-23T13:27:00.695Z",
      "cooked": "<p>You can enable and disable codly as described here: <a href=\"https://github.com/Dherse/codly/?tab=readme-ov-file#disabling--enabling\" class=\"inline-onebox\">GitHub - Dherse/codly: A Typst package for even better code blocks</a></p>\n<p>if you have a specific number of lines, then I would create a show rule for that. It would look roughly like this:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#show raw: it =&gt; {\n  if it.text.split(\"\\n\").len() &lt;= 3 {\n    no-codly(it)\n  } else {\n    it\n  }\n}\n</code></pre>",
      "raw": "You can enable and disable codly as described here: https://github.com/Dherse/codly/?tab=readme-ov-file#disabling--enabling\n\nif you have a specific number of lines, then I would create a show rule for that. It would look roughly like this:\n```typ\n#show raw: it => {\n  if it.text.split(\"\\n\").len() <= 3 {\n    no-codly(it)\n  } else {\n    it\n  }\n}\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 28,
      "score": 30.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 7829,
      "post_number": 3,
      "username": "TheJanzap",
      "name": "",
      "created_at": "2025-01-25T06:24:04.001Z",
      "updated_at": "2025-01-25T06:24:04.001Z",
      "cooked": "<p>I’ve seen this, but I find it kind of cumbersome to enable and disable after the code blocks.</p>\n<p>I have opened a Issue on their repo to enable codly only in specific blocks.</p><aside class=\"onebox githubissue\" data-onebox-src=\"https://github.com/Dherse/codly/issues/61\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/Dherse/codly/issues/61\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/Dherse/codly</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n  <div class=\"github-icon-container\" title=\"Issue\" data-github-private-repo=\"false\">\n\t  <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 14 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"></path></svg>\n  </div>\n\n  <div class=\"github-info-container\">\n    <h4>\n      <a href=\"https://github.com/Dherse/codly/issues/61\" target=\"_blank\" rel=\"noopener nofollow ugc\">Option to use codly only for specified code blocks</a>\n    </h4>\n\n    <div class=\"github-info\">\n      <div class=\"date\">\n        opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2025-01-23\" data-time=\"17:29:39\" data-timezone=\"UTC\">05:29PM - 23 Jan 25 UTC</span>\n      </div>\n\n\n      <div class=\"user\">\n        <a href=\"https://github.com/TheJanzap\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n          <img alt=\"TheJanzap\" src=\"https://forum.typst.app/uploads/default/original/2X/6/669846afd849ce994c47ffde85116cfe4d8123c1.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"BF8B2F\">\n          TheJanzap\n        </a>\n      </div>\n    </div>\n\n    <div class=\"labels\">\n    </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">I would like to use codly only for specific code blocks and not all of them. Cur<span class=\"show-more-container\"><a href=\"\" rel=\"noopener\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">rently, I have to disable codly globally and manuallly turn it on and off again around the raw block I want to use codly on, which is quite cumbersome.\n\nWhat I'm asking for is basically the inverse of the `#no-codly` block. One possible implementation could even be to use the `#no-codly` block as a codly-raw block if codly is currently disabled</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n",
      "raw": "I've seen this, but I find it kind of cumbersome to enable and disable after the code blocks. \n\nI have opened a Issue on their repo to enable codly only in specific blocks. \nhttps://github.com/Dherse/codly/issues/61",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 20,
      "score": 9.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 132
    },
    {
      "id": 7832,
      "post_number": 4,
      "username": "sijo",
      "name": "",
      "created_at": "2025-01-25T09:54:37.191Z",
      "updated_at": "2025-01-25T09:54:37.191Z",
      "cooked": "<p>You don’t have to do that manually with the show rule proposed by <a class=\"mention\" href=\"/u/sillyfreak\">@SillyFreak</a></p>\n<p>But if you want the opposite of <code>no-codly</code>, is it not just the following?</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/codly:1.2.0\": *\n\n#let with-codly(it) = {\n  show: codly-init\n  it\n}\n\n```rust\npub fn main() {\n    println!(\"Hello, world!\");\n}\n```\n\n#with-codly[\n  ```rust\n  pub fn main() {\n      println!(\"Hello, world!\");\n  }\n  ```\n]\n\n```rust\npub fn main() {\n    println!(\"Hello, world!\");\n}\n```\n</code></pre>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/3/300ab21a42e065f2cd5635d5da11d1064edfc34a.png\" data-download-href=\"https://forum.typst.app/uploads/default/300ab21a42e065f2cd5635d5da11d1064edfc34a\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/3/300ab21a42e065f2cd5635d5da11d1064edfc34a_2_690x228.png\" alt=\"image\" data-base62-sha1=\"6QZPI3qr6lwsyrhcYdV1ctw6Eky\" width=\"690\" height=\"228\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/3/300ab21a42e065f2cd5635d5da11d1064edfc34a_2_690x228.png, https://forum.typst.app/uploads/default/original/2X/3/300ab21a42e065f2cd5635d5da11d1064edfc34a.png 1.5x, https://forum.typst.app/uploads/default/original/2X/3/300ab21a42e065f2cd5635d5da11d1064edfc34a.png 2x\" data-dominant-color=\"F9FAF9\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">948×314 22.3 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "You don't have to do that manually with the show rule proposed by @SillyFreak \n\nBut if you want the opposite of `no-codly`, is it not just the following?\n\n````typ\n#import \"@preview/codly:1.2.0\": *\n\n#let with-codly(it) = {\n  show: codly-init\n  it\n}\n\n```rust\npub fn main() {\n    println!(\"Hello, world!\");\n}\n```\n\n#with-codly[\n  ```rust\n  pub fn main() {\n      println!(\"Hello, world!\");\n  }\n  ```\n]\n\n```rust\npub fn main() {\n    println!(\"Hello, world!\");\n}\n```\n````\n\n![image|690x228](upload://6QZPI3qr6lwsyrhcYdV1ctw6Eky.png)",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 19,
      "score": 18.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 7847,
      "post_number": 5,
      "username": "laurmaedje",
      "name": "Laurenz Mädje",
      "created_at": "2025-01-25T19:59:18.996Z",
      "updated_at": "2025-01-25T19:59:18.996Z",
      "cooked": "<p>Going even further, it looks to me like <code>with-codly</code> is pretty much the same as just <code>codly-init</code> here:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/codly:1.2.0\": *\n\n```rust\npub fn main() {\n    println!(\"Hello, world!\");\n}\n```\n\n#codly-init[\n  ```rust\n  pub fn main() {\n      println!(\"Hello, world!\");\n  }\n  ```\n]\n\n```rust\npub fn main() {\n    println!(\"Hello, world!\");\n}\n```\n</code></pre>",
      "raw": "Going even further, it looks to me like `with-codly` is pretty much the same as just `codly-init` here:\n\n````typ\n#import \"@preview/codly:1.2.0\": *\n\n```rust\npub fn main() {\n    println!(\"Hello, world!\");\n}\n```\n\n#codly-init[\n  ```rust\n  pub fn main() {\n      println!(\"Hello, world!\");\n  }\n  ```\n]\n\n```rust\npub fn main() {\n    println!(\"Hello, world!\");\n}\n```\n````",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 16,
      "score": 33.2,
      "accepted_answer": true,
      "trust_level": 4,
      "user_id": 2
    }
  ],
  "scraped_at": "2025-06-10T09:52:33.809652"
}