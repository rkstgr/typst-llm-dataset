{
  "topic_metadata": {
    "id": 2791,
    "title": "Is it possible to use a custom character for a specific list item?",
    "slug": "is-it-possible-to-use-a-custom-character-for-a-specific-list-item",
    "posts_count": 4,
    "created_at": "2025-02-12T14:36:08.277Z",
    "last_posted_at": "2025-02-12T14:58:50.348Z",
    "views": 81,
    "like_count": 7,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "quachpas",
    "tags": [
      "layout",
      "lists"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 226
  },
  "posts": [
    {
      "id": 8515,
      "post_number": 1,
      "username": "jsx97",
      "name": "jsx97",
      "created_at": "2025-02-12T14:36:08.526Z",
      "updated_at": "2025-02-12T14:44:47.835Z",
      "cooked": "<p>Hello everyone! Is it possible to specify a custom character for a specific list item?</p>\n<p>My document uses a Cyrillic alphabet, and because of this, I try to make my lists to look like</p>\n<pre data-code-wrap=\"none\"><code class=\"lang-none\">а) foo\nб) bar\nв) baz\n</code></pre>\n<p>instead of</p>\n<pre data-code-wrap=\"none\"><code class=\"lang-none\">a) foo\nb) bar\nc) baz\n</code></pre>\n<p>Currently, Cyrillic is not supported for numbering patterns out of the box (see <a href=\"https://github.com/typst/typst/issues/1595\" rel=\"noopener nofollow ugc\">#1595</a> and <a href=\"https://github.com/typst/typst/pull/5597\" rel=\"noopener nofollow ugc\">#5597</a>), and this is why I tried to adopt one of the examples from <a href=\"https://typst.app/docs/reference/model/enum/\">https://typst.app/docs/reference/model/enum/</a> instead. Here is my version:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#enum(\n  enum.item(\"а)\")[foo],\n  enum.item(\"б)\")[bar],\n  enum.item(\"в)\")[baz]\n)\n</code></pre>\n<p>but this doesn’t seem to work.</p>\n<p>What I’m doing wrong?</p>",
      "raw": "Hello everyone! Is it possible to specify a custom character for a specific list item?\n\nMy document uses a Cyrillic alphabet, and because of this, I try to make my lists to look like\n\n```none\nа) foo\nб) bar\nв) baz\n```\n\ninstead of\n\n```none\na) foo\nb) bar\nc) baz\n```\n\nCurrently, Cyrillic is not supported for numbering patterns out of the box (see [#1595](https://github.com/typst/typst/issues/1595) and [#5597](https://github.com/typst/typst/pull/5597)), and this is why I tried to adopt one of the examples from <https://typst.app/docs/reference/model/enum/> instead. Here is my version:\n\n```typst\n#enum(\n  enum.item(\"а)\")[foo],\n  enum.item(\"б)\")[bar],\n  enum.item(\"в)\")[baz]\n)\n```\n\nbut this doesn't seem to work.\n\nWhat I'm doing wrong?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 21,
      "score": 279.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 477
    },
    {
      "id": 8516,
      "post_number": 2,
      "username": "quachpas",
      "name": "Pascal Quach",
      "created_at": "2025-02-12T14:41:22.693Z",
      "updated_at": "2025-02-12T14:41:22.693Z",
      "cooked": "<p><code>enum.item</code> accepts <code>none</code> or <code>int</code>. You’re better off writing a numbering function instead.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let cyrillic-numbering(n) = {\n  (\"а)\", \"б)\", \"в)\").at(n - 1)\n}\n#enum(numbering: cyrillic-numbering)[foo][bar][baz]\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/c/c17d02caadf3259dd186b61f29aaf8e888b1e72b.png\" alt=\"image\" data-base62-sha1=\"rBFZ9ORxEcDYCG03VTl7tywMaoP\" width=\"89\" height=\"103\"></p>",
      "raw": "`enum.item` accepts `none` or `int`. You're better off writing a numbering function instead.\n```typ\n#let cyrillic-numbering(n) = {\n  (\"а)\", \"б)\", \"в)\").at(n - 1)\n}\n#enum(numbering: cyrillic-numbering)[foo][bar][baz]\n```\n![image|89x103](upload://rBFZ9ORxEcDYCG03VTl7tywMaoP.png)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 21,
      "score": 69.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 258
    },
    {
      "id": 8519,
      "post_number": 3,
      "username": "xkevio",
      "name": "Kevio",
      "created_at": "2025-02-12T14:51:48.574Z",
      "updated_at": "2025-02-12T14:51:48.574Z",
      "cooked": "<p>A more general solution would be a custom numbering function like this, which starts at the first lowercase cyrillic letter:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set enum(numbering: n =&gt; {\n  let cyr = (0x430 + n) - 1\n  str.from-unicode(cyr) + \")\"\n})\n</code></pre>\n<p>A more robust alternative is to use something like <a href=\"https://typst.app/universe/package/numberingx\"><code>numberingx</code></a>.</p>",
      "raw": "A more general solution would be a custom numbering function like this, which starts at the first lowercase cyrillic letter:\n```typ\n#set enum(numbering: n => {\n  let cyr = (0x430 + n) - 1\n  str.from-unicode(cyr) + \")\"\n})\n```\n\nA more robust alternative is to use something like [`numberingx`](https://typst.app/universe/package/numberingx).",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 4,
      "reads": 21,
      "score": 109.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 21
    },
    {
      "id": 8520,
      "post_number": 4,
      "username": "jsx97",
      "name": "jsx97",
      "created_at": "2025-02-12T14:58:50.348Z",
      "updated_at": "2025-02-12T14:59:05.617Z",
      "cooked": "<p><a class=\"mention\" href=\"/u/xkevio\">@xkevio</a> I love this. Thanks a lot!</p>",
      "raw": "@xkevio I love this. Thanks a lot!",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 20,
      "score": 9.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 477
    }
  ],
  "scraped_at": "2025-06-10T09:51:43.158931"
}