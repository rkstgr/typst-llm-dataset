{
  "topic_metadata": {
    "id": 3605,
    "title": "How can I use different bullet list markers for items in a single a list?",
    "slug": "how-can-i-use-different-bullet-list-markers-for-items-in-a-single-a-list",
    "posts_count": 8,
    "created_at": "2025-04-10T17:27:26.782Z",
    "last_posted_at": "2025-04-16T14:22:56.989Z",
    "views": 113,
    "like_count": 1,
    "reply_count": 4,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 4,
    "accepted_answer_username": "bluss",
    "tags": [
      "scripting",
      "lists"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 575
  },
  "posts": [
    {
      "id": 10897,
      "post_number": 1,
      "username": "chair",
      "name": "",
      "created_at": "2025-04-10T17:27:26.937Z",
      "updated_at": "2025-04-18T16:26:24.861Z",
      "cooked": "<p>When I write proofs to some theorems, I use</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#set list(marker: [$subset.eq$:])\n- Proof that $A subset.eq B$\n#set list(marker: [$supset.eq$:])\n- Proof that $A supset.eq B$\n</code></pre>\n<p>I wonder if I can do the same using one list or function .</p>",
      "raw": "When I write proofs to some theorems, I use\n```typ \n#set list(marker: [$subset.eq$:])\n- Proof that $A subset.eq B$\n#set list(marker: [$supset.eq$:])\n- Proof that $A supset.eq B$\n```\nI wonder if I can do the same using one list or function .",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 25,
      "score": 235.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1442
    },
    {
      "id": 10903,
      "post_number": 2,
      "username": "bluss",
      "name": "Ulrik",
      "created_at": "2025-04-10T17:57:09.635Z",
      "updated_at": "2025-04-10T17:57:09.635Z",
      "cooked": "<p>You can try this syntax and see if you like it:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#list(marker: $subset.eq: $)[Proof of 1]\n#list(marker: $supset.eq: $)[Proof of 2]\n</code></pre>\n<p>There is the term list/definition list syntax, maybe that fits, which doesn’t show a colon by default but can have one like this. It could also have its style changed.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">/ $subset.eq$\\:: Proof of 1\n/ $supset.eq$\\:: Proof of 2\n</code></pre>",
      "raw": "You can try this syntax and see if you like it:\n\n```typ\n#list(marker: $subset.eq: $)[Proof of 1]\n#list(marker: $supset.eq: $)[Proof of 2]\n```\n\nThere is the term list/definition list syntax, maybe that fits, which doesn't show a colon by default but can have one like this. It could also have its style changed.\n\n```typ\n/ $subset.eq$\\:: Proof of 1\n/ $supset.eq$\\:: Proof of 2\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 9.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 1272
    },
    {
      "id": 10905,
      "post_number": 3,
      "username": "chair",
      "name": "",
      "created_at": "2025-04-10T18:04:10.006Z",
      "updated_at": "2025-04-10T18:04:28.984Z",
      "cooked": "<p>Thank you for your reply. These are good ways, but I meant something like this</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let CoolFunction={ there is something }\n\n#CoolFunction\n- Proof of 1\n- Proof of 2\n</code></pre>",
      "raw": "Thank you for your reply. These are good ways, but I meant something like this\n```typ \n#let CoolFunction={ there is something }\n\n#CoolFunction\n- Proof of 1\n- Proof of 2\n```",
      "reply_to_post_number": 2,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 25,
      "score": 5.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1442
    },
    {
      "id": 10906,
      "post_number": 4,
      "username": "bluss",
      "name": "Ulrik",
      "created_at": "2025-04-10T18:09:49.034Z",
      "updated_at": "2025-04-10T18:19:28.110Z",
      "cooked": "<p>A function cannot use “set” and have it take effect outside itself, but we can get close to the required contract like this.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let CoolFunction(it) = {\n  // This function will fail with list items other than 1 and 2..\n  let symbols = (\"1\": $subset.eq$, \"2\": $supset.eq$)\n  set enum(numbering: x =&gt; symbols.at(str(x)) + \":\")\n  it\n}\n\n#show: CoolFunction\n+ Proof of 1\n+ Proof of 2\n</code></pre>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">// alternative calling mode which only affects one numbered list\n#CoolFunction[\n+ Proof of 1\n+ Proof of 2\n]\n</code></pre>\n<p>Note that the function must get access to the list itself to be able to change it. With a show rule, or passed as an explicit parameter.</p>\n<p>If you want to do this with <code>list</code> instead of <code>enum</code> I think it’s possible but more complicated, you’ll have to reimplement a little bit of list layout and item placement to change the marker per item, which just seems unnecessary.</p>",
      "raw": "A function cannot use \"set\" and have it take effect outside itself, but we can get close to the required contract like this.\n\n```typ\n#let CoolFunction(it) = {\n  // This function will fail with list items other than 1 and 2..\n  let symbols = (\"1\": $subset.eq$, \"2\": $supset.eq$)\n  set enum(numbering: x => symbols.at(str(x)) + \":\")\n  it\n}\n\n#show: CoolFunction\n+ Proof of 1\n+ Proof of 2\n```\n\n```typ\n// alternative calling mode which only affects one numbered list\n#CoolFunction[\n+ Proof of 1\n+ Proof of 2\n]\n```\n\nNote that the function must get access to the list itself to be able to change it. With a show rule, or passed as an explicit parameter.\n\nIf you want to do this with `list` instead of `enum` I think it's possible but more complicated, you'll have to reimplement a little bit of list layout and item placement to change the marker per item, which just seems unnecessary.",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 1,
      "reads": 25,
      "score": 55.0,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 1272
    },
    {
      "id": 10911,
      "post_number": 5,
      "username": "chair",
      "name": "",
      "created_at": "2025-04-10T18:23:15.056Z",
      "updated_at": "2025-04-10T18:23:15.056Z",
      "cooked": "<p>Thanks a lot. I actually forgot about the power of numbered lists</p>",
      "raw": "Thanks a lot. I actually forgot about the power of numbered lists",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 25,
      "score": 5.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1442
    },
    {
      "id": 10912,
      "post_number": 6,
      "username": "bluss",
      "name": "Ulrik",
      "created_at": "2025-04-10T18:23:22.332Z",
      "updated_at": "2025-04-10T18:23:22.332Z",
      "cooked": "<p>See also <a href=\"https://forum.typst.app/t/how-can-i-set-the-marker-per-item-in-a-bullet-point-list/2271\" class=\"inline-onebox\">How can I set the marker per item in a bullet point list?</a>  which seems cool, and they do reimplement placing markers for the default list. But it doesn’t hit your use case even if it can solve it, I think.</p>",
      "raw": "See also https://forum.typst.app/t/how-can-i-set-the-marker-per-item-in-a-bullet-point-list/2271  which seems cool, and they do reimplement placing markers for the default list. But it doesn't hit your use case even if it can solve it, I think.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 25,
      "score": 5.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 1272
    },
    {
      "id": 11160,
      "post_number": 7,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-16T13:58:08.126Z",
      "updated_at": "2025-04-16T14:07:02.963Z",
      "cooked": "<p>Assuming lists are unique, using it as a global show rule will result in undesired behavior.</p>\n<p>Also, you don’t have to create a dictionary if you use index, just use array instead:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let custom-list-markers(body) = {\n  // This function will fail with list items other than 1 and 2.\n  let symbols = ($subset.eq$, $supset.eq$)\n  set enum(numbering: n =&gt; symbols.at(n - 1) + \":\")\n  body\n}\n\n#custom-list-markers[\n  + Proof of 1\n  + Proof of 2\n]\n</code></pre>\n<p>There is however a quirk that Typst support negative index access for arrays, but I don’t think anyone has negative numbered list in their documents.</p>\n<p>To make it customizable and not error on long lists:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let custom-list-markers(body, markers: ($subset.eq:$, $supset.eq:$)) = {\n  set enum(numbering: n =&gt; markers.at(calc.rem-euclid(n - 1, markers.len())))\n  body\n}\n\n#custom-list-markers[\n  + Proof of 1\n  + Proof of 2\n  + Proof of 3\n  + Proof of 4\n]\n\n#custom-list-markers(markers: ([•], [‣], [–]))[\n  + Proof of 1\n  + Proof of 2\n  + Proof of 3\n  + Proof of 4\n]\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/9/9faa5e2d265985ea48c372adf262737b5106f6b6.png\" alt=\"image\" data-base62-sha1=\"mMsVCcB8qztrM9LoyxcwB81NpLE\" width=\"142\" height=\"254\"></p>",
      "raw": "Assuming lists are unique, using it as a global show rule will result in undesired behavior.\n\nAlso, you don't have to create a dictionary if you use index, just use array instead:\n\n```typ\n#let custom-list-markers(body) = {\n  // This function will fail with list items other than 1 and 2.\n  let symbols = ($subset.eq$, $supset.eq$)\n  set enum(numbering: n => symbols.at(n - 1) + \":\")\n  body\n}\n\n#custom-list-markers[\n  + Proof of 1\n  + Proof of 2\n]\n```\n\nThere is however a quirk that Typst support negative index access for arrays, but I don't think anyone has negative numbered list in their documents.\n\nTo make it customizable and not error on long lists:\n\n```typ\n#let custom-list-markers(body, markers: ($subset.eq:$, $supset.eq:$)) = {\n  set enum(numbering: n => markers.at(calc.rem-euclid(n - 1, markers.len())))\n  body\n}\n\n#custom-list-markers[\n  + Proof of 1\n  + Proof of 2\n  + Proof of 3\n  + Proof of 4\n]\n\n#custom-list-markers(markers: ([•], [‣], [–]))[\n  + Proof of 1\n  + Proof of 2\n  + Proof of 3\n  + Proof of 4\n]\n```\n\n![image|142x254](upload://mMsVCcB8qztrM9LoyxcwB81NpLE.png)",
      "reply_to_post_number": 4,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 17,
      "score": 23.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11162,
      "post_number": 8,
      "username": "bluss",
      "name": "Ulrik",
      "created_at": "2025-04-16T14:22:56.989Z",
      "updated_at": "2025-04-16T14:22:56.989Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Andrew\" data-post=\"7\" data-topic=\"3605\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/andrew/48/62_2.png\" class=\"avatar\"> Andrew:</div>\n<blockquote>\n<p>Assuming lists are unique, using it as a global show rule will result in undesired behavior.</p>\n</blockquote>\n</aside>\n<p>I contributed a solution or a part of a solution, and then the each person will know how to best apply it in their context.</p>",
      "raw": "[quote=\"Andrew, post:7, topic:3605\"]\nAssuming lists are unique, using it as a global show rule will result in undesired behavior.\n[/quote]\n\nI contributed a solution or a part of a solution, and then the each person will know how to best apply it in their context.",
      "reply_to_post_number": 7,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 0,
      "reads": 15,
      "score": 3.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 1272
    }
  ],
  "scraped_at": "2025-06-10T09:49:23.866712"
}