{
  "topic_metadata": {
    "id": 4071,
    "title": "Which semver rules are enforced for versions of published packages?",
    "slug": "which-semver-rules-are-enforced-for-versions-of-published-packages",
    "posts_count": 8,
    "created_at": "2025-05-13T18:01:14.941Z",
    "last_posted_at": "2025-05-17T17:38:59.947Z",
    "views": 67,
    "like_count": 3,
    "reply_count": 4,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 8,
    "accepted_answer_username": "Lumi",
    "tags": [
      "packages",
      "package-authoring"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 1440
  },
  "posts": [
    {
      "id": 12398,
      "post_number": 1,
      "username": "Lumi",
      "name": "",
      "created_at": "2025-05-13T18:01:15.096Z",
      "updated_at": "2025-05-14T03:45:43.605Z",
      "cooked": "<p>When publishing a typst package, the guidelines say package-versioning should follow SemVer, which I have two questions about:</p>\n<ol>\n<li>typst still being in version 0.x.y, and frequently introducing breaking changes (which is not bad!), is it permitted to publish a package with major version larger than 0?</li>\n<li>As brought up in <a href=\"https://github.com/cetz-package/cetz/issues/867\" rel=\"noopener nofollow ugc\">a discussion for CeTZ</a>, if a package has major version 0 and publishes breaking changes, only incrementing the patch version is SemVer-compliant. However, many software-systems, e.g. <a href=\"https://doc.rust-lang.org/cargo/reference/semver.html#change-categories\" rel=\"noopener nofollow ugc\">cargo</a>, extend the SemVer-spec by saying that, while in version 0.y.z, increments in the y-version can be treated as major releases (breaking changes), and increments in the z-version can be treated as minor releases. In version 0.0.z, incrementing z is always a major release. Would it make sense to adopt a similar rule for typst packages?</li>\n</ol>",
      "raw": "When publishing a typst package, the guidelines say package-versioning should follow SemVer, which I have two questions about:\n\n1. typst still being in version 0.x.y, and frequently introducing breaking changes (which is not bad!), is it permitted to publish a package with major version larger than 0?\n1. As brought up in [a discussion for CeTZ](https://github.com/cetz-package/cetz/issues/867), if a package has major version 0 and publishes breaking changes, only incrementing the patch version is SemVer-compliant. However, many software-systems, e.g. [cargo](https://doc.rust-lang.org/cargo/reference/semver.html#change-categories), extend the SemVer-spec by saying that, while in version 0.y.z, increments in the y-version can be treated as major releases (breaking changes), and increments in the z-version can be treated as minor releases. In version 0.0.z, incrementing z is always a major release. Would it make sense to adopt a similar rule for typst packages?",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 22,
      "score": 14.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1500
    },
    {
      "id": 12405,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-13T19:49:06.276Z",
      "updated_at": "2025-05-13T19:49:06.276Z",
      "cooked": "<ol>\n<li>A lot of packages have new major version incremented (including <a href=\"https://codeberg.org/Andrew15-5/text-dirr\" class=\"inline-onebox\">Andrew15-5/text-dirr: Get resolved value for `text.dir`. - Codeberg.org</a>). You are not tied to Typst’s version.</li>\n<li>I don’t think any additional rules should be applied or added, but you can open an issue about this.</li>\n</ol>\n<p>Just be aware of breaking changes and properly document them. I guess you already know how SemVer works.</p>",
      "raw": "1. A lot of packages have new major version incremented (including https://codeberg.org/Andrew15-5/text-dirr). You are not tied to Typst's version.\n2. I don't think any additional rules should be applied or added, but you can open an issue about this.\n\nJust be aware of breaking changes and properly document them. I guess you already know how SemVer works.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 22,
      "score": 4.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12407,
      "post_number": 3,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-05-13T19:50:37.912Z",
      "updated_at": "2025-05-14T08:35:58.361Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Lumi\" data-post=\"1\" data-topic=\"4071\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/l/007AFF/48.png\" class=\"avatar\"> Lumi:</div>\n<blockquote>\n<p>is it permitted to publish a package with major version larger than 0?</p>\n</blockquote>\n</aside>\n<p>It is, and there are several such packages. Looking through announcements on this forum: <a href=\"https://forum.typst.app/t/frame-it-v1-0-0-framing-for-theorems-definitions-customizable-beautiful-seamless/2213\" class=\"inline-onebox\">Frame-it v1.0.0: Framing for Theorems, Definitions, … – Customizable, Beautiful, Seamless</a> and <a href=\"https://forum.typst.app/t/codly-v1-1-0-beautiful-and-easy-code-blocks/1935\" class=\"inline-onebox\">Codly v1.1.0: beautiful and easy code blocks</a>, for example.</p>\n<p>Regarding the second question – rant incoming: I treat my own packages (which are all 0.x so far) like cargo and try to avoid breaking changes in patch version changes. It’s important to remember that Semver is only a convention; if we as a community de facto conform to that interpretation, that becomes what Typst package versions mean. Likewise, if we use three-component versions but don’t adhere to semver, there’s no tool inherently stopping us from doing so (but let’s hope we don’t go there).</p>\n<p>And since it’s tangentially relevant: package versions (currently) can’t specify pre-releases, etc., so Typst does not implement full semver anyway.</p>\n<p>Typst’s stance on compatibility is (currently) more strict anyway: you have to always specify full package versions. What would be a “non-breaking change” to a programmer may be a breaking change to an author; let’s say changing some font size. Suddenly your pages look horrible because a paragraph takes an extra line. So you could argue that Typst ignores Semver’s definition of compatibility anyway.</p>\n<p>&lt;/rant&gt;</p>\n<p>To come back to your question more directly:</p>\n<aside class=\"quote no-group\" data-username=\"Lumi\" data-post=\"1\" data-topic=\"4071\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/l/007AFF/48.png\" class=\"avatar\"> Lumi:</div>\n<blockquote>\n<p>Would it make sense to adopt a similar rule for typst packages?</p>\n</blockquote>\n</aside>\n<p>I personally adopted that rule, and while I don’t know about others’ intentions, the Typst ecosystem broadly feels like this. I’m not sure if we really need to formalize this, since I’m not sure what practical difference it would make. Two reasons against it I can see would be 1) package authors are open source authors, and I wouldn’t want to force this rule on someone who feels it’s a nuisance to them, and 2) if a package is unpredictable with breaking changes, that may impact its adoption anyway, so I think that creates enough regulation on its own.</p>",
      "raw": "[quote=\"Lumi, post:1, topic:4071\"]\nis it permitted to publish a package with major version larger than 0?\n[/quote]\n\nIt is, and there are several such packages. Looking through announcements on this forum: https://forum.typst.app/t/frame-it-v1-0-0-framing-for-theorems-definitions-customizable-beautiful-seamless/2213 and https://forum.typst.app/t/codly-v1-1-0-beautiful-and-easy-code-blocks/1935, for example.\n\nRegarding the second question -- rant incoming: I treat my own packages (which are all 0.x so far) like cargo and try to avoid breaking changes in patch version changes. It's important to remember that Semver is only a convention; if we as a community de facto conform to that interpretation, that becomes what Typst package versions mean. Likewise, if we use three-component versions but don't adhere to semver, there's no tool inherently stopping us from doing so (but let's hope we don't go there).\n\nAnd since it's tangentially relevant: package versions (currently) can't specify pre-releases, etc., so Typst does not implement full semver anyway.\n\nTypst's stance on compatibility is (currently) more strict anyway: you have to always specify full package versions. What would be a \"non-breaking change\" to a programmer may be a breaking change to an author; let's say changing some font size. Suddenly your pages look horrible because a paragraph takes an extra line. So you could argue that Typst ignores Semver's definition of compatibility anyway.\n\n\\</rant>\n\nTo come back to your question more directly:\n\n[quote=\"Lumi, post:1, topic:4071\"]\nWould it make sense to adopt a similar rule for typst packages?\n[/quote]\n\nI personally adopted that rule, and while I don't know about others' intentions, the Typst ecosystem broadly feels like this. I'm not sure if we really need to formalize this, since I'm not sure what practical difference it would make. Two reasons against it I can see would be 1) package authors are open source authors, and I wouldn't want to force this rule on someone who feels it's a nuisance to them, and 2) if a package is unpredictable with breaking changes, that may impact its adoption anyway, so I think that creates enough regulation on its own.",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 1,
      "like_count": 1,
      "reads": 21,
      "score": 29.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 12410,
      "post_number": 4,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-13T19:59:13.132Z",
      "updated_at": "2025-05-13T19:59:35.742Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"SillyFreak\" data-post=\"3\" data-topic=\"4071\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/sillyfreak/48/1483_2.png\" class=\"avatar\"> SillyFreak:</div>\n<blockquote>\n<p>So you could argue that Typst ignores Semver’s definition of compatibility anyway.</p>\n</blockquote>\n</aside>\n<p>Typst is in its 0 major version, so any change is fine, moreover changelog always documents all breaking changes. The packages on the other hand, well I would assume that any visual change is breaking, because of the nature of documents. So if a package treats such changes as not breaking, then that’s the package’s fault. <span class=\"spoiler\">Typst catching strays out of nowhere.</span></p>\n<p>P.S. Using Tytanic will quickly show you what is a breaking change and what isn’t. Which is a great tool to use anyway.</p>",
      "raw": "[quote=\"SillyFreak, post:3, topic:4071\"]\nSo you could argue that Typst ignores Semver’s definition of compatibility anyway.\n[/quote]\n\nTypst is in its 0 major version, so any change is fine, moreover changelog always documents all breaking changes. The packages on the other hand, well I would assume that any visual change is breaking, because of the nature of documents. So if a package treats such changes as not breaking, then that's the package's fault. [spoiler]Typst catching strays out of nowhere.[/spoiler]\n\nP.S. Using Tytanic will quickly show you what is a breaking change and what isn't. Which is a great tool to use anyway.",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 0,
      "reads": 21,
      "score": 9.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12415,
      "post_number": 5,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-05-13T20:58:19.974Z",
      "updated_at": "2025-05-13T20:58:19.974Z",
      "cooked": "<p>I’m aware of all that. I was just saying, since the package repo says “Package versioning should follow <a href=\"https://semver.org/\">SemVer</a>.”*, the fact that Typst doesn’t use semver compatibility could be considered a mismatch between the docs (that sentence) and what Typst actually does.</p>\n<p>*actually I misremembered and thought that the statement was stronger, something like “Typst uses SemVer for packages”, in which case that hypothetical criticism would make a bit more sense.</p>",
      "raw": "I'm aware of all that. I was just saying, since the package repo says \"Package versioning should follow [SemVer](https://semver.org/).\"\\*, the fact that Typst doesn't use semver compatibility could be considered a mismatch between the docs (that sentence) and what Typst actually does.\n\n\\*actually I misremembered and thought that the statement was stronger, something like \"Typst uses SemVer for packages\", in which case that hypothetical criticism would make a bit more sense.",
      "reply_to_post_number": 4,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 21,
      "score": 4.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 12433,
      "post_number": 6,
      "username": "Lumi",
      "name": "",
      "created_at": "2025-05-14T10:23:50.075Z",
      "updated_at": "2025-05-14T10:23:50.075Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"SillyFreak\" data-post=\"3\" data-topic=\"4071\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/sillyfreak/48/1483_2.png\" class=\"avatar\"> SillyFreak:</div>\n<blockquote>\n<p>I’m not sure if we really need to formalize this, since I’m not sure what practical difference it would make.</p>\n</blockquote>\n</aside>\n<p>Currently, if a package is on version 0.x.y, increments in <code>x</code> carry no further specified meaning compared to increments in <code>y</code>. If <code>x&gt;0</code>, then breaking changes can be published, despite only incrementing <code>y</code>. Again, such an action is semver-compliant, but not compliant with e.g. cargo’s semver-rules.</p>\n<p>A practical difference is that, when updating your packages, you might expect – and I did, when updating CeTZ – that a package updating from <code>0.3.2</code> to <code>0.3.3</code> does <em>not</em> introduce any breaking API-changes. CeTZ <em>did</em> have a (small) <a href=\"https://github.com/cetz-package/cetz/blob/b60e7e970d7a9d004f5c5f377b32282225ca2df5/CHANGES.md?plain=1#L7\" rel=\"noopener nofollow ugc\">breaking change</a>, which surprised me.</p>\n<p>“Visual-changes are breaking-changes” is a good point. I can imagine people having different intuitions about that, some agreeing that it’s a breaking-change while others disagreeing. If I open an issue in the typst-package-repo about semver, I should bring that up as well. Thank you all!</p>",
      "raw": "[quote=\"SillyFreak, post:3, topic:4071\"]\nI’m not sure if we really need to formalize this, since I’m not sure what practical difference it would make.\n[/quote]\n\nCurrently, if a package is on version 0.x.y, increments in `x` carry no further specified meaning compared to increments in `y`. If `x>0`, then breaking changes can be published, despite only incrementing `y`. Again, such an action is semver-compliant, but not compliant with e.g. cargo's semver-rules.\n\nA practical difference is that, when updating your packages, you might expect -- and I did, when updating CeTZ -- that a package updating from `0.3.2` to `0.3.3` does _not_ introduce any breaking API-changes. CeTZ _did_ have a (small) [breaking change](https://github.com/cetz-package/cetz/blob/b60e7e970d7a9d004f5c5f377b32282225ca2df5/CHANGES.md?plain=1#L7), which surprised me.\n\n\"Visual-changes are breaking-changes\" is a good point. I can imagine people having different intuitions about that, some agreeing that it's a breaking-change while others disagreeing. If I open an issue in the typst-package-repo about semver, I should bring that up as well. Thank you all!",
      "reply_to_post_number": 3,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 0,
      "reads": 20,
      "score": 9.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 1500
    },
    {
      "id": 12445,
      "post_number": 7,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-05-14T10:58:22.276Z",
      "updated_at": "2025-05-14T10:58:22.276Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Lumi\" data-post=\"6\" data-topic=\"4071\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/l/007AFF/48.png\" class=\"avatar\"> Lumi:</div>\n<blockquote>\n<p>Currently, if a package is on version 0.x.y, increments in <code>x</code> carry no further specified meaning compared to increments in <code>y</code>. If <code>x&gt;0</code>, then breaking changes can be published, despite only incrementing <code>y</code>. Again, such an action is semver-compliant, but not compliant with e.g. cargo’s semver-rules.</p>\n</blockquote>\n</aside>\n<p>I just want to note: the <em>reality</em> is that packages can be released that break either semver’s or cargo-style-semver’s compatibility conventions. This is true for Universe (where a review for breaking changes would be infeasible), as well as for <a href=\"http://crates.io\">crates.io</a> (where no review happens). The difference is that, since Cargo resolves crate versions, users will notice the breaking changes <em>without having changed anything</em>.</p>\n<p>So to state my opinion bluntly: since Typst does not resolve compatible versions, what we <em>declare</em> these versions to mean doesn’t matter that much. That’s what I meant by saying “I’m not sure what <em>practical</em> difference it would make.”</p>\n<aside class=\"quote no-group\" data-username=\"Lumi\" data-post=\"6\" data-topic=\"4071\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/letter_avatar_proxy/v4/letter/l/007AFF/48.png\" class=\"avatar\"> Lumi:</div>\n<blockquote>\n<p>A practical difference is that, when updating your packages, you might expect – and I did, when updating CeTZ – that a package updating from <code>0.3.2</code> to <code>0.3.3</code> does <em>not</em> introduce any breaking API-changes. CeTZ <em>did</em> have a (small) <a href=\"https://github.com/cetz-package/cetz/blob/b60e7e970d7a9d004f5c5f377b32282225ca2df5/CHANGES.md?plain=1#L7\">breaking change </a>, which surprised me.</p>\n</blockquote>\n</aside>\n<p>With all that said, yes that would surprise me too. I understand people who are reluctant to go beyond major version 1, 2, 3 and thus we have zerover, but I don’t see much reason to shy away from 0.4, 0.5, 0.6, so I would just follow the cargo conventions. But in the end, since updating depencencies in Typst <em>is</em> manual, I do it relatively deliberately, and stumbling over a breaking change is not something that worries me too much. I see it this way: if I don’t need a new feature, I can simply not upgrade. And if I do need it, I need to fix breakage no matter what the version number introducing that feature is.</p>",
      "raw": "[quote=\"Lumi, post:6, topic:4071\"]\nCurrently, if a package is on version 0.x.y, increments in `x` carry no further specified meaning compared to increments in `y`. If `x>0`, then breaking changes can be published, despite only incrementing `y`. Again, such an action is semver-compliant, but not compliant with e.g. cargo’s semver-rules.\n[/quote]\n\nI just want to note: the _reality_ is that packages can be released that break either semver's or cargo-style-semver's compatibility conventions. This is true for Universe (where a review for breaking changes would be infeasible), as well as for crates.io (where no review happens). The difference is that, since Cargo resolves crate versions, users will notice the breaking changes _without having changed anything_.\n\nSo to state my opinion bluntly: since Typst does not resolve compatible versions, what we _declare_ these versions to mean doesn't matter that much. That's what I meant by saying \"I’m not sure what _practical_ difference it would make.\"\n\n[quote=\"Lumi, post:6, topic:4071\"]\nA practical difference is that, when updating your packages, you might expect – and I did, when updating CeTZ – that a package updating from `0.3.2` to `0.3.3` does *not* introduce any breaking API-changes. CeTZ *did* have a (small) [breaking change ](https://github.com/cetz-package/cetz/blob/b60e7e970d7a9d004f5c5f377b32282225ca2df5/CHANGES.md?plain=1#L7), which surprised me.\n[/quote]\n\nWith all that said, yes that would surprise me too. I understand people who are reluctant to go beyond major version 1, 2, 3 and thus we have zerover, but I don't see much reason to shy away from 0.4, 0.5, 0.6, so I would just follow the cargo conventions. But in the end, since updating depencencies in Typst _is_ manual, I do it relatively deliberately, and stumbling over a breaking change is not something that worries me too much. I see it this way: if I don't need a new feature, I can simply not upgrade. And if I do need it, I need to fix breakage no matter what the version number introducing that feature is.",
      "reply_to_post_number": 6,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 0,
      "reads": 18,
      "score": 8.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 12673,
      "post_number": 8,
      "username": "Lumi",
      "name": "",
      "created_at": "2025-05-17T17:38:59.947Z",
      "updated_at": "2025-05-17T17:41:56.010Z",
      "cooked": "<p>To summarise:</p>\n<ol>\n<li>Packages with major version &gt; 0 exist and are not prohibited.</li>\n<li>In version 0.y.z, treating increments in y as major and increments in z as minor is good and useful, but not enforced.</li>\n<li>Visual changes (in the rendered document) are usually not breaking, but use your best judgment.</li>\n</ol>\n<p>Thank you to everyone who followed this thread, and to Laurenz for answering my questions in the related <a href=\"https://github.com/typst/packages/issues/2387\" rel=\"noopener nofollow ugc\">issue in the typst-packages repo</a>.</p>",
      "raw": "To summarise:\n\n1. Packages with major version > 0 exist and are not prohibited.\n2. In version 0.y.z, treating increments in y as major and increments in z as minor is good and useful, but not enforced.\n3. Visual changes (in the rendered document) are usually not breaking, but use your best judgment.\n\nThank you to everyone who followed this thread, and to Laurenz for answering my questions in the related [issue in the typst-packages repo](https://github.com/typst/packages/issues/2387).",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 15,
      "score": 63.0,
      "accepted_answer": true,
      "trust_level": 1,
      "user_id": 1500
    }
  ],
  "scraped_at": "2025-06-10T09:47:52.801917"
}