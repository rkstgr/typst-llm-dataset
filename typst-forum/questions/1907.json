{
  "topic_metadata": {
    "id": 1907,
    "title": "When using auto-sizing in grid, can i have finer control over the height of cells? So that the height of specific cells is used?",
    "slug": "when-using-auto-sizing-in-grid-can-i-have-finer-control-over-the-height-of-cells-so-that-the-height-of-specific-cells-is-used",
    "posts_count": 4,
    "created_at": "2024-11-27T08:43:23.751Z",
    "last_posted_at": "2024-11-28T14:00:06.524Z",
    "views": 358,
    "like_count": 2,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 2,
    "accepted_answer_username": "Marco",
    "tags": [
      "layout",
      "grids"
    ],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 1170
  },
  "posts": [
    {
      "id": 6155,
      "post_number": 1,
      "username": "Marco",
      "name": "Marco",
      "created_at": "2024-11-27T08:43:23.890Z",
      "updated_at": "2024-11-27T08:43:23.890Z",
      "cooked": "<p>Hi,</p>\n<p>Iâ€™m trying to create a grid where i want to use <code>rows:(auto,auto,1fr),</code> to determine the height of the top 2 rows.</p>\n<p>More specificly i want the left column to determine the height.<br>\nIn the right column i want an image to cover the entire rowspanned cells, similar to  the <a href=\"https://typst.app/docs/reference/visualize/image/#parameters-fit\">fit parameter on image.</a>.</p>\n<p>I made an example below:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let imagecontents = \"&lt;svg class=\\\"svg-icon\\\" style=\\\"width: 1.01171875em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;\\\" viewBox=\\\"0 0 1036 1024\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"&gt;\n&lt;rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"gray\\\" /&gt;\n&lt;path d=\\\"M231.633593 295.165243c0-153.595317 124.940454-278.535771 278.537807-278.535771 153.595317 0 278.535771 124.940454 278.535771 278.535771 0 153.60448-124.940454 278.53068-278.535771 278.53068C356.574047 573.695923 231.633593 448.769723 231.633593 295.165243L231.633593 295.165243zM0 1014.090329c5.996914-67.351756 38.330358-306.001432 286.846943-433.813074 61.63687 48.382571 139.069346 77.514946 223.325474 77.514946 84.715315 0 162.56727-29.428658 224.36908-78.30605 249.591753 127.274058 279.721917 364.250911 285.801301 434.597051C1018.86037 1015.51676 1.473266 1014.201308 0 1014.090329L0 1014.090329zM0 1014.090329\\\"  /&gt;&lt;/svg&gt;\"\n\n#grid(\n    columns:( 3fr, 1.5fr),\n\trows:(auto,auto,1fr),\n    stroke:red,\n    [\n      #set text(size:3em)\n      = big title],\n    grid.cell(inset:0pt,\n      \n\t\t\tfill:aqua,\n\t\t\tstroke:none,\n\t\t\trowspan:2,\n\t\t\talign:right,image.decode(imagecontents)),\n   grid.cell(inset:(top:2em))[\n     = subtitle\n    #lorem(60)\n    #lorem(20)\n    ],\n   [more content here],\n   [sidebar that should be aligned with the image]\n  )\n</code></pre>\n<p>This results in the following:<br>\n<img src=\"/uploads/default/original/2X/1/11b1691225685e85fa8ede09a8918053db349a04.png\" alt=\"gridquestion\" data-base62-sha1=\"2wwdswrvCZ3q1cM80ll4rdvcyMI\" width=\"353\" height=\"499\"></p>\n<p>At the moment you can still see the background of the topright cell, and i want the image to cover the entire cell, so that you no longer see the aqua-blue in the example.</p>\n<p>Setting a height on the image of 100% or 1fr, results in the image determining the height of the 2 top rows. I want the left cells to determine the height of the top rows and the right to just adjust to the height of the left cells.</p>\n<p>(How) can i do this in typst?</p>\n<p>PS. Im looking for a solution in Typst not SVG because i want to use bitmap images. The svg is just an example.</p>",
      "raw": "Hi,\n\nI'm trying to create a grid where i want to use ```rows:(auto,auto,1fr),``` to determine the height of the top 2 rows.\n\nMore specificly i want the left column to determine the height.\nIn the right column i want an image to cover the entire rowspanned cells, similar to  the [fit parameter on image.](https://typst.app/docs/reference/visualize/image/#parameters-fit).\n\nI made an example below:\n\n```typst\n#let imagecontents = \"<svg class=\\\"svg-icon\\\" style=\\\"width: 1.01171875em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;\\\" viewBox=\\\"0 0 1036 1024\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\n<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"gray\\\" />\n<path d=\\\"M231.633593 295.165243c0-153.595317 124.940454-278.535771 278.537807-278.535771 153.595317 0 278.535771 124.940454 278.535771 278.535771 0 153.60448-124.940454 278.53068-278.535771 278.53068C356.574047 573.695923 231.633593 448.769723 231.633593 295.165243L231.633593 295.165243zM0 1014.090329c5.996914-67.351756 38.330358-306.001432 286.846943-433.813074 61.63687 48.382571 139.069346 77.514946 223.325474 77.514946 84.715315 0 162.56727-29.428658 224.36908-78.30605 249.591753 127.274058 279.721917 364.250911 285.801301 434.597051C1018.86037 1015.51676 1.473266 1014.201308 0 1014.090329L0 1014.090329zM0 1014.090329\\\"  /></svg>\"\n\n#grid(\n    columns:( 3fr, 1.5fr),\n\trows:(auto,auto,1fr),\n    stroke:red,\n    [\n      #set text(size:3em)\n      = big title],\n    grid.cell(inset:0pt,\n      \n\t\t\tfill:aqua,\n\t\t\tstroke:none,\n\t\t\trowspan:2,\n\t\t\talign:right,image.decode(imagecontents)),\n   grid.cell(inset:(top:2em))[\n     = subtitle\n    #lorem(60)\n    #lorem(20)\n    ],\n   [more content here],\n   [sidebar that should be aligned with the image]\n  )\n```\nThis results in the following:\n![gridquestion|353x499](upload://2wwdswrvCZ3q1cM80ll4rdvcyMI.png)\n\nAt the moment you can still see the background of the topright cell, and i want the image to cover the entire cell, so that you no longer see the aqua-blue in the example. \n\nSetting a height on the image of 100% or 1fr, results in the image determining the height of the 2 top rows. I want the left cells to determine the height of the top rows and the right to just adjust to the height of the left cells.\n\n(How) can i do this in typst? \n\nPS. Im looking for a solution in Typst not SVG because i want to use bitmap images. The svg is just an example.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 38,
      "score": 1307.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 720
    },
    {
      "id": 6179,
      "post_number": 2,
      "username": "Marco",
      "name": "Marco",
      "created_at": "2024-11-28T09:55:07.708Z",
      "updated_at": "2024-11-28T09:55:07.708Z",
      "cooked": "<p>I managed to find a solution by measuring/calculating the height of the left column and then setting the height of the image in the right column explicitly.</p>\n<p>The code containing the solution:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#let imagecontents = \"&lt;svg class=\\\"svg-icon\\\" style=\\\"width: 1.01171875em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;\\\" viewBox=\\\"0 0 1036 1024\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"&gt;\n&lt;rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"gray\\\" /&gt;\n&lt;path d=\\\"M231.633593 295.165243c0-153.595317 124.940454-278.535771 278.537807-278.535771 153.595317 0 278.535771 124.940454 278.535771 278.535771 0 153.60448-124.940454 278.53068-278.535771 278.53068C356.574047 573.695923 231.633593 448.769723 231.633593 295.165243L231.633593 295.165243zM0 1014.090329c5.996914-67.351756 38.330358-306.001432 286.846943-433.813074 61.63687 48.382571 139.069346 77.514946 223.325474 77.514946 84.715315 0 162.56727-29.428658 224.36908-78.30605 249.591753 127.274058 279.721917 364.250911 285.801301 434.597051C1018.86037 1015.51676 1.473266 1014.201308 0 1014.090329L0 1014.090329zM0 1014.090329\\\"  /&gt;&lt;/svg&gt;\"\n\n// define the content here so it's easy to measure later on\n#let title = [\n      #set text(size:3em)\n      #box()[= big title]]\n      \n#let subblock = [\n     #box(inset:(top:2em),[= subtitle\n    #lorem(60)\n    #lorem(20)\n    #lorem(10)])]\n\n\n\n#grid(\n    columns:( 3fr, 1.5fr),\n\trows:(auto,auto,1fr),\n    stroke:red,\n    title ,\n      \n    grid.cell(inset:0pt,\n       align: center+horizon,\n\t\t\t fill:aqua,\n\t\t\tstroke:none,\n\t\t\trowspan:2,\n      {\n      layout(size =&gt; {\n        // we know the left column is twice as big as the right column\n        let curwidth-leftcolumn = size.width*2\n        // we know the content of the left column, so we can measure it's height\n        let title-height = measure(width:curwidth-leftcolumn,title).height\n        let subblock-height = measure(width:curwidth-leftcolumn,subblock).height\n        let heightofleft = title-height+subblock-height\n        // knowing the height we can create an image of the specific height and 100% width with the default fit of cover\n        image.decode(width:100%,height:heightofleft,imagecontents) \n      })\n   }),\n   grid.cell(subblock),\n   [more content here],\n   [sidebar that should be aligned with the image]\n  )\n</code></pre>\n<p>results in:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/f/f6e1462e75278e7a0ae5f9ca5315243f7dd5b05a.png\" data-download-href=\"https://forum.typst.app/uploads/default/f6e1462e75278e7a0ae5f9ca5315243f7dd5b05a\" title=\"gridsolution\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/f/f6e1462e75278e7a0ae5f9ca5315243f7dd5b05a_2_353x499.png\" alt=\"gridsolution\" data-base62-sha1=\"ze06x0ZnitB3ieSFJVVP9n0OX4C\" width=\"353\" height=\"499\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/f/f6e1462e75278e7a0ae5f9ca5315243f7dd5b05a_2_353x499.png, https://forum.typst.app/uploads/default/optimized/2X/f/f6e1462e75278e7a0ae5f9ca5315243f7dd5b05a_2_529x748.png 1.5x, https://forum.typst.app/uploads/default/optimized/2X/f/f6e1462e75278e7a0ae5f9ca5315243f7dd5b05a_2_706x998.png 2x\" data-dominant-color=\"EEECEC\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">gridsolution</span><span class=\"informations\">1488Ã—2105 227 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "I managed to find a solution by measuring/calculating the height of the left column and then setting the height of the image in the right column explicitly.\n\nThe code containing the solution:\n```typst\n#let imagecontents = \"<svg class=\\\"svg-icon\\\" style=\\\"width: 1.01171875em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;\\\" viewBox=\\\"0 0 1036 1024\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\n<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"gray\\\" />\n<path d=\\\"M231.633593 295.165243c0-153.595317 124.940454-278.535771 278.537807-278.535771 153.595317 0 278.535771 124.940454 278.535771 278.535771 0 153.60448-124.940454 278.53068-278.535771 278.53068C356.574047 573.695923 231.633593 448.769723 231.633593 295.165243L231.633593 295.165243zM0 1014.090329c5.996914-67.351756 38.330358-306.001432 286.846943-433.813074 61.63687 48.382571 139.069346 77.514946 223.325474 77.514946 84.715315 0 162.56727-29.428658 224.36908-78.30605 249.591753 127.274058 279.721917 364.250911 285.801301 434.597051C1018.86037 1015.51676 1.473266 1014.201308 0 1014.090329L0 1014.090329zM0 1014.090329\\\"  /></svg>\"\n\n// define the content here so it's easy to measure later on\n#let title = [\n      #set text(size:3em)\n      #box()[= big title]]\n      \n#let subblock = [\n     #box(inset:(top:2em),[= subtitle\n    #lorem(60)\n    #lorem(20)\n    #lorem(10)])]\n\n\n\n#grid(\n    columns:( 3fr, 1.5fr),\n\trows:(auto,auto,1fr),\n    stroke:red,\n    title ,\n      \n    grid.cell(inset:0pt,\n       align: center+horizon,\n\t\t\t fill:aqua,\n\t\t\tstroke:none,\n\t\t\trowspan:2,\n      {\n      layout(size => {\n        // we know the left column is twice as big as the right column\n        let curwidth-leftcolumn = size.width*2\n        // we know the content of the left column, so we can measure it's height\n        let title-height = measure(width:curwidth-leftcolumn,title).height\n        let subblock-height = measure(width:curwidth-leftcolumn,subblock).height\n        let heightofleft = title-height+subblock-height\n        // knowing the height we can create an image of the specific height and 100% width with the default fit of cover\n        image.decode(width:100%,height:heightofleft,imagecontents) \n      })\n   }),\n   grid.cell(subblock),\n   [more content here],\n   [sidebar that should be aligned with the image]\n  )\n```\n\nresults in:\n![gridsolution|353x499](upload://ze06x0ZnitB3ieSFJVVP9n0OX4C.png)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 32,
      "score": 196.4,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 720
    },
    {
      "id": 6180,
      "post_number": 3,
      "username": "PgBiel",
      "name": "",
      "created_at": "2024-11-28T13:22:53.737Z",
      "updated_at": "2024-11-28T13:22:53.737Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Marco\" data-post=\"1\" data-topic=\"1907\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/marco/48/1093_2.png\" class=\"avatar\"> Marco:</div>\n<blockquote>\n<p>Setting a height on the image of 100% or 1fr, results in the image determining the height of the 2 top rows. I want the left cells to determine the height of the top rows and the right to just adjust to the height of the left cells.</p>\n</blockquote>\n</aside>\n<p>Youâ€™re looking for this feature: <a href=\"https://github.com/typst/typst/issues/4000\" class=\"inline-onebox\">Add `table.cell(fit: Axes&lt;bool&gt;)` parameter Â· Issue #4000 Â· typst/typst Â· GitHub</a></p>\n<p>For the moment, this is only present in tablex package (which inspired Typst 0.11â€™s new table API) through the <code>fit-spans: (y: true)</code> setting. It is, however, generally discouraged to use tablex as most of its features have been ported to built-in tables and grids (but specifically not this feature at the moment), and tablex compiles much slower than those. Still, hereâ€™s how it would look like:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#import \"@preview/tablex:0.0.9\": gridx, cellx\n\n#let imagecontents = \"&lt;svg class=\\\"svg-icon\\\" style=\\\"width: 1.01171875em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;\\\" viewBox=\\\"0 0 1036 1024\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"&gt;\n&lt;rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"gray\\\" /&gt;\n&lt;path d=\\\"M231.633593 295.165243c0-153.595317 124.940454-278.535771 278.537807-278.535771 153.595317 0 278.535771 124.940454 278.535771 278.535771 0 153.60448-124.940454 278.53068-278.535771 278.53068C356.574047 573.695923 231.633593 448.769723 231.633593 295.165243L231.633593 295.165243zM0 1014.090329c5.996914-67.351756 38.330358-306.001432 286.846943-433.813074 61.63687 48.382571 139.069346 77.514946 223.325474 77.514946 84.715315 0 162.56727-29.428658 224.36908-78.30605 249.591753 127.274058 279.721917 364.250911 285.801301 434.597051C1018.86037 1015.51676 1.473266 1014.201308 0 1014.090329L0 1014.090329zM0 1014.090329\\\"  /&gt;&lt;/svg&gt;\"\n\n#gridx(\n    columns:( 3fr, 1.5fr),\n\trows:(auto,auto,auto),\n    stroke: red,\n    [\n      #set text(size:3em)\n      = big title],\n    cellx(inset:0pt,\n     fit-spans: (y: true),\n\t\t\tfill:aqua,\n\t\t\trowspan:2,\n\t\t\talign:right,image.decode(imagecontents, height: 100%)),\n   cellx(inset:(top:2em))[\n     = subtitle\n    #lorem(60)\n    #lorem(20) ddd dd d d d dd dddddddddddddd ddddddddddd ddddd dddddddddddddddd\n    ],\n   [more content here],\n   [sidebar that should be aligned with the image]\n  )\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/c/c10f8cea720213d09a48978503dfa678f51bd0b3.png\" alt=\"output: image adjusts to height\" data-base62-sha1=\"rxTt2RBVO6nNYjkDOgqAr2qlHiP\" width=\"575\" height=\"359\"></p>\n<p>Note that tablex internally uses <code>measure</code> for this, so your approach is generally correct (albeit a bit manual).</p>",
      "raw": "[quote=\"Marco, post:1, topic:1907\"]\nSetting a height on the image of 100% or 1fr, results in the image determining the height of the 2 top rows. I want the left cells to determine the height of the top rows and the right to just adjust to the height of the left cells.\n[/quote]\n\nYou're looking for this feature: https://github.com/typst/typst/issues/4000\n\nFor the moment, this is only present in tablex package (which inspired Typst 0.11's new table API) through the `fit-spans: (y: true)` setting. It is, however, generally discouraged to use tablex as most of its features have been ported to built-in tables and grids (but specifically not this feature at the moment), and tablex compiles much slower than those. Still, here's how it would look like:\n\n```typ\n#import \"@preview/tablex:0.0.9\": gridx, cellx\n\n#let imagecontents = \"<svg class=\\\"svg-icon\\\" style=\\\"width: 1.01171875em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;\\\" viewBox=\\\"0 0 1036 1024\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\n<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"gray\\\" />\n<path d=\\\"M231.633593 295.165243c0-153.595317 124.940454-278.535771 278.537807-278.535771 153.595317 0 278.535771 124.940454 278.535771 278.535771 0 153.60448-124.940454 278.53068-278.535771 278.53068C356.574047 573.695923 231.633593 448.769723 231.633593 295.165243L231.633593 295.165243zM0 1014.090329c5.996914-67.351756 38.330358-306.001432 286.846943-433.813074 61.63687 48.382571 139.069346 77.514946 223.325474 77.514946 84.715315 0 162.56727-29.428658 224.36908-78.30605 249.591753 127.274058 279.721917 364.250911 285.801301 434.597051C1018.86037 1015.51676 1.473266 1014.201308 0 1014.090329L0 1014.090329zM0 1014.090329\\\"  /></svg>\"\n\n#gridx(\n    columns:( 3fr, 1.5fr),\n\trows:(auto,auto,auto),\n    stroke: red,\n    [\n      #set text(size:3em)\n      = big title],\n    cellx(inset:0pt,\n     fit-spans: (y: true),\n\t\t\tfill:aqua,\n\t\t\trowspan:2,\n\t\t\talign:right,image.decode(imagecontents, height: 100%)),\n   cellx(inset:(top:2em))[\n     = subtitle\n    #lorem(60)\n    #lorem(20) ddd dd d d d dd dddddddddddddd ddddddddddd ddddd dddddddddddddddd\n    ],\n   [more content here],\n   [sidebar that should be aligned with the image]\n  )\n```\n\n![output: image adjusts to height|575x359](upload://rxTt2RBVO6nNYjkDOgqAr2qlHiP.png)\n\nNote that tablex internally uses `measure` for this, so your approach is generally correct (albeit a bit manual).",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 1,
      "reads": 23,
      "score": 34.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 6181,
      "post_number": 4,
      "username": "Marco",
      "name": "Marco",
      "created_at": "2024-11-28T14:00:06.524Z",
      "updated_at": "2024-11-28T14:00:06.524Z",
      "cooked": "<p>Hi <a class=\"mention\" href=\"/u/pgbiel\">@PgBiel</a>,</p>\n<p>tablex looks interesting. Iâ€™ll look into it. <img src=\"https://forum.typst.app/uploads/default/original/1X/dd9145ed4e34626aea994d5f03e6983baf0525e8.png?v=12\" title=\":typstguy_peeking:\" class=\"emoji emoji-custom\" alt=\":typstguy_peeking:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Hi @PgBiel,\n\ntablex looks interesting. I'll look into it. :typstguy_peeking:",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 20,
      "score": 214.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 720
    }
  ],
  "scraped_at": "2025-06-10T09:54:20.402406"
}