{
  "topic_metadata": {
    "id": 3129,
    "title": "How to use `set page(..)` without adding an unwanted pagebreak?",
    "slug": "how-to-use-set-page-without-adding-an-unwanted-pagebreak",
    "posts_count": 6,
    "created_at": "2025-03-06T14:05:43.579Z",
    "last_posted_at": "2025-03-06T18:24:45.244Z",
    "views": 304,
    "like_count": 1,
    "reply_count": 2,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 5,
    "accepted_answer_username": "sijo",
    "tags": [
      "layout"
    ],
    "category_id": 5,
    "participant_count": 2,
    "word_count": 916
  },
  "posts": [
    {
      "id": 9443,
      "post_number": 1,
      "username": "Yannick_Lapointe",
      "name": "Yannick Lapointe",
      "created_at": "2025-03-06T14:05:43.696Z",
      "updated_at": "2025-03-06T16:21:39.235Z",
      "cooked": "<p>I am working on a template for a thesis in book style, meaning the chapters (headings level 1) always start on an odd page and also that the page numbering is located in the header. I also need to not number/have any header/footer for the empty pages.</p>\n<p>My problem comes after the outline page as I am changing the page numbering from lower case roman to Arabic numbering using a <code>set page(...)</code> statement which automatically adds a page break. It is also important to note that I detect if a page is empty using labels added in a custom “detectable” page break function. Since the page break added by the <code>set page(...)</code> statement is not a detectable one, the page is numbered and has a header even if it is empty.</p>\n<p>Here is what my code looks like :</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">// Footer formatting function\n#let footer-numbering(format: \"1\", book: true) = context{\n  // If empty page no footer\n  if is-page-empty() {\n    return\n  }\n  // If in book style, footer numbering only on first page of chapter\n  if book {\n    let i = here().page()\n    if query(heading.where(level: 1)).any(it =&gt; it.location().page() == i) {\n      align(center, numbering(format, counter(page).get().at(0)))\n    }\n  } else {\n    // Numbering in footer on all pages otherwise\n    align(center, numbering(format, counter(page).get().at(0)))\n  }\n}\n\n// First heading level = chapters\nshow heading.where(level: 1): it =&gt; {\n  detectable-pagebreak()\n  set text(font: \"IBM Plex Sans\", weight: \"medium\", size: 20pt)\n  if it.body in special-chapters {\n    block(spacing: 1.5em, upper(it))\n  } else {\n    stack(\n      dir: ttb,\n      spacing: 15pt,\n      align(right, text(size: 40pt, counter(heading).display())),\n      line(length: 100%, stroke: .5pt),\n      upper(it.body),\n      line(length: 100%, stroke: .5pt)\n     )\n    v(2em)\n  }\n}\n\nset page(footer: footer-numbering(format: \"i\", book: book))\n\n// outline code is here\n\nset page(footer: footer-numbering(book: book))\ncounter(page).update(1)\n\n// start of first chapter\n</code></pre>\n<p>I am aware of <a href=\"https://forum.typst.app/t/how-to-change-the-page-header-without-causing-a-pagebreak/545\">this post</a> on a similar issue but I still cannot find a solution.</p>",
      "raw": "I am working on a template for a thesis in book style, meaning the chapters (headings level 1) always start on an odd page and also that the page numbering is located in the header. I also need to not number/have any header/footer for the empty pages.\n\nMy problem comes after the outline page as I am changing the page numbering from lower case roman to Arabic numbering using a `set page(...)` statement which automatically adds a page break. It is also important to note that I detect if a page is empty using labels added in a custom \"detectable\" page break function. Since the page break added by the `set page(...)` statement is not a detectable one, the page is numbered and has a header even if it is empty. \n\nHere is what my code looks like : \n```typ\n// Footer formatting function\n#let footer-numbering(format: \"1\", book: true) = context{\n  // If empty page no footer\n  if is-page-empty() {\n    return\n  }\n  // If in book style, footer numbering only on first page of chapter\n  if book {\n    let i = here().page()\n    if query(heading.where(level: 1)).any(it => it.location().page() == i) {\n      align(center, numbering(format, counter(page).get().at(0)))\n    }\n  } else {\n    // Numbering in footer on all pages otherwise\n    align(center, numbering(format, counter(page).get().at(0)))\n  }\n}\n\n// First heading level = chapters\nshow heading.where(level: 1): it => {\n  detectable-pagebreak()\n  set text(font: \"IBM Plex Sans\", weight: \"medium\", size: 20pt)\n  if it.body in special-chapters {\n    block(spacing: 1.5em, upper(it))\n  } else {\n    stack(\n      dir: ttb,\n      spacing: 15pt,\n      align(right, text(size: 40pt, counter(heading).display())),\n      line(length: 100%, stroke: .5pt),\n      upper(it.body),\n      line(length: 100%, stroke: .5pt)\n     )\n    v(2em)\n  }\n}\n\nset page(footer: footer-numbering(format: \"i\", book: book))\n\n// outline code is here\n\nset page(footer: footer-numbering(book: book))\ncounter(page).update(1)\n\n// start of first chapter\n```\n\nI am aware of [this post](https://forum.typst.app/t/how-to-change-the-page-header-without-causing-a-pagebreak/545) on a similar issue but I still cannot find a solution.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 42,
      "score": 1453.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 460
    },
    {
      "id": 9444,
      "post_number": 2,
      "username": "sijo",
      "name": "",
      "created_at": "2025-03-06T14:29:32.678Z",
      "updated_at": "2025-03-06T14:29:32.678Z",
      "cooked": "<p>Could you post a minimal but complete example that shows what you have currently? I cannot run your code as it is, and it’s also a bit hard to guess what you want with the book style parameter and the comment mentioning numbering on the first page of each chapter. Maybe it’s irrelevant to your question? Then a simple code example without all of this would help.</p>",
      "raw": "Could you post a minimal but complete example that shows what you have currently? I cannot run your code as it is, and it's also a bit hard to guess what you want with the book style parameter and the comment mentioning numbering on the first page of each chapter. Maybe it's irrelevant to your question? Then a simple code example without all of this would help.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 39,
      "score": 7.8,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 9446,
      "post_number": 3,
      "username": "Yannick_Lapointe",
      "name": "Yannick Lapointe",
      "created_at": "2025-03-06T14:55:48.394Z",
      "updated_at": "2025-03-06T16:21:55.759Z",
      "cooked": "<p>Sorry for this confusion, my code is pretty long so I tried to only give the relevant parts. Here is a simpler example :</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">// Check if a page is empty\n#let is-page-empty() = {\n  let page-num = here().page()\n  query(&lt;empty-page-start&gt;)\n    .zip(query(&lt;empty-page-end&gt;))\n    .any(((start, end)) =&gt; {\n      (start.location().page() &lt; page-num\n        and page-num &lt; end.location().page())\n    })\n}\n\n// Pagebreaks detectable by is-page-empty\n#let detectable-pagebreak(to: \"odd\") = {\n  [#metadata(none) &lt;empty-page-start&gt;]\n  pagebreak(to: to)\n  [#metadata(none) &lt;empty-page-end&gt;]\n}\n\n// Footer formatting function\n#let footer-numbering(format: \"1\") = context{\n  // If empty page no footer\n  if is-page-empty() {\n    return\n  }\n  align(center, numbering(format, counter(page).get().at(0)))\n}\n\n// First level headings = chapters\n#show heading.where(level: 1): it =&gt; {\n  set text(font: \"IBM Plex Sans\", weight: \"medium\", size: 20pt)\n  if it.body == [Table of Contents] {\n    block(spacing: 1.5em, upper(it))\n  } else {\n    detectable-pagebreak()\n    stack(\n      dir: ttb,\n      spacing: 15pt,\n      align(right, text(size: 40pt, counter(heading).display())),\n      line(length: 100%, stroke: .5pt),\n      upper(it.body),\n      line(length: 100%, stroke: .5pt)\n    )\n    v(2em)\n  }\n}\n\n#set page(footer: footer-numbering(format: \"i\"))\n\n#outline(title: [Table of Contents])\n\n#set page(footer: footer-numbering())\n#counter(page).update(1)\n\n= First Chapter\n</code></pre>\n<p>The “problem” I have is that following the rules of my university, I should not have numbering on the second page in this example since it is empty. I know this happens because of the <code>set page(...)</code> statements inserting page breaks that cannot be detected by the <code>is-page-empty()</code> function.</p>",
      "raw": "Sorry for this confusion, my code is pretty long so I tried to only give the relevant parts. Here is a simpler example :\n```typ\n// Check if a page is empty\n#let is-page-empty() = {\n  let page-num = here().page()\n  query(<empty-page-start>)\n    .zip(query(<empty-page-end>))\n    .any(((start, end)) => {\n      (start.location().page() < page-num\n        and page-num < end.location().page())\n    })\n}\n\n// Pagebreaks detectable by is-page-empty\n#let detectable-pagebreak(to: \"odd\") = {\n  [#metadata(none) <empty-page-start>]\n  pagebreak(to: to)\n  [#metadata(none) <empty-page-end>]\n}\n\n// Footer formatting function\n#let footer-numbering(format: \"1\") = context{\n  // If empty page no footer\n  if is-page-empty() {\n    return\n  }\n  align(center, numbering(format, counter(page).get().at(0)))\n}\n\n// First level headings = chapters\n#show heading.where(level: 1): it => {\n  set text(font: \"IBM Plex Sans\", weight: \"medium\", size: 20pt)\n  if it.body == [Table of Contents] {\n    block(spacing: 1.5em, upper(it))\n  } else {\n    detectable-pagebreak()\n    stack(\n      dir: ttb,\n      spacing: 15pt,\n      align(right, text(size: 40pt, counter(heading).display())),\n      line(length: 100%, stroke: .5pt),\n      upper(it.body),\n      line(length: 100%, stroke: .5pt)\n    )\n    v(2em)\n  }\n}\n\n#set page(footer: footer-numbering(format: \"i\"))\n\n#outline(title: [Table of Contents])\n\n#set page(footer: footer-numbering())\n#counter(page).update(1)\n\n= First Chapter\n```\n\nThe \"problem\" I have is that following the rules of my university, I should not have numbering on the second page in this example since it is empty. I know this happens because of the `set page(...)` statements inserting page breaks that cannot be detected by the `is-page-empty()` function.",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 38,
      "score": 42.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 460
    },
    {
      "id": 9448,
      "post_number": 4,
      "username": "sijo",
      "name": "",
      "created_at": "2025-03-06T16:13:13.602Z",
      "updated_at": "2025-03-06T16:13:13.602Z",
      "cooked": "<p>Thanks, it’s now clearer to me. So you have code that tests if the current page comes after the start and before the end of a page break. This happens when <code>pagebreak(to: \"odd\")</code> starts two new pages: the second page will pass this test, and that’s the blank page you want to detect. The problem is when you have <code>set page(...)</code> just before this page break: this starts a new page A, then the <code>pagebreak(to: \"odd\")</code> starts another (single) page B. So page A is blank but doesn’t pass the test. (It seems you figured that out already, I’m just writing it out for the record.)</p>\n<p>What I would do is create page A myself without footer when I know that there will be a page B:</p>\n<pre><code class=\"lang-auto\">#page(footer: none, none)\n#set page(footer: footer-numbering())\n#counter(page).update(1)\n\n= First Chapter\n</code></pre>\n<p>I tried doing this a bit less manual by checking if two pages are going to be created, with <code>context if calc.odd(here().page()) { page(footer: none, none) }</code>, but with that code the layout fails to converge.</p>\n<p>Also linking a <a href=\"https://github.com/typst/typst/issues/2722\">related GitHub issue</a>.</p>",
      "raw": "Thanks, it's now clearer to me. So you have code that tests if the current page comes after the start and before the end of a page break. This happens when `pagebreak(to: \"odd\")` starts two new pages: the second page will pass this test, and that's the blank page you want to detect. The problem is when you have `set page(...)` just before this page break: this starts a new page A, then the `pagebreak(to: \"odd\")` starts another (single) page B. So page A is blank but doesn't pass the test. (It seems you figured that out already, I'm just writing it out for the record.)\n\nWhat I would do is create page A myself without footer when I know that there will be a page B:\n\n```\n#page(footer: none, none)\n#set page(footer: footer-numbering())\n#counter(page).update(1)\n\n= First Chapter\n```\n\nI tried doing this a bit less manual by checking if two pages are going to be created, with `context if calc.odd(here().page()) { page(footer: none, none) }`, but with that code the layout fails to converge.\n\n\nAlso linking a [related GitHub issue](https://github.com/typst/typst/issues/2722).",
      "reply_to_post_number": 3,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 28,
      "score": 130.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 9452,
      "post_number": 5,
      "username": "sijo",
      "name": "",
      "created_at": "2025-03-06T16:36:03.204Z",
      "updated_at": "2025-03-06T16:36:03.204Z",
      "cooked": "<p>It seems the following works to detect automatically if a blank page will be issued, without convergence problems:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#outline(title: [Table of Contents])\n#metadata(none)&lt;outline-end&gt;\n\n#context if calc.odd(locate(&lt;outline-end&gt;).page()) {\n  page(footer: none, none)\n}\n#set page(footer: footer-numbering())\n#counter(page).update(1)\n\n= First Chapter\n</code></pre>",
      "raw": "It seems the following works to detect automatically if a blank page will be issued, without convergence problems:\n\n```typ\n#outline(title: [Table of Contents])\n#metadata(none)<outline-end>\n\n#context if calc.odd(locate(<outline-end>).page()) {\n  page(footer: none, none)\n}\n#set page(footer: footer-numbering())\n#counter(page).update(1)\n\n= First Chapter\n```",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 26,
      "score": 40.2,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 332
    },
    {
      "id": 9457,
      "post_number": 6,
      "username": "Yannick_Lapointe",
      "name": "Yannick Lapointe",
      "created_at": "2025-03-06T18:24:45.244Z",
      "updated_at": "2025-03-06T18:24:45.244Z",
      "cooked": "<p>Simple but effective, thanks!</p>",
      "raw": "Simple but effective, thanks!",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 23,
      "score": 24.6,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 460
    }
  ],
  "scraped_at": "2025-06-10T09:50:37.938189"
}