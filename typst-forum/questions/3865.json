{
  "topic_metadata": {
    "id": 3865,
    "title": "How to interpret Hayagriva data as content instead of strings?",
    "slug": "how-to-interpret-hayagriva-data-as-content-instead-of-strings",
    "posts_count": 7,
    "created_at": "2025-04-29T07:59:12.786Z",
    "last_posted_at": "2025-05-06T15:26:16.408Z",
    "views": 95,
    "like_count": 4,
    "reply_count": 3,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 3,
    "accepted_answer_username": "SillyFreak",
    "tags": [
      "hayagriva"
    ],
    "category_id": 5,
    "participant_count": 4,
    "word_count": 681
  },
  "posts": [
    {
      "id": 11768,
      "post_number": 1,
      "username": "Mr.Selfridge",
      "name": "",
      "created_at": "2025-04-29T07:59:12.877Z",
      "updated_at": "2025-05-05T22:18:23.975Z",
      "cooked": "<p>Typst reads bibliography data - like the title - from a Hayagriva file. Is there any way I could make Typst interpret that data as content so that I could, for example, use smallcaps in the title read from the file?</p>\n<p>I’d like to be able to do something like this:</p>\n<pre><code class=\"lang-auto\">wold:\n  type: article\n  author:\n    - Doe, J.\n  title: The Title with #smallcaps[smallcaps]\n</code></pre>\n<p>Is this possible now or even remotely possible at some point?</p>",
      "raw": "Typst reads bibliography data - like the title - from a Hayagriva file. Is there any way I could make Typst interpret that data as content so that I could, for example, use smallcaps in the title read from the file?\n\nI'd like to be able to do something like this:\n\n```\nwold:\n  type: article\n  author:\n    - Doe, J.\n  title: The Title with #smallcaps[smallcaps]\n```\n\nIs this possible now or even remotely possible at some point?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 35,
      "score": 37.0,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 77
    },
    {
      "id": 11781,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-04-29T12:21:19.755Z",
      "updated_at": "2025-04-29T12:21:19.755Z",
      "cooked": "<p>For the code block, you should use <code>yml</code> or <code>yaml</code> code identifier to get appropriate syntax highlighting.</p>\n<hr>\n<p><a href=\"https://github.com/typst/hayagriva/blob/d6212750ffe4ffa310e03451701c0ff5aa982c9e/docs/file-format.md?plain=1#L433\" rel=\"noopener nofollow ugc\">You can use math mode inside some fields</a>:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let bib = ```yaml\nwold:\n  type: article\n  author:\n    - Doe, J.\n  title: The Title with $x^2$\n```.text\n\n#bibliography(bytes(bib), full: true)\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/5/5093f0af08fc646800a284ce8f5519ebf191aa1d.png\" alt=\"image\" data-base62-sha1=\"buP9NjsVxxt5cFgsqHDd5nPXkrb\" width=\"227\" height=\"54\"></p>\n<p>But there is no way to use code mode. You can try changing CSL file by applying same styling for specific part of entry, or create an issue about it.</p>\n<aside class=\"onebox githubissue\" data-onebox-src=\"https://github.com/typst/typst/issues/942\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/typst/typst/issues/942\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/typst/typst</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n  <div class=\"github-icon-container\" title=\"Issue\" data-github-private-repo=\"false\">\n\t  <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 14 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"></path></svg>\n  </div>\n\n  <div class=\"github-info-container\">\n    <h4>\n      <a href=\"https://github.com/typst/typst/issues/942\" target=\"_blank\" rel=\"noopener nofollow ugc\">Bibliography customization from within Typst</a>\n    </h4>\n\n    <div class=\"github-info\">\n      <div class=\"date\">\n        opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2023-04-23\" data-time=\"09:36:35\" data-timezone=\"UTC\">09:36AM - 23 Apr 23 UTC</span>\n      </div>\n\n\n      <div class=\"user\">\n        <a href=\"https://github.com/YJDoc2\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n          <img alt=\"YJDoc2\" src=\"https://forum.typst.app/uploads/default/original/2X/6/6e364f87ee869707dc02a6966cd84391f07d5935.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"E9D4EC\">\n          YJDoc2\n        </a>\n      </div>\n    </div>\n\n    <div class=\"labels\">\n        <span style=\"display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;\">\n          feature request\n        </span>\n        <span style=\"display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;\">\n          bibliography\n        </span>\n    </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">Current `#bibliography` function is great with three inbuilt styles, until some <span class=\"show-more-container\"><a href=\"\" rel=\"noopener\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">journal requires the bibliography to be set in their own specific style. Can we have some way to customize the format of bibliography, at least in what order various elements appear, and their style ; or a way to provide a callback function which will accept the reference number and reference data (from .bib file or other) and return `Content` .\n\nThank you!</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<aside class=\"onebox githubissue\" data-onebox-src=\"https://github.com/typst/typst/issues/1220\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/typst/typst/issues/1220\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/typst/typst</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n  <div class=\"github-icon-container\" title=\"Issue\" data-github-private-repo=\"false\">\n\t  <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 14 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"></path></svg>\n  </div>\n\n  <div class=\"github-info-container\">\n    <h4>\n      <a href=\"https://github.com/typst/typst/issues/1220\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add function/parameter to manipulate raw data from a bibliography entry</a>\n    </h4>\n\n    <div class=\"github-info\">\n      <div class=\"date\">\n        opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2023-05-16\" data-time=\"15:57:01\" data-timezone=\"UTC\">03:57PM - 16 May 23 UTC</span>\n      </div>\n\n\n      <div class=\"user\">\n        <a href=\"https://github.com/PgBiel\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n          <img alt=\"PgBiel\" src=\"https://forum.typst.app/uploads/default/original/2X/4/459a78d8edc06648a0a2ca0ccd796760d981fe3e.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"93BA72\">\n          PgBiel\n        </a>\n      </div>\n    </div>\n\n    <div class=\"labels\">\n        <span style=\"display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;\">\n          feature request\n        </span>\n        <span style=\"display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;\">\n          scripting\n        </span>\n        <span style=\"display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;\">\n          bibliography\n        </span>\n    </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">### Description\n\nSo, we have been discussing on Discord regarding bibliography<span class=\"show-more-container\"><a href=\"\" rel=\"noopener\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\"> improvements (such as those mentioned in #1139), and we thought that a good first step to an overall improvement of the bibliography system would be to add a function or parameter callback that, given a bibliography entry's label, we'd obtain access to the raw data of that entry (as specified in `.bib` or `.yml`), in the form of a dict, and use that to display some content (e.g. just the 'authors' field).\n\nInitially, we thought it could be done with some separate function such as `#cite.entry(\"name\")` (we also thought about a method on `cite` objects, but that didn't sound appropriate). Then it could return a dict like (in JSON syntax) `{ \"authors\": [\"a\", \"b\"], \"year\": \"1923\", ... }`.\n\nHowever, it was shown by Laurenz to not be that simple, as bibliography data is loaded asynchronously (i.e. `#bibliography` can be anywhere in the document), so we can't expect to have `#cite` data available at any point (we'd require some callback business like `locate`).\n\nSo, instead, we thought of having custom styles with callbacks, like `#cite(style: (entry1, entry2, ...) =&gt; content, \"label1\", \"label2\", ...)`. That way, one can not only extract raw data for cites and convert it to content (in any way that is desirable), but also apply some global custom format for `cite`s if they want to (with `#set cite(style: ...)`).\n\n### Use Case\n\nSuch a feature would allow arbitrary manipulation of bibliography data (other than reading and parsing the bibliography files directly, which would be annoying), and would enable workarounds for most limitations in the current bibliography system right now (e.g. to cite just the author of a certain entry, instead of the full citation or just the `[number]`, or to make custom citation styles, which isn't currently possible).\n\nWorth saying that this approach wouldn't risk (at least directly) a breaking change in the future, as one can stay using dicts with styles forever if they want to (without issue), even once we add helper functions/syntax/etc. to extract authors and other stuff in a simpler and formatted manner.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n",
      "raw": "For the code block, you should use `yml` or `yaml` code identifier to get appropriate syntax highlighting.\n\n---\n\n[You can use math mode inside some fields](https://github.com/typst/hayagriva/blob/d6212750ffe4ffa310e03451701c0ff5aa982c9e/docs/file-format.md?plain=1#L433):\n\n````typ\n#let bib = ```yaml\nwold:\n  type: article\n  author:\n    - Doe, J.\n  title: The Title with $x^2$\n```.text\n\n#bibliography(bytes(bib), full: true)\n````\n\n![image|227x54](upload://buP9NjsVxxt5cFgsqHDd5nPXkrb.png)\n\nBut there is no way to use code mode. You can try changing CSL file by applying same styling for specific part of entry, or create an issue about it.\n\nhttps://github.com/typst/typst/issues/942\n\nhttps://github.com/typst/typst/issues/1220",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 32,
      "score": 11.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 11955,
      "post_number": 3,
      "username": "SillyFreak",
      "name": "SillyFreak",
      "created_at": "2025-05-04T12:19:10.871Z",
      "updated_at": "2025-05-05T19:40:53.412Z",
      "cooked": "<p>Note that your example bibliography astually has a yaml comment instead of the text <code>#smallcaps[smallcaps]</code> in it. Your bibliography needs to at least read</p>\n<pre data-code-wrap=\"yaml\"><code class=\"lang-yaml\">wold:\n  type: article\n  author:\n    - Doe, J.\n  title: \"The Title with #smallcaps[smallcaps]\"\n</code></pre>\n<p>Now the question is: can we make Typst interpret any Typst markup in the title? The answer is: basically yes</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let bib = ```yaml\nwold:\n  type: article\n  author:\n    - Doe, J.\n  title: \"The Title with #smallcaps[smallcaps]\"\n```.text\n\n#show bibliography: it =&gt; {\n  show text: it =&gt; {\n    // we must not attempt to evaluate text that is not valid markup\n    // thankfully most text _is_, but unbalanced closing brackets don't work\n    if it.text == \"]\" { return it }\n\n    // evaluate any formatting\n    let result = eval(it.text, mode: \"markup\")\n    // if nothing was formatted, return the original content\n    // to avoid infinite recursion\n    if result.func() == text { return it }\n\n    // emit the formatted content\n    result\n  }\n  it\n}\n\n#bibliography(bytes(bib), full: true)\n</code></pre>\n<p>The show rule here uses <code>eval()</code> to format <em>any</em> text in the bibliography. <strong>This may result in false positives!</strong> It’s now necessary for you to ensure any bibliography content is valid Typst markup!</p>\n<p>Since formatted text is also text, the show rule here needs to guard against recursion. I’m doing this by checking whether the formatting result is anything other than a simple text.</p>\n<p>Hope this helps! <img src=\"https://forum.typst.app/images/emoji/apple/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "Note that your example bibliography astually has a yaml comment instead of the text `#smallcaps[smallcaps]` in it. Your bibliography needs to at least read \n\n```yaml\nwold:\n  type: article\n  author:\n    - Doe, J.\n  title: \"The Title with #smallcaps[smallcaps]\"\n```\n\nNow the question is: can we make Typst interpret any Typst markup in the title? The answer is: basically yes\n\n```typ\n#let bib = ```yaml\nwold:\n  type: article\n  author:\n    - Doe, J.\n  title: \"The Title with #smallcaps[smallcaps]\"\n```.text\n\n#show bibliography: it => {\n  show text: it => {\n    // we must not attempt to evaluate text that is not valid markup\n    // thankfully most text _is_, but unbalanced closing brackets don't work\n    if it.text == \"]\" { return it }\n\n    // evaluate any formatting\n    let result = eval(it.text, mode: \"markup\")\n    // if nothing was formatted, return the original content\n    // to avoid infinite recursion\n    if result.func() == text { return it }\n\n    // emit the formatted content\n    result\n  }\n  it\n}\n\n#bibliography(bytes(bib), full: true)\n```\n\nThe show rule here uses `eval()` to format _any_ text in the bibliography. **This may result in false positives!** It's now necessary for you to ensure any bibliography content is valid Typst markup!\n\nSince formatted text is also text, the show rule here needs to guard against recursion. I'm doing this by checking whether the formatting result is anything other than a simple text.\n\nHope this helps! :slight_smile:",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 19,
      "score": 33.8,
      "accepted_answer": true,
      "trust_level": 3,
      "user_id": 32
    },
    {
      "id": 12007,
      "post_number": 4,
      "username": "PgBiel",
      "name": "",
      "created_at": "2025-05-05T22:24:11.086Z",
      "updated_at": "2025-05-05T22:24:11.086Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Andrew\" data-post=\"2\" data-topic=\"3865\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/andrew/48/62_2.png\" class=\"avatar\"> Andrew:</div>\n<blockquote>\n<p>But there is no way to use code mode.</p>\n</blockquote>\n</aside>\n<p>There is:</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">#let bib = ```yaml\nwold:\n  type: article\n  author:\n    - Doe, J.\n  title: \"The Title with $#smallcaps(text(font: \\\"Libertinus Serif\\\")[SmallCaps])$\"\n```.text\n\n#bibliography(bytes(bib), full: true)\n</code></pre>\n<p><img src=\"https://forum.typst.app/uploads/default/original/2X/5/51fc26f650141935972a81aa3932c9745f68dcf0.png\" alt=\"&quot;The Title with SmallCaps&quot; with correct formatting\" data-base62-sha1=\"bHgUl1nehkz78kyXJBVXizdQ7sY\" width=\"450\" height=\"192\"></p>\n<p>It can probably be improved, but that’s a start.</p>",
      "raw": "[quote=\"Andrew, post:2, topic:3865\"]\nBut there is no way to use code mode.\n[/quote]\n\nThere is:\n\n```typ\n#let bib = ```yaml\nwold:\n  type: article\n  author:\n    - Doe, J.\n  title: \"The Title with $#smallcaps(text(font: \\\"Libertinus Serif\\\")[SmallCaps])$\"\n```.text\n\n#bibliography(bytes(bib), full: true)\n```\n![\"The Title with SmallCaps\" with correct formatting|450x192](upload://bHgUl1nehkz78kyXJBVXizdQ7sY.png)\n\nIt can probably be improved, but that's a start.",
      "reply_to_post_number": 2,
      "reply_count": 1,
      "quote_count": 1,
      "like_count": 1,
      "reads": 17,
      "score": 53.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 12011,
      "post_number": 5,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-05-05T22:47:58.537Z",
      "updated_at": "2025-05-05T22:47:58.537Z",
      "cooked": "<p>Okay, that’s just cheating, you know what I meant. Besides, I’m not sure which stuff will behave differently when called from within math mode. Like the fact that you have to wrap text into function to get non-math font. At least that.</p>",
      "raw": "Okay, that's just cheating, you know what I meant. Besides, I'm not sure which stuff will behave differently when called from within math mode. Like the fact that you have to wrap text into function to get non-math font. At least that.",
      "reply_to_post_number": 4,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 17,
      "score": 8.4,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 12012,
      "post_number": 6,
      "username": "PgBiel",
      "name": "",
      "created_at": "2025-05-05T22:54:13.974Z",
      "updated_at": "2025-05-05T22:54:30.512Z",
      "cooked": "<aside class=\"quote no-group\" data-username=\"Andrew\" data-post=\"5\" data-topic=\"3865\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/andrew/48/62_2.png\" class=\"avatar\"> Andrew:</div>\n<blockquote>\n<p>Okay, that’s just cheating, you know what I meant.</p>\n</blockquote>\n</aside>\n<p>It’s not “cheating”, your statement read as it being impossible to use anything from code mode in the current state, so I pointed out that it is actually possible. But I’m not claiming that you deliberately omitted this information, as you could simply not have known, which is OK. What matters is that what I provided is one possible solution - there are certainly others!</p>\n<aside class=\"quote no-group\" data-username=\"Andrew\" data-post=\"5\" data-topic=\"3865\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/andrew/48/62_2.png\" class=\"avatar\"> Andrew:</div>\n<blockquote>\n<p>Besides, I’m not sure which stuff will behave differently when called from within math mode. Like the fact that you have to wrap text into function to get non-math font.</p>\n</blockquote>\n</aside>\n<p>It’s not perfect, but it’s doing what they asked for, so <img src=\"https://forum.typst.app/images/emoji/apple/person_shrugging.png?v=12\" title=\":person_shrugging:\" class=\"emoji\" alt=\":person_shrugging:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>",
      "raw": "[quote=\"Andrew, post:5, topic:3865\"]\nOkay, that’s just cheating, you know what I meant.\n[/quote]\n\nIt's not \"cheating\", your statement read as it being impossible to use anything from code mode in the current state, so I pointed out that it is actually possible. But I'm not claiming that you deliberately omitted this information, as you could simply not have known, which is OK. What matters is that what I provided is one possible solution - there are certainly others!\n\n[quote=\"Andrew, post:5, topic:3865\"]\nBesides, I’m not sure which stuff will behave differently when called from within math mode. Like the fact that you have to wrap text into function to get non-math font.\n[/quote]\n\nIt's not perfect, but it's doing what they asked for, so :person_shrugging:",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 1,
      "like_count": 1,
      "reads": 16,
      "score": 18.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 3
    },
    {
      "id": 12053,
      "post_number": 7,
      "username": "Mr.Selfridge",
      "name": "",
      "created_at": "2025-05-06T15:26:16.408Z",
      "updated_at": "2025-05-06T15:26:16.408Z",
      "cooked": "<p>Great, thanks for all the solutions, these definitely help! It would be cool to natively process bibliography entries with Typst but as always, I guess it is not as trivial as I might think.</p>",
      "raw": "Great, thanks for all the solutions, these definitely help! It would be cool to natively process bibliography entries with Typst but as always, I guess it is not as trivial as I might think.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 16,
      "score": 8.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 77
    }
  ],
  "scraped_at": "2025-06-10T09:48:30.376094"
}