{
  "topic_metadata": {
    "id": 3408,
    "title": "How to customize codly raw blocks?",
    "slug": "how-to-customize-codly-raw-blocks",
    "posts_count": 10,
    "created_at": "2025-03-26T12:26:17.251Z",
    "last_posted_at": "2025-03-28T15:01:19.529Z",
    "views": 111,
    "like_count": 3,
    "reply_count": 4,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 4,
    "accepted_answer_username": "Dherse",
    "tags": [
      "codly"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 789
  },
  "posts": [
    {
      "id": 10269,
      "post_number": 1,
      "username": "maxigaz",
      "name": "maxigaz",
      "created_at": "2025-03-26T12:26:17.396Z",
      "updated_at": "2025-03-26T12:58:06.279Z",
      "cooked": "<p>I recently asked the question <a href=\"https://forum.typst.app/t/how-can-i-include-user-privilege-indicators-in-shell-prompts-while-keeping-syntax-highlighting-enabled-in-codeblocks/3382\">How can I include user privilege indicators in shell prompts while keeping syntax highlighting enabled in codeblocks?</a> The solution I recieved works well for regular raw blocks. My question is, how can I apply it to <a href=\"https://typst.app/universe/package/codly\">codly</a>?</p>\n<p>To recap, I would like to place <code>$</code> or <code>#</code> at the beginning of Linux shell prompt snippets while keeping syntax highlighting, like so:</p>\n<pre data-code-wrap=\"console\"><code class=\"lang-console\">$ chmod test.sh\n# chown user test.sh\n</code></pre>\n<p>Currently, when I try the show rule included in the answer, it seems to disable codly’s formatting for subsequent raw blocks.</p>\n<pre data-code-wrap=\"typ\"><code class=\"lang-typ\">\n#import \"@preview/codly:1.2.0\": *\n#import \"@preview/codly-languages:0.1.1\": *\n#show: codly-init.with()\n\nBefore applying custom show rule:\n\n```console\n$ chmod test.sh\n# chown user test.sh\n```\n\n#show raw: set text(font: \"DejaVu Sans Mono\", size: 1.11em)\n#show raw.where(lang: \"console\"): it =&gt; {\n  let user = emph(raw(\"$ \"))\n  let root = emph(raw(\"# \"))\n  it\n    .text\n    .split(\"\\n\")\n    .map(line =&gt; {\n      let starts(pattern) = line.starts-with(pattern)\n      let prefix = if starts(\"$ \") { user } else if starts(\"# \") { root }\n      let text = line.replace(regex(\"^[$#] \"), \"\")\n      prefix + raw(text, lang: \"sh\")\n    })\n    .join(\"\\n\")\n}\n\nAfter applying custom show rule:\n\n```console\n$ chmod test.sh\n# chown user test.sh\n```\n</code></pre>\n<details>\n<summary>\nScreenshot</summary>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/e/ec5ef882371d4615183762503c13409c4094fd0e.png\" data-download-href=\"https://forum.typst.app/uploads/default/ec5ef882371d4615183762503c13409c4094fd0e\" title=\"typst-raw-original-v-codly\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/e/ec5ef882371d4615183762503c13409c4094fd0e_2_690x260.png\" alt=\"typst-raw-original-v-codly\" data-base62-sha1=\"xJ29J5CwqVv6YlULoJPVJ4IPlym\" width=\"690\" height=\"260\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/e/ec5ef882371d4615183762503c13409c4094fd0e_2_690x260.png, https://forum.typst.app/uploads/default/original/2X/e/ec5ef882371d4615183762503c13409c4094fd0e.png 1.5x, https://forum.typst.app/uploads/default/original/2X/e/ec5ef882371d4615183762503c13409c4094fd0e.png 2x\" data-dominant-color=\"F6F6F6\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">typst-raw-original-v-codly</span><span class=\"informations\">719×271 28.9 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>\n</details>",
      "raw": "I recently asked the question [How can I include user privilege indicators in shell prompts while keeping syntax highlighting enabled in codeblocks?](https://forum.typst.app/t/how-can-i-include-user-privilege-indicators-in-shell-prompts-while-keeping-syntax-highlighting-enabled-in-codeblocks/3382) The solution I recieved works well for regular raw blocks. My question is, how can I apply it to [codly](https://typst.app/universe/package/codly)?\n\nTo recap, I would like to place `$` or `#` at the beginning of Linux shell prompt snippets while keeping syntax highlighting, like so:\n\n```console\n$ chmod test.sh\n# chown user test.sh\n```\n\nCurrently, when I try the show rule included in the answer, it seems to disable codly's formatting for subsequent raw blocks.\n\n~~~typ\n\n#import \"@preview/codly:1.2.0\": *\n#import \"@preview/codly-languages:0.1.1\": *\n#show: codly-init.with()\n\nBefore applying custom show rule:\n\n```console\n$ chmod test.sh\n# chown user test.sh\n```\n\n#show raw: set text(font: \"DejaVu Sans Mono\", size: 1.11em)\n#show raw.where(lang: \"console\"): it => {\n  let user = emph(raw(\"$ \"))\n  let root = emph(raw(\"# \"))\n  it\n    .text\n    .split(\"\\n\")\n    .map(line => {\n      let starts(pattern) = line.starts-with(pattern)\n      let prefix = if starts(\"$ \") { user } else if starts(\"# \") { root }\n      let text = line.replace(regex(\"^[$#] \"), \"\")\n      prefix + raw(text, lang: \"sh\")\n    })\n    .join(\"\\n\")\n}\n\nAfter applying custom show rule:\n\n```console\n$ chmod test.sh\n# chown user test.sh\n```\n~~~\n\n[details=\"Screenshot\"]\n![typst-raw-original-v-codly|690x260](upload://xJ29J5CwqVv6YlULoJPVJ4IPlym.png)\n[/details]",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 41,
      "score": 138.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 738
    },
    {
      "id": 10292,
      "post_number": 2,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-03-26T16:05:15.655Z",
      "updated_at": "2025-03-26T16:07:21.466Z",
      "cooked": "<p>Yeah, I think Codly is not meant to be used with custom raw show rules. I also had an issue when I tried to do similar stuff. I even tried using <code>__codly-raw</code>, but it doesn’t work, because it’s meant to be use on raw element and not any content, like in the custom show rule you show. So I think you’re better off recreating parts of Codly yourself or finding other packages. showybox is good. Initially I hand-rolled my frame and layout, but it was absolutely horribly written, so at some point I switched to showybox, but it was still messy, so I finally just switched to Codly, and I like it.</p>\n<p>You can open an issue in its repository and ask if there can be a solution for this.</p>",
      "raw": "Yeah, I think Codly is not meant to be used with custom raw show rules. I also had an issue when I tried to do similar stuff. I even tried using `__codly-raw`, but it doesn't work, because it's meant to be use on raw element and not any content, like in the custom show rule you show. So I think you're better off recreating parts of Codly yourself or finding other packages. showybox is good. Initially I hand-rolled my frame and layout, but it was absolutely horribly written, so at some point I switched to showybox, but it was still messy, so I finally just switched to Codly, and I like it.\n\nYou can open an issue in its repository and ask if there can be a solution for this.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 40,
      "score": 13.0,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 10360,
      "post_number": 3,
      "username": "maxigaz",
      "name": "maxigaz",
      "created_at": "2025-03-28T12:31:10.862Z",
      "updated_at": "2025-03-28T12:31:10.862Z",
      "cooked": "<p><a class=\"mention\" href=\"/u/dherse\">@Dherse</a> (I hope you don’t mind getting pinged here): Do you have any suggestions about this issue?</p>",
      "raw": "@Dherse (I hope you don't mind getting pinged here): Do you have any suggestions about this issue?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 30,
      "score": 6.0,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 738
    },
    {
      "id": 10362,
      "post_number": 4,
      "username": "Dherse",
      "name": "Sébastien d'Herbais de Thun",
      "created_at": "2025-03-28T13:36:59.175Z",
      "updated_at": "2025-03-28T13:36:59.175Z",
      "cooked": "<p>I like the idea actually, I am thinking of adding a “transformer” API to allow people to “transform” content, but I don’t know how and where to include it. The problem of your show rule is that it does not produce a new raw block. You should use raw line show rules: <a href=\"https://typst.app/project/rAjWZKSZFgdcjtjIZeSrDY\" class=\"inline-onebox\">Typst</a></p>",
      "raw": "I like the idea actually, I am thinking of adding a \"transformer\" API to allow people to \"transform\" content, but I don't know how and where to include it. The problem of your show rule is that it does not produce a new raw block. You should use raw line show rules: https://typst.app/project/rAjWZKSZFgdcjtjIZeSrDY",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 28,
      "score": 35.6,
      "accepted_answer": true,
      "trust_level": 1,
      "user_id": 137
    },
    {
      "id": 10363,
      "post_number": 5,
      "username": "maxigaz",
      "name": "maxigaz",
      "created_at": "2025-03-28T13:55:31.758Z",
      "updated_at": "2025-03-28T14:05:47.454Z",
      "cooked": "<p>Thank you for your reply (and also for this wonderful package)!</p>\n<p>I would like to use syntax highlighting that is normally applied for the <code>lang</code> setting <code>sh</code> (except it should be isolated from  <code>$</code> and <code>#</code>).</p>\n<p>When I try editing the project you shared on my machine in order to achieve that, I get the error <code>maximum show rule depth exceeded</code>. I modified line 24 like so:</p>\n<pre data-code-wrap=\"diff\"><code class=\"lang-diff\">  #show raw: set text(font: \"DejaVu Sans Mono\", size: 1.11em)\n  #show raw.where(lang: \"console\"): it =&gt; {\n    show raw.line: it =&gt; {\n      let user = emph((\"$ \"))\n      let root = emph((\"# \"))\n      it\n        .text\n        .split(\"\\n\")\n        .map(line =&gt; {\n          let starts(pattern) = line.starts-with(pattern)\n          let prefix = if starts(\"$ \") { user } else if starts(\"# \") { root }\n          let text = line.replace(regex(\"^[$#] \"), \"\")\n-         prefix + text\n+         prefix + raw(text, lang: \"sh\")\n        })\n        .join(\"\\n\")\n    }\n    it\n  }\n</code></pre>",
      "raw": "Thank you for your reply (and also for this wonderful package)!\n\nI would like to use syntax highlighting that is normally applied for the `lang` setting `sh` (except it should be isolated from  `$` and `#`).\n\nWhen I try editing the project you shared on my machine in order to achieve that, I get the error `maximum show rule depth exceeded`. I modified line 24 like so:\n\n```diff\n  #show raw: set text(font: \"DejaVu Sans Mono\", size: 1.11em)\n  #show raw.where(lang: \"console\"): it => {\n    show raw.line: it => {\n      let user = emph((\"$ \"))\n      let root = emph((\"# \"))\n      it\n        .text\n        .split(\"\\n\")\n        .map(line => {\n          let starts(pattern) = line.starts-with(pattern)\n          let prefix = if starts(\"$ \") { user } else if starts(\"# \") { root }\n          let text = line.replace(regex(\"^[$#] \"), \"\")\n-         prefix + text\n+         prefix + raw(text, lang: \"sh\")\n        })\n        .join(\"\\n\")\n    }\n    it\n  }\n```",
      "reply_to_post_number": 4,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 0,
      "reads": 27,
      "score": 10.4,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 738
    },
    {
      "id": 10364,
      "post_number": 6,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-03-28T14:06:18.576Z",
      "updated_at": "2025-03-28T14:06:18.576Z",
      "cooked": "<p>That is exactly what I was talking about here:</p>\n<aside class=\"quote no-group\" data-username=\"Andrew\" data-post=\"2\" data-topic=\"3382\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://forum.typst.app/user_avatar/forum.typst.app/andrew/48/62_2.png\" class=\"avatar\"><a href=\"https://forum.typst.app/t/how-can-i-include-user-privilege-indicators-in-shell-prompts-while-keeping-syntax-highlighting-enabled-in-codeblocks/3382/2\">How can I include user privilege indicators in shell prompts while keeping syntax highlighting enabled in codeblocks?</a></div>\n<blockquote>\n<p>I tried using <code>show raw.line</code> inside <code>show raw.where(lang: \"console\")</code>, but I hit infinite show rule recursion and I don’t know if it is fixable.</p>\n</blockquote>\n</aside>",
      "raw": "That is exactly what I was talking about here:\n\n[quote=\"Andrew, post:2, topic:3382\"]\nI tried using `show raw.line` inside `show raw.where(lang: \"console\")`, but I hit infinite show rule recursion and I don’t know if it is fixable.\n[/quote]",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 23,
      "score": 4.6,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 10366,
      "post_number": 7,
      "username": "Dherse",
      "name": "Sébastien d'Herbais de Thun",
      "created_at": "2025-03-28T14:23:43.664Z",
      "updated_at": "2025-03-28T14:23:43.664Z",
      "cooked": "<p>Oh I see what you guys mean, lemme try something</p>",
      "raw": "Oh I see what you guys mean, lemme try something",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 21,
      "score": 4.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 137
    },
    {
      "id": 10369,
      "post_number": 8,
      "username": "Dherse",
      "name": "Sébastien d'Herbais de Thun",
      "created_at": "2025-03-28T14:41:03.777Z",
      "updated_at": "2025-03-28T14:41:03.777Z",
      "cooked": "<p>I updated the example, it should mostly work but only on single line syntaxes, syntax highlighting that spans multiple lines would not work.<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://forum.typst.app/uploads/default/original/2X/5/5f0c7d0f859956426cdf380b56524d6a42aa2d12.png\" data-download-href=\"https://forum.typst.app/uploads/default/5f0c7d0f859956426cdf380b56524d6a42aa2d12\" title=\"image\"><img src=\"https://forum.typst.app/uploads/default/optimized/2X/5/5f0c7d0f859956426cdf380b56524d6a42aa2d12_2_690x191.png\" alt=\"image\" data-base62-sha1=\"dyQ7cKj6UOuvPZwlRFfkN0IEch4\" width=\"690\" height=\"191\" srcset=\"https://forum.typst.app/uploads/default/optimized/2X/5/5f0c7d0f859956426cdf380b56524d6a42aa2d12_2_690x191.png, https://forum.typst.app/uploads/default/original/2X/5/5f0c7d0f859956426cdf380b56524d6a42aa2d12.png 1.5x, https://forum.typst.app/uploads/default/original/2X/5/5f0c7d0f859956426cdf380b56524d6a42aa2d12.png 2x\" data-dominant-color=\"F6F6F7\"><div class=\"meta\"><svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">image</span><span class=\"informations\">960×266 40 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg></div></a></div></p>",
      "raw": "I updated the example, it should mostly work but only on single line syntaxes, syntax highlighting that spans multiple lines would not work.\n![image|690x191](upload://dyQ7cKj6UOuvPZwlRFfkN0IEch4.png)",
      "reply_to_post_number": null,
      "reply_count": 2,
      "quote_count": 0,
      "like_count": 1,
      "reads": 21,
      "score": 29.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 137
    },
    {
      "id": 10370,
      "post_number": 9,
      "username": "Andrew",
      "name": "",
      "created_at": "2025-03-28T14:54:16.579Z",
      "updated_at": "2025-03-28T14:54:41.905Z",
      "cooked": "<p>So was the solution to do this?</p>\n<pre data-code-wrap=\"typc\"><code class=\"lang-typc\">  show raw.line: it =&gt; {\n    show raw.line: it =&gt; it.body\n</code></pre>\n<p>This is actually next level hackery.</p>",
      "raw": "So was the solution to do this?\n\n```typc\n  show raw.line: it => {\n    show raw.line: it => it.body\n```\n\nThis is actually next level hackery.",
      "reply_to_post_number": 8,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 1,
      "reads": 21,
      "score": 19.2,
      "accepted_answer": false,
      "trust_level": 3,
      "user_id": 51
    },
    {
      "id": 10371,
      "post_number": 10,
      "username": "maxigaz",
      "name": "maxigaz",
      "created_at": "2025-03-28T15:01:19.529Z",
      "updated_at": "2025-03-28T15:04:17.045Z",
      "cooked": "<p>Nice! It’s <em>almost</em> perfect for my needs!</p>\n<p>The only remaining thing I’m wondering about is how to make the font size the same as for other codly raw blocks. I’m noticing that both in the screenshot (and also on my machine, after I compile the code), that the font size is slightly bigger, which is especially noticable when I compare the word <code>console</code> on the right between the two snippets.</p>\n<p>(Setting <code>size</code> exactly to <code>1.11em</code> was my idea, originating from the other thread about regular (non-Codly) raw blocks, as it looked very similar in size to vanilla raw blocks.)</p>",
      "raw": "Nice! It's _almost_ perfect for my needs!\n\nThe only remaining thing I'm wondering about is how to make the font size the same as for other codly raw blocks. I'm noticing that both in the screenshot (and also on my machine, after I compile the code), that the font size is slightly bigger, which is especially noticable when I compare the word `console` on the right between the two snippets.\n\n(Setting `size` exactly to `1.11em` was my idea, originating from the other thread about regular (non-Codly) raw blocks, as it looked very similar in size to vanilla raw blocks.)",
      "reply_to_post_number": 8,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 21,
      "score": 4.2,
      "accepted_answer": false,
      "trust_level": 1,
      "user_id": 738
    }
  ],
  "scraped_at": "2025-06-10T09:49:59.458121"
}