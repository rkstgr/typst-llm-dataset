{
  "topic_metadata": {
    "id": 1768,
    "title": "How to extend blocks to bottom of page/column?",
    "slug": "how-to-extend-blocks-to-bottom-of-page-column",
    "posts_count": 6,
    "created_at": "2024-11-17T18:50:13.736Z",
    "last_posted_at": "2024-11-18T20:30:58.152Z",
    "views": 200,
    "like_count": 5,
    "reply_count": 1,
    "has_accepted_answer": true,
    "accepted_answer_post_number": 3,
    "accepted_answer_username": "Xodarap",
    "tags": [
      "layout"
    ],
    "category_id": 5,
    "participant_count": 3,
    "word_count": 1174
  },
  "posts": [
    {
      "id": 5736,
      "post_number": 1,
      "username": "miles-1",
      "name": "miles",
      "created_at": "2024-11-17T18:50:13.855Z",
      "updated_at": "2024-11-17T18:50:13.855Z",
      "cooked": "<p>I am making a poster, with the content presented in blocks in three columns. I would like all blocks to have alignment at the bottom of the poster. For example:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#set page(\"presentation-4-3\", margin: 15pt)\n#set par(first-line-indent: 1em)\n#let title(txt, sup:false) = block(text(if sup {24pt} else {15pt})[*#txt*])\n#let section(txt) = block(\n  stroke: gray + 2pt,\n  fill: gray.lighten(50%),\n  radius: 5pt,\n  width: 100%,\n  inset: 10pt,\n  txt\n)\n\n#section(align(center)[#title(sup:true)[Poster Title] #title[Subtitle]])\n#columns(\n  3, \n  gutter: 15pt, \n  for i in range(5) {\n    section[\n      #title[Section #(i+1)]\n      #lorem(28*(i+1))\n      $ (-b plus.minus sqrt(b^2 - 4 a c) ) / (2a) $\n    ]\n  }\n)\n</code></pre>\n<p>Using blocks like this works great as they spill over into the next column if necessary. However, I would like all three columns to be aligned at the bottom (like they are automatically at the top), even if it means just adding whitespace at the end. Must I do this by hand (e.g., using <code>#v()</code>), or is there a way to force the blocks to fill vertical space?</p>",
      "raw": "I am making a poster, with the content presented in blocks in three columns. I would like all blocks to have alignment at the bottom of the poster. For example:\n\n```typst\n#set page(\"presentation-4-3\", margin: 15pt)\n#set par(first-line-indent: 1em)\n#let title(txt, sup:false) = block(text(if sup {24pt} else {15pt})[*#txt*])\n#let section(txt) = block(\n  stroke: gray + 2pt,\n  fill: gray.lighten(50%),\n  radius: 5pt,\n  width: 100%,\n  inset: 10pt,\n  txt\n)\n\n#section(align(center)[#title(sup:true)[Poster Title] #title[Subtitle]])\n#columns(\n  3, \n  gutter: 15pt, \n  for i in range(5) {\n    section[\n      #title[Section #(i+1)]\n      #lorem(28*(i+1))\n      $ (-b plus.minus sqrt(b^2 - 4 a c) ) / (2a) $\n    ]\n  }\n)\n```\nUsing blocks like this works great as they spill over into the next column if necessary. However, I would like all three columns to be aligned at the bottom (like they are automatically at the top), even if it means just adding whitespace at the end. Must I do this by hand (e.g., using `#v()`), or is there a way to force the blocks to fill vertical space?",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 37,
      "score": 722.2,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 177
    },
    {
      "id": 5739,
      "post_number": 2,
      "username": "jbirnick",
      "name": "Johann Birnick",
      "created_at": "2024-11-17T19:37:45.209Z",
      "updated_at": "2024-11-17T19:37:56.290Z",
      "cooked": "<p>Good question. Something like <code>set(page: justify: true)</code> would be cool to have vertical justification.</p>",
      "raw": "Good question. Something like `set(page: justify: true)` would be cool to have vertical justification.",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 2,
      "reads": 33,
      "score": 36.4,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 218
    },
    {
      "id": 5754,
      "post_number": 3,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-18T03:57:31.448Z",
      "updated_at": "2024-11-18T04:02:35.743Z",
      "cooked": "<p>Thought 1: You can surely just add <code>#v(1fr)</code> to the bottom of the blocks you want to extend ;)</p>\n<p>Thought 2: but the example you use allows breakable blocks. I don’t know how well that works together :)</p>\n<p>Thought 3: And if you manage to make your blocks non-breakable then you might want to use <a href=\"https://typst.app/docs/reference/layout/grid/\">grid</a></p>",
      "raw": "Thought 1: You can surely just add `#v(1fr)` to the bottom of the blocks you want to extend ;)\n\nThought 2: but the example you use allows breakable blocks. I don’t know how well that works together :)\n\nThought 3: And if you manage to make your blocks non-breakable then you might want to use [grid](https://typst.app/docs/reference/layout/grid/)",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 29,
      "score": 20.6,
      "accepted_answer": true,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 5755,
      "post_number": 4,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-18T03:58:48.541Z",
      "updated_at": "2024-11-18T04:59:42.444Z",
      "cooked": "<p>You need to be somewhat more precise what you actually want. Which of the blocks should fill more vertical space? The one at the end? The block that is breaking over to the next side (I think this would be exceptionally difficult to achieve) Or some kind of space inside the blocks but (above and) below of the content so that it is the same fraction of space in every block (above and below the respective content)?</p>\n<p>And even if you have answered which of the options you want, I think it would be necessary to tell the columns where they must stop …</p>",
      "raw": "You need to be somewhat more precise what you actually want. Which of the blocks should fill more vertical space? The one at the end? The block that is breaking over to the next side (I think this would be exceptionally difficult to achieve) Or some kind of space inside the blocks but (above and) below of the content so that it is the same fraction of space in every block (above and below the respective content)?\n\nAnd even if you have answered which of the options you want, I think it would be necessary to tell the columns where they must stop ....",
      "reply_to_post_number": null,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 29,
      "score": 5.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 5758,
      "post_number": 5,
      "username": "Xodarap",
      "name": "Xodarap",
      "created_at": "2024-11-18T04:30:49.144Z",
      "updated_at": "2024-11-18T04:58:15.810Z",
      "cooked": "<p>I played around a little with the columns element etc and I think that there is no somewhat sane solution to your problem. I am really hooked by your question because I think that it’s generally a desirable outcome.</p>\n<details>\n<summary>\ninitial thoughts on the concrete problem</summary>\n<p>In any way you probably want to wrap your columns inside a bigger block which takes up the whole width and height. Like this:</p>\n<pre data-code-wrap=\"typst\"><code class=\"lang-typst\">#block(width: 100%, height: 1fr, stroke: blue,\n  columns(\n    3, \n    gutter: 15pt,\n    {\n      ...\n    }\n  )\n)\n</code></pre>\n</details>\n<p>The problem I see: What you want is some kind of <code>justify</code> but for columns instead of lines. You can imagine the three columns as three lines of written text, but instead of words they consist of blocks. What you want is, that your blocks are touching both sides, the top and the bottom. Just like the individual characters touch both sides, left and right, when you set <code>par(justify: true)</code>.</p>\n<p>iirc is the history of justifying pretty long and the techniques are very complex/sophisticated nowadays. Especially because it usually comes with hyphenation, line-wrapping and so on. In our case you would need to define what are the characters and what are break points where we could insert more whitespace and where not? Line-breaks? Do you want your lines to be have more spacing because of this? paragraph breaks? or just between blocks? (one (rather manual) solution would be to define some points inside a given bigger block which contains the three columns, and then the remaining space would be distributed between these points evenly.)</p>\n<p>On the other hand, one could argue that the machinery is already there then and especially in a framework like typst. I’d agree yes, but to be honest: I don’t have the slightest idea about all this stuff. Probably one of the maintainers could give us some insights …</p>\n<details>\n<summary>\n... not even CSS can do this (I think)</summary>\n<p>I’m really no front-end developer, but I immediately got the reference to flexbox. This is a CSS container used to layout multiple containers. And I always wondered how to do the exact same question you asked. (In this case vertically or horizontally.) I have to say that I also never really dug into it, because on websites it does not matter that much (you essentially have an infinitely long page and content changes all the time anyway). However these web-design protocols are a freaking hell and over time they implemented literally every thinkable component. How comes that they did not develop such a thing? (Maybe I just missed it, then I’d appreciate a note :))<br>\n<a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\" rel=\"noopener nofollow ugc\">concise and well illustrated summary of flexbox</a></p>\n</details>",
      "raw": "I played around a little with the columns element etc and I think that there is no somewhat sane solution to your problem. I am really hooked by your question because I think that it's generally a desirable outcome.\n\n[details=\"initial thoughts on the concrete problem\"]\nIn any way you probably want to wrap your columns inside a bigger block which takes up the whole width and height. Like this:\n```typst\n#block(width: 100%, height: 1fr, stroke: blue,\n  columns(\n    3, \n    gutter: 15pt,\n    {\n      ...\n    }\n  )\n)\n```\n[/details]\n\n\nThe problem I see: What you want is some kind of `justify` but for columns instead of lines. You can imagine the three columns as three lines of written text, but instead of words they consist of blocks. What you want is, that your blocks are touching both sides, the top and the bottom. Just like the individual characters touch both sides, left and right, when you set `par(justify: true)`.\n\niirc is the history of justifying pretty long and the techniques are very complex/sophisticated nowadays. Especially because it usually comes with hyphenation, line-wrapping and so on. In our case you would need to define what are the characters and what are break points where we could insert more whitespace and where not? Line-breaks? Do you want your lines to be have more spacing because of this? paragraph breaks? or just between blocks? (one (rather manual) solution would be to define some points inside a given bigger block which contains the three columns, and then the remaining space would be distributed between these points evenly.)\n\nOn the other hand, one could argue that the machinery is already there then and especially in a framework like typst. I'd agree yes, but to be honest: I don't have the slightest idea about all this stuff. Probably one of the maintainers could give us some insights ....\n\n\n[details=\"... not even CSS can do this (I think)\"]\nI'm really no front-end developer, but I immediately got the reference to flexbox. This is a CSS container used to layout multiple containers. And I always wondered how to do the exact same question you asked. (In this case vertically or horizontally.) I have to say that I also never really dug into it, because on websites it does not matter that much (you essentially have an infinitely long page and content changes all the time anyway). However these web-design protocols are a freaking hell and over time they implemented literally every thinkable component. How comes that they did not develop such a thing? (Maybe I just missed it, then I'd appreciate a note :))\n[concise and well illustrated summary of flexbox](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n[/details]",
      "reply_to_post_number": null,
      "reply_count": 1,
      "quote_count": 0,
      "like_count": 1,
      "reads": 29,
      "score": 35.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 797
    },
    {
      "id": 5808,
      "post_number": 6,
      "username": "miles-1",
      "name": "miles",
      "created_at": "2024-11-18T20:30:58.152Z",
      "updated_at": "2024-11-18T20:30:58.152Z",
      "cooked": "<p>I appreciate your thoughts on this <a class=\"mention\" href=\"/u/xodarap\">@Xodarap</a>! To be more explicit about what I was hoping for (though it looks like you were thinking along similar lines):</p>\n<ul>\n<li>maintain the block-breaking behavior between columns</li>\n<li>“vertically justify” the last block in each column so that their bottoms are all level with each other, even if that block breaks to the next column</li>\n<li>I’m not picky about how this vertical space is added, but it could be between paragraphs, just after the main title, or even at the bottom of the block</li>\n</ul>\n<p>I don’t know why I hadn’t thought of using <code>#v(1fr)</code>, but that is a great solution here. I added that underneath the titles of each block that was the last of the column (I preferred to have the space added there instead of between lines in a paragraph), and this worked great. However, it would be nice to have some kind of way to make the <code>#v(1fr)</code> automatically added beneath <code>title</code>s if a given <code>section</code> (referring to my example doc above) is the last one in a column. I am not sure how to detect if an object is the last item in a column, but if I did, I would include a line that says <code>if is_last() {#v(1fr)}</code> in the definition of <code>section</code>. <strong>Any suggestions on how to detect if something is the last of its kind in a column?</strong></p>\n<p>A few more thoughts:</p>\n<ul>\n<li>Given what has been said so far, as long as folks are not hoping to implement a “vertical justify” that involves changing spacing between lines, and instead just looks to change spacing between paras or at top/bottom, then implementing <code>par(justify: true)</code> might be as simple as adding <code>#v(1fr)</code> in the relevant locations during compilation.</li>\n<li>In the end, poster-making requires some manual adjustment no matter what, and I don’t expect a solution to this to make any poster look good and use space appropriately. I hope it just takes a poster that is already well-organized and then make the sections line up along their bases.</li>\n</ul>",
      "raw": "I appreciate your thoughts on this @Xodarap! To be more explicit about what I was hoping for (though it looks like you were thinking along similar lines):\n\n- maintain the block-breaking behavior between columns\n- \"vertically justify\" the last block in each column so that their bottoms are all level with each other, even if that block breaks to the next column\n- I'm not picky about how this vertical space is added, but it could be between paragraphs, just after the main title, or even at the bottom of the block\n\nI don't know why I hadn't thought of using `#v(1fr)`, but that is a great solution here. I added that underneath the titles of each block that was the last of the column (I preferred to have the space added there instead of between lines in a paragraph), and this worked great. However, it would be nice to have some kind of way to make the `#v(1fr)` automatically added beneath `title`s if a given `section` (referring to my example doc above) is the last one in a column. I am not sure how to detect if an object is the last item in a column, but if I did, I would include a line that says `if is_last() {#v(1fr)}` in the definition of `section`. __Any suggestions on how to detect if something is the last of its kind in a column?__\n\nA few more thoughts:\n- Given what has been said so far, as long as folks are not hoping to implement a \"vertical justify\" that involves changing spacing between lines, and instead just looks to change spacing between paras or at top/bottom, then implementing `par(justify: true)` might be as simple as adding `#v(1fr)` in the relevant locations during compilation.\n- In the end, poster-making requires some manual adjustment no matter what, and I don't expect a solution to this to make any poster look good and use space appropriately. I hope it just takes a poster that is already well-organized and then make the sections line up along their bases.",
      "reply_to_post_number": 5,
      "reply_count": 0,
      "quote_count": 0,
      "like_count": 0,
      "reads": 24,
      "score": 14.6,
      "accepted_answer": false,
      "trust_level": 2,
      "user_id": 177
    }
  ],
  "scraped_at": "2025-06-10T09:54:49.912002"
}